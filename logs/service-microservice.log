2025-10-23 00:00:03 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-10-23 00:00:18 [restartedMain] INFO  o.e.c.s.ServiceMicroserviceApplication - Starting ServiceMicroserviceApplication using Java 21.0.8 with PID 21768 (C:\Users\HP\IdeaProjects\service-microservice\target\classes started by HP in C:\Users\HP\IdeaProjects\service-microservice)
2025-10-23 00:00:18 [restartedMain] DEBUG o.e.c.s.ServiceMicroserviceApplication - Running with Spring Boot v3.3.4, Spring v6.1.13
2025-10-23 00:00:18 [restartedMain] INFO  o.e.c.s.ServiceMicroserviceApplication - No active profile set, falling back to 1 default profile: "default"
2025-10-23 00:00:18 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-10-23 00:00:18 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-10-23 00:00:19 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-10-23 00:00:19 [restartedMain] DEBUG o.s.d.r.c.RepositoryConfigurationDelegate - Scanning for JPA repositories in packages org.example.cuidadodemascotas.servicemicroservice.apis.repository.
2025-10-23 00:00:19 [restartedMain] DEBUG o.s.d.r.c.RepositoryComponentProvider - Identified candidate component class: file [C:\Users\HP\IdeaProjects\service-microservice\target\classes\org\example\cuidadodemascotas\servicemicroservice\apis\repository\ICarerRepository.class]
2025-10-23 00:00:19 [restartedMain] DEBUG o.s.d.r.c.RepositoryComponentProvider - Identified candidate component class: file [C:\Users\HP\IdeaProjects\service-microservice\target\classes\org\example\cuidadodemascotas\servicemicroservice\apis\repository\ServiceRepository.class]
2025-10-23 00:00:19 [restartedMain] DEBUG o.s.d.r.c.RepositoryComponentProvider - Identified candidate component class: file [C:\Users\HP\IdeaProjects\service-microservice\target\classes\org\example\cuidadodemascotas\servicemicroservice\apis\repository\ServiceTypeRepository.class]
2025-10-23 00:00:19 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 81 ms. Found 3 JPA repository interfaces.
2025-10-23 00:00:21 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8083 (http)
2025-10-23 00:00:21 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-10-23 00:00:21 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.30]
2025-10-23 00:00:21 [restartedMain] INFO  o.a.c.c.C.[.[localhost].[/api/v1] - Initializing Spring embedded WebApplicationContext
2025-10-23 00:00:21 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 3709 ms
2025-10-23 00:00:22 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-10-23 00:00:22 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.3.Final
2025-10-23 00:00:22 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-10-23 00:00:23 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-10-23 00:00:23 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-10-23 00:00:24 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@79b037e2
2025-10-23 00:00:24 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-10-23 00:00:24 [restartedMain] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-10-23 00:00:26 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-10-23 00:00:26 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-10-23 00:00:26 [restartedMain] DEBUG o.s.d.j.r.c.JpaMetamodelMappingContextFactoryBean - Initializing JpaMetamodelMappingContext…
2025-10-23 00:00:26 [restartedMain] DEBUG o.s.d.j.r.c.JpaMetamodelMappingContextFactoryBean - Finished initializing JpaMetamodelMappingContext
2025-10-23 00:00:26 [restartedMain] DEBUG o.s.d.r.c.s.RepositoryFactorySupport - Initializing repository instance for org.example.cuidadodemascotas.servicemicroservice.apis.repository.ICarerRepository…
2025-10-23 00:00:26 [restartedMain] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-10-23 00:00:26 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Did not find named query Carer.findByIdAndActiveTrue.count
2025-10-23 00:00:26 [restartedMain] DEBUG o.s.d.r.c.s.RepositoryFactorySupport - Finished creation of repository instance for org.example.cuidadodemascotas.servicemicroservice.apis.repository.ICarerRepository.
2025-10-23 00:00:26 [restartedMain] DEBUG o.s.d.r.c.s.RepositoryFactorySupport - Initializing repository instance for org.example.cuidadodemascotas.servicemicroservice.apis.repository.ServiceRepository…
2025-10-23 00:00:26 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Looking up named query Service.findByCarerIdAndActiveTrue
2025-10-23 00:00:26 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Did not find named query Service.findByCarerIdAndActiveTrue
2025-10-23 00:00:26 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Did not find named query Service.findByIdAndActiveTrue.count
2025-10-23 00:00:26 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Did not find named query Service.countByCarerId.count
2025-10-23 00:00:26 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Did not find named query Service.countByPriceRange.count
2025-10-23 00:00:26 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Did not find named query Service.findByCarerIdPaged.count
2025-10-23 00:00:27 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Did not find named query Service.findAllServices.count
2025-10-23 00:00:27 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Did not find named query Service.findByFilters.count
2025-10-23 00:00:27 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Looking up named query Service.countByActiveTrue
2025-10-23 00:00:27 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Did not find named query Service.countByActiveTrue
2025-10-23 00:00:27 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Looking up named query Service.findByServiceTypeIdAndActiveTrue
2025-10-23 00:00:27 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Did not find named query Service.findByServiceTypeIdAndActiveTrue
2025-10-23 00:00:27 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Did not find named query Service.findByCarerIdAndServiceTypeIdPaged.count
2025-10-23 00:00:27 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Looking up named query Service.countByCarerIdAndActiveTrue
2025-10-23 00:00:27 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Did not find named query Service.countByCarerIdAndActiveTrue
2025-10-23 00:00:27 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Did not find named query Service.searchByDescription.count
2025-10-23 00:00:27 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Did not find named query Service.findByServiceTypeIdPaged.count
2025-10-23 00:00:27 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Did not find named query Service.findByPriceRangePaged.count
2025-10-23 00:00:27 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Did not find named query Service.countByServiceTypeId.count
2025-10-23 00:00:27 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Did not find named query Service.findByServiceTypeIdAndPriceRangePaged.count
2025-10-23 00:00:27 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Did not find named query Service.findByCarerIdAndPriceRangePaged.count
2025-10-23 00:00:27 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Did not find named query Service.existsByCarerAndServiceType.count
2025-10-23 00:00:27 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Looking up named query Service.findByActiveTrue
2025-10-23 00:00:27 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Did not find named query Service.findByActiveTrue
2025-10-23 00:00:27 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Looking up named query Service.findByActiveTrue
2025-10-23 00:00:27 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Did not find named query Service.findByActiveTrue
2025-10-23 00:00:27 [restartedMain] DEBUG o.s.d.r.c.s.RepositoryFactorySupport - Finished creation of repository instance for org.example.cuidadodemascotas.servicemicroservice.apis.repository.ServiceRepository.
2025-10-23 00:00:27 [restartedMain] DEBUG o.s.d.r.c.s.RepositoryFactorySupport - Initializing repository instance for org.example.cuidadodemascotas.servicemicroservice.apis.repository.ServiceTypeRepository…
2025-10-23 00:00:27 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Did not find named query ServiceType.searchByName.count
2025-10-23 00:00:27 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Looking up named query ServiceType.existsByName
2025-10-23 00:00:27 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Did not find named query ServiceType.existsByName
2025-10-23 00:00:27 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Looking up named query ServiceType.existsByNameAndIdNot
2025-10-23 00:00:27 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Did not find named query ServiceType.existsByNameAndIdNot
2025-10-23 00:00:27 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Looking up named query ServiceType.findAllByOrderByNameAsc
2025-10-23 00:00:27 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Did not find named query ServiceType.findAllByOrderByNameAsc
2025-10-23 00:00:27 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Looking up named query ServiceType.findAllByOrderByNameAsc
2025-10-23 00:00:27 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Did not find named query ServiceType.findAllByOrderByNameAsc
2025-10-23 00:00:27 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Looking up named query ServiceType.findByNameIgnoreCase
2025-10-23 00:00:27 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Did not find named query ServiceType.findByNameIgnoreCase
2025-10-23 00:00:27 [restartedMain] DEBUG o.s.d.r.c.s.RepositoryFactorySupport - Finished creation of repository instance for org.example.cuidadodemascotas.servicemicroservice.apis.repository.ServiceTypeRepository.
2025-10-23 00:00:28 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-10-23 00:00:28 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8083 (http) with context path '/api/v1'
2025-10-23 00:00:28 [restartedMain] INFO  o.e.c.s.ServiceMicroserviceApplication - Started ServiceMicroserviceApplication in 10.883 seconds (process running for 12.204)
2025-10-23 00:00:28 [restartedMain] INFO  o.e.c.s.ServiceMicroserviceApplication - ========================================
2025-10-23 00:00:28 [restartedMain] INFO  o.e.c.s.ServiceMicroserviceApplication - Service Microservice Started Successfully!
2025-10-23 00:00:28 [restartedMain] INFO  o.e.c.s.ServiceMicroserviceApplication - Swagger UI: http://localhost:8083/api/v1/swagger-ui.html
2025-10-23 00:00:28 [restartedMain] INFO  o.e.c.s.ServiceMicroserviceApplication - API Docs: http://localhost:8083/api/v1/api-docs
2025-10-23 00:00:28 [restartedMain] INFO  o.e.c.s.ServiceMicroserviceApplication - ========================================
2025-10-23 00:00:30 [http-nio-8083-exec-2] INFO  o.a.c.c.C.[.[localhost].[/api/v1] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-10-23 00:00:30 [http-nio-8083-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-10-23 00:00:30 [http-nio-8083-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-10-23 00:00:32 [http-nio-8083-exec-6] INFO  o.s.api.AbstractOpenApiResource - Init duration for springdoc-openapi is: 1457 ms
2025-10-23 00:00:35 [http-nio-8083-exec-10] INFO  o.e.c.s.a.c.ServiceTypeController - GET /service-types - Getting service types (page: 0, size: 20)
2025-10-23 00:00:35 [http-nio-8083-exec-10] DEBUG o.e.c.s.a.service.ServiceTypeService - Finding all service types (page: 0, size: 20, sort: null)
2025-10-23 00:00:36 [http-nio-8083-exec-10] DEBUG org.hibernate.SQL - 
    select
        st1_0.id_service_type,
        st1_0.name 
    from
        public.service_types st1_0 
    order by
        st1_0.name 
    offset
        ? rows 
    fetch
        first ? rows only
2025-10-23 00:00:36 [http-nio-8083-exec-10] DEBUG o.e.c.s.a.c.ServiceTypeController - Returning 6 service types
2025-10-23 00:00:41 [http-nio-8083-exec-1] INFO  o.e.c.s.a.c.ServiceTypeController - GET /service-types - Getting service types (page: 0, size: 20)
2025-10-23 00:00:41 [http-nio-8083-exec-1] DEBUG o.e.c.s.a.service.ServiceTypeService - Finding all service types (page: 0, size: 20, sort: null)
2025-10-23 00:00:41 [http-nio-8083-exec-1] DEBUG org.hibernate.SQL - 
    select
        st1_0.id_service_type,
        st1_0.name 
    from
        public.service_types st1_0 
    order by
        st1_0.name 
    offset
        ? rows 
    fetch
        first ? rows only
2025-10-23 00:00:41 [http-nio-8083-exec-1] DEBUG o.e.c.s.a.c.ServiceTypeController - Returning 6 service types
2025-10-23 00:00:41 [http-nio-8083-exec-3] INFO  o.e.c.s.a.c.ServiceController - GET /services - Getting all services (page: 0, size: 100)
2025-10-23 00:00:41 [http-nio-8083-exec-3] DEBUG o.e.c.s.apis.service.ServiceService - Finding all services (page: 0, size: 100)
2025-10-23 00:00:41 [http-nio-8083-exec-3] DEBUG org.hibernate.SQL - 
    select
        s1_0.id_service,
        s1_0.active,
        s1_0.fk_carer,
        s1_0.created_at,
        s1_0.description,
        s1_0.price,
        s1_0.fk_service_type,
        s1_0.updated_at 
    from
        public.services s1_0 
    where
        s1_0.active=true 
    order by
        s1_0.id_service desc 
    fetch
        first ? rows only
2025-10-23 00:00:41 [http-nio-8083-exec-3] DEBUG o.e.c.s.a.c.ServiceController - Returning 7 services
2025-10-23 00:00:52 [http-nio-8083-exec-5] INFO  o.e.c.s.a.controller.CarerController - GET /carers-with-services/9 - Getting carer with services
2025-10-23 00:00:55 [http-nio-8083-exec-5] DEBUG o.e.c.s.apis.service.CarerService - Getting carer with services, carerId: 9
2025-10-23 00:00:55 [http-nio-8083-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_carer,
        c1_0.active,
        c1_0.amount_pet,
        c1_0.created_at,
        c1_0.enum_availability_state,
        c1_0.updated_at,
        c1_0.fk_user 
    from
        public.carers c1_0 
    where
        c1_0.id_carer=? 
        and c1_0.active=true
2025-10-23 00:00:55 [http-nio-8083-exec-5] DEBUG org.hibernate.SQL - 
    select
        s1_0.id_service,
        s1_0.active,
        s1_0.fk_carer,
        s1_0.created_at,
        s1_0.description,
        s1_0.price,
        s1_0.fk_service_type,
        s1_0.updated_at 
    from
        public.services s1_0 
    where
        s1_0.fk_carer=? 
        and s1_0.active
2025-10-23 00:00:55 [http-nio-8083-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id_user,
        u1_0.active,
        c1_0.id_carer,
        c1_0.active,
        c1_0.amount_pet,
        c1_0.created_at,
        c1_0.enum_availability_state,
        c1_0.updated_at,
        c1_0.fk_user,
        u1_0.created_at,
        u1_0.email,
        u1_0.hash_password,
        u1_0.last_name,
        u1_0.name,
        o1_0.id_owner,
        o1_0.active,
        o1_0.created_at,
        o1_0.updated_at,
        o1_0.fk_user,
        u1_0.phone_number,
        u1_0.profile_photo,
        u1_0.updated_at 
    from
        public.users u1_0 
    left join
        public.carers c1_0 
            on u1_0.id_user=c1_0.fk_user 
    left join
        public.owners o1_0 
            on u1_0.id_user=o1_0.fk_user 
    where
        u1_0.id_user=?
2025-10-23 00:00:55 [http-nio-8083-exec-7] INFO  o.e.c.s.a.c.ServiceTypeController - GET /service-types - Getting service types (page: 0, size: 20)
2025-10-23 00:00:55 [http-nio-8083-exec-7] DEBUG o.e.c.s.a.service.ServiceTypeService - Finding all service types (page: 0, size: 20, sort: null)
2025-10-23 00:00:55 [http-nio-8083-exec-7] DEBUG org.hibernate.SQL - 
    select
        st1_0.id_service_type,
        st1_0.name 
    from
        public.service_types st1_0 
    order by
        st1_0.name 
    offset
        ? rows 
    fetch
        first ? rows only
2025-10-23 00:00:55 [http-nio-8083-exec-7] DEBUG o.e.c.s.a.c.ServiceTypeController - Returning 6 service types
2025-10-23 00:00:55 [http-nio-8083-exec-6] INFO  o.e.c.s.a.c.ServiceController - GET /services/carer/9 - Getting services by carer (page: 0, size: 10)
2025-10-23 00:00:55 [http-nio-8083-exec-6] DEBUG o.e.c.s.apis.service.ServiceService - Finding services by carer id: 9 (page: 0, size: 10)
2025-10-23 00:00:55 [http-nio-8083-exec-6] DEBUG org.hibernate.SQL - 
    select
        s1_0.id_service,
        s1_0.active,
        s1_0.fk_carer,
        s1_0.created_at,
        s1_0.description,
        s1_0.price,
        s1_0.fk_service_type,
        s1_0.updated_at 
    from
        public.services s1_0 
    where
        s1_0.fk_carer=? 
        and s1_0.active=true 
    order by
        s1_0.id_service desc 
    fetch
        first ? rows only
2025-10-23 00:00:56 [http-nio-8083-exec-6] DEBUG o.e.c.s.a.c.ServiceController - Returning 1 services for carer 9
2025-10-23 00:01:05 [http-nio-8083-exec-10] INFO  o.e.c.s.a.c.ServiceTypeController - GET /service-types - Getting service types (page: 0, size: 20)
2025-10-23 00:01:06 [http-nio-8083-exec-10] DEBUG o.e.c.s.a.service.ServiceTypeService - Finding all service types (page: 0, size: 20, sort: null)
2025-10-23 00:01:06 [http-nio-8083-exec-10] DEBUG org.hibernate.SQL - 
    select
        st1_0.id_service_type,
        st1_0.name 
    from
        public.service_types st1_0 
    order by
        st1_0.name 
    offset
        ? rows 
    fetch
        first ? rows only
2025-10-23 00:01:06 [http-nio-8083-exec-10] DEBUG o.e.c.s.a.c.ServiceTypeController - Returning 6 service types
2025-10-23 00:01:06 [http-nio-8083-exec-10] INFO  o.e.c.s.a.c.ServiceController - GET /services - Getting all services (page: 0, size: 100)
2025-10-23 00:01:06 [http-nio-8083-exec-10] DEBUG o.e.c.s.apis.service.ServiceService - Finding all services (page: 0, size: 100)
2025-10-23 00:01:06 [http-nio-8083-exec-10] DEBUG org.hibernate.SQL - 
    select
        s1_0.id_service,
        s1_0.active,
        s1_0.fk_carer,
        s1_0.created_at,
        s1_0.description,
        s1_0.price,
        s1_0.fk_service_type,
        s1_0.updated_at 
    from
        public.services s1_0 
    where
        s1_0.active=true 
    order by
        s1_0.id_service desc 
    fetch
        first ? rows only
2025-10-23 00:01:06 [http-nio-8083-exec-10] DEBUG o.e.c.s.a.c.ServiceController - Returning 7 services
2025-10-23 00:01:07 [http-nio-8083-exec-2] INFO  o.e.c.s.a.controller.CarerController - GET /carers-with-services/9 - Getting carer with services
2025-10-23 00:01:07 [http-nio-8083-exec-2] DEBUG o.e.c.s.apis.service.CarerService - Getting carer with services, carerId: 9
2025-10-23 00:01:07 [http-nio-8083-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_carer,
        c1_0.active,
        c1_0.amount_pet,
        c1_0.created_at,
        c1_0.enum_availability_state,
        c1_0.updated_at,
        c1_0.fk_user 
    from
        public.carers c1_0 
    where
        c1_0.id_carer=? 
        and c1_0.active=true
2025-10-23 00:01:07 [http-nio-8083-exec-2] DEBUG org.hibernate.SQL - 
    select
        s1_0.id_service,
        s1_0.active,
        s1_0.fk_carer,
        s1_0.created_at,
        s1_0.description,
        s1_0.price,
        s1_0.fk_service_type,
        s1_0.updated_at 
    from
        public.services s1_0 
    where
        s1_0.fk_carer=? 
        and s1_0.active
2025-10-23 00:01:07 [http-nio-8083-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id_user,
        u1_0.active,
        c1_0.id_carer,
        c1_0.active,
        c1_0.amount_pet,
        c1_0.created_at,
        c1_0.enum_availability_state,
        c1_0.updated_at,
        c1_0.fk_user,
        u1_0.created_at,
        u1_0.email,
        u1_0.hash_password,
        u1_0.last_name,
        u1_0.name,
        o1_0.id_owner,
        o1_0.active,
        o1_0.created_at,
        o1_0.updated_at,
        o1_0.fk_user,
        u1_0.phone_number,
        u1_0.profile_photo,
        u1_0.updated_at 
    from
        public.users u1_0 
    left join
        public.carers c1_0 
            on u1_0.id_user=c1_0.fk_user 
    left join
        public.owners o1_0 
            on u1_0.id_user=o1_0.fk_user 
    where
        u1_0.id_user=?
2025-10-23 00:01:08 [http-nio-8083-exec-9] INFO  o.e.c.s.a.c.ServiceTypeController - GET /service-types - Getting service types (page: 0, size: 20)
2025-10-23 00:01:08 [http-nio-8083-exec-9] DEBUG o.e.c.s.a.service.ServiceTypeService - Finding all service types (page: 0, size: 20, sort: null)
2025-10-23 00:01:08 [http-nio-8083-exec-9] DEBUG org.hibernate.SQL - 
    select
        st1_0.id_service_type,
        st1_0.name 
    from
        public.service_types st1_0 
    order by
        st1_0.name 
    offset
        ? rows 
    fetch
        first ? rows only
2025-10-23 00:01:08 [http-nio-8083-exec-9] DEBUG o.e.c.s.a.c.ServiceTypeController - Returning 6 service types
2025-10-23 00:01:08 [http-nio-8083-exec-1] INFO  o.e.c.s.a.c.ServiceController - GET /services/carer/9 - Getting services by carer (page: 0, size: 10)
2025-10-23 00:01:08 [http-nio-8083-exec-1] DEBUG o.e.c.s.apis.service.ServiceService - Finding services by carer id: 9 (page: 0, size: 10)
2025-10-23 00:01:08 [http-nio-8083-exec-1] DEBUG org.hibernate.SQL - 
    select
        s1_0.id_service,
        s1_0.active,
        s1_0.fk_carer,
        s1_0.created_at,
        s1_0.description,
        s1_0.price,
        s1_0.fk_service_type,
        s1_0.updated_at 
    from
        public.services s1_0 
    where
        s1_0.fk_carer=? 
        and s1_0.active=true 
    order by
        s1_0.id_service desc 
    fetch
        first ? rows only
2025-10-23 00:01:08 [http-nio-8083-exec-1] DEBUG o.e.c.s.a.c.ServiceController - Returning 1 services for carer 9
2025-10-23 00:01:16 [http-nio-8083-exec-4] INFO  o.e.c.s.a.c.ServiceTypeController - GET /service-types - Getting service types (page: 0, size: 20)
2025-10-23 00:01:16 [http-nio-8083-exec-4] DEBUG o.e.c.s.a.service.ServiceTypeService - Finding all service types (page: 0, size: 20, sort: null)
2025-10-23 00:01:16 [http-nio-8083-exec-4] DEBUG org.hibernate.SQL - 
    select
        st1_0.id_service_type,
        st1_0.name 
    from
        public.service_types st1_0 
    order by
        st1_0.name 
    offset
        ? rows 
    fetch
        first ? rows only
2025-10-23 00:01:16 [http-nio-8083-exec-4] DEBUG o.e.c.s.a.c.ServiceTypeController - Returning 6 service types
2025-10-23 00:01:16 [http-nio-8083-exec-5] INFO  o.e.c.s.a.c.ServiceController - GET /services - Getting all services (page: 0, size: 100)
2025-10-23 00:01:16 [http-nio-8083-exec-5] DEBUG o.e.c.s.apis.service.ServiceService - Finding all services (page: 0, size: 100)
2025-10-23 00:01:16 [http-nio-8083-exec-5] DEBUG org.hibernate.SQL - 
    select
        s1_0.id_service,
        s1_0.active,
        s1_0.fk_carer,
        s1_0.created_at,
        s1_0.description,
        s1_0.price,
        s1_0.fk_service_type,
        s1_0.updated_at 
    from
        public.services s1_0 
    where
        s1_0.active=true 
    order by
        s1_0.id_service desc 
    fetch
        first ? rows only
2025-10-23 00:01:16 [http-nio-8083-exec-5] DEBUG o.e.c.s.a.c.ServiceController - Returning 7 services
2025-10-23 00:01:34 [http-nio-8083-exec-6] INFO  o.e.c.s.a.c.ServiceTypeController - GET /service-types - Getting service types (page: 0, size: 20)
2025-10-23 00:01:34 [http-nio-8083-exec-6] DEBUG o.e.c.s.a.service.ServiceTypeService - Finding all service types (page: 0, size: 20, sort: null)
2025-10-23 00:01:34 [http-nio-8083-exec-6] DEBUG org.hibernate.SQL - 
    select
        st1_0.id_service_type,
        st1_0.name 
    from
        public.service_types st1_0 
    order by
        st1_0.name 
    offset
        ? rows 
    fetch
        first ? rows only
2025-10-23 00:01:34 [http-nio-8083-exec-6] DEBUG o.e.c.s.a.c.ServiceTypeController - Returning 6 service types
2025-10-23 00:01:34 [http-nio-8083-exec-8] INFO  o.e.c.s.a.c.ServiceController - GET /services - Getting all services (page: 0, size: 100)
2025-10-23 00:01:34 [http-nio-8083-exec-8] DEBUG o.e.c.s.apis.service.ServiceService - Finding all services (page: 0, size: 100)
2025-10-23 00:01:34 [http-nio-8083-exec-8] DEBUG org.hibernate.SQL - 
    select
        s1_0.id_service,
        s1_0.active,
        s1_0.fk_carer,
        s1_0.created_at,
        s1_0.description,
        s1_0.price,
        s1_0.fk_service_type,
        s1_0.updated_at 
    from
        public.services s1_0 
    where
        s1_0.active=true 
    order by
        s1_0.id_service desc 
    fetch
        first ? rows only
2025-10-23 00:01:34 [http-nio-8083-exec-8] DEBUG o.e.c.s.a.c.ServiceController - Returning 7 services
2025-10-23 00:02:10 [http-nio-8083-exec-2] INFO  o.e.c.s.a.c.ServiceTypeController - GET /service-types - Getting service types (page: 0, size: 20)
2025-10-23 00:02:10 [http-nio-8083-exec-2] DEBUG o.e.c.s.a.service.ServiceTypeService - Finding all service types (page: 0, size: 20, sort: null)
2025-10-23 00:02:10 [http-nio-8083-exec-2] DEBUG org.hibernate.SQL - 
    select
        st1_0.id_service_type,
        st1_0.name 
    from
        public.service_types st1_0 
    order by
        st1_0.name 
    offset
        ? rows 
    fetch
        first ? rows only
2025-10-23 00:02:10 [http-nio-8083-exec-2] DEBUG o.e.c.s.a.c.ServiceTypeController - Returning 6 service types
2025-10-23 00:02:10 [http-nio-8083-exec-9] INFO  o.e.c.s.a.c.ServiceController - GET /services - Getting all services (page: 0, size: 100)
2025-10-23 00:02:10 [http-nio-8083-exec-9] DEBUG o.e.c.s.apis.service.ServiceService - Finding all services (page: 0, size: 100)
2025-10-23 00:02:10 [http-nio-8083-exec-9] DEBUG org.hibernate.SQL - 
    select
        s1_0.id_service,
        s1_0.active,
        s1_0.fk_carer,
        s1_0.created_at,
        s1_0.description,
        s1_0.price,
        s1_0.fk_service_type,
        s1_0.updated_at 
    from
        public.services s1_0 
    where
        s1_0.active=true 
    order by
        s1_0.id_service desc 
    fetch
        first ? rows only
2025-10-23 00:02:10 [http-nio-8083-exec-9] DEBUG o.e.c.s.a.c.ServiceController - Returning 7 services
2025-10-23 00:03:45 [http-nio-8083-exec-3] INFO  o.e.c.s.a.controller.CarerController - GET /carers-with-services/9 - Getting carer with services
2025-10-23 00:03:45 [http-nio-8083-exec-3] DEBUG o.e.c.s.apis.service.CarerService - Getting carer with services, carerId: 9
2025-10-23 00:03:45 [http-nio-8083-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_carer,
        c1_0.active,
        c1_0.amount_pet,
        c1_0.created_at,
        c1_0.enum_availability_state,
        c1_0.updated_at,
        c1_0.fk_user 
    from
        public.carers c1_0 
    where
        c1_0.id_carer=? 
        and c1_0.active=true
2025-10-23 00:03:46 [http-nio-8083-exec-3] DEBUG org.hibernate.SQL - 
    select
        s1_0.id_service,
        s1_0.active,
        s1_0.fk_carer,
        s1_0.created_at,
        s1_0.description,
        s1_0.price,
        s1_0.fk_service_type,
        s1_0.updated_at 
    from
        public.services s1_0 
    where
        s1_0.fk_carer=? 
        and s1_0.active
2025-10-23 00:03:46 [http-nio-8083-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id_user,
        u1_0.active,
        c1_0.id_carer,
        c1_0.active,
        c1_0.amount_pet,
        c1_0.created_at,
        c1_0.enum_availability_state,
        c1_0.updated_at,
        c1_0.fk_user,
        u1_0.created_at,
        u1_0.email,
        u1_0.hash_password,
        u1_0.last_name,
        u1_0.name,
        o1_0.id_owner,
        o1_0.active,
        o1_0.created_at,
        o1_0.updated_at,
        o1_0.fk_user,
        u1_0.phone_number,
        u1_0.profile_photo,
        u1_0.updated_at 
    from
        public.users u1_0 
    left join
        public.carers c1_0 
            on u1_0.id_user=c1_0.fk_user 
    left join
        public.owners o1_0 
            on u1_0.id_user=o1_0.fk_user 
    where
        u1_0.id_user=?
2025-10-23 00:03:46 [http-nio-8083-exec-4] INFO  o.e.c.s.a.c.ServiceTypeController - GET /service-types - Getting service types (page: 0, size: 20)
2025-10-23 00:03:46 [http-nio-8083-exec-4] DEBUG o.e.c.s.a.service.ServiceTypeService - Finding all service types (page: 0, size: 20, sort: null)
2025-10-23 00:03:46 [http-nio-8083-exec-4] DEBUG org.hibernate.SQL - 
    select
        st1_0.id_service_type,
        st1_0.name 
    from
        public.service_types st1_0 
    order by
        st1_0.name 
    offset
        ? rows 
    fetch
        first ? rows only
2025-10-23 00:03:46 [http-nio-8083-exec-4] DEBUG o.e.c.s.a.c.ServiceTypeController - Returning 6 service types
2025-10-23 00:03:46 [http-nio-8083-exec-5] INFO  o.e.c.s.a.c.ServiceController - GET /services/carer/9 - Getting services by carer (page: 0, size: 10)
2025-10-23 00:03:46 [http-nio-8083-exec-5] DEBUG o.e.c.s.apis.service.ServiceService - Finding services by carer id: 9 (page: 0, size: 10)
2025-10-23 00:03:46 [http-nio-8083-exec-5] DEBUG org.hibernate.SQL - 
    select
        s1_0.id_service,
        s1_0.active,
        s1_0.fk_carer,
        s1_0.created_at,
        s1_0.description,
        s1_0.price,
        s1_0.fk_service_type,
        s1_0.updated_at 
    from
        public.services s1_0 
    where
        s1_0.fk_carer=? 
        and s1_0.active=true 
    order by
        s1_0.id_service desc 
    fetch
        first ? rows only
2025-10-23 00:03:46 [http-nio-8083-exec-5] DEBUG o.e.c.s.a.c.ServiceController - Returning 1 services for carer 9
2025-10-23 00:03:56 [http-nio-8083-exec-7] INFO  o.e.c.s.a.c.ServiceTypeController - GET /service-types - Getting service types (page: 0, size: 20)
2025-10-23 00:03:56 [http-nio-8083-exec-7] DEBUG o.e.c.s.a.service.ServiceTypeService - Finding all service types (page: 0, size: 20, sort: null)
2025-10-23 00:03:56 [http-nio-8083-exec-7] DEBUG org.hibernate.SQL - 
    select
        st1_0.id_service_type,
        st1_0.name 
    from
        public.service_types st1_0 
    order by
        st1_0.name 
    offset
        ? rows 
    fetch
        first ? rows only
2025-10-23 00:03:56 [http-nio-8083-exec-7] DEBUG o.e.c.s.a.c.ServiceTypeController - Returning 6 service types
2025-10-23 00:03:56 [http-nio-8083-exec-6] INFO  o.e.c.s.a.c.ServiceController - GET /services - Getting all services (page: 0, size: 100)
2025-10-23 00:03:56 [http-nio-8083-exec-6] DEBUG o.e.c.s.apis.service.ServiceService - Finding all services (page: 0, size: 100)
2025-10-23 00:03:56 [http-nio-8083-exec-6] DEBUG org.hibernate.SQL - 
    select
        s1_0.id_service,
        s1_0.active,
        s1_0.fk_carer,
        s1_0.created_at,
        s1_0.description,
        s1_0.price,
        s1_0.fk_service_type,
        s1_0.updated_at 
    from
        public.services s1_0 
    where
        s1_0.active=true 
    order by
        s1_0.id_service desc 
    fetch
        first ? rows only
2025-10-23 00:03:56 [http-nio-8083-exec-6] DEBUG o.e.c.s.a.c.ServiceController - Returning 7 services
2025-10-23 00:05:48 [http-nio-8083-exec-10] INFO  o.e.c.s.a.c.ServiceTypeController - GET /service-types - Getting service types (page: 0, size: 20)
2025-10-23 00:05:49 [http-nio-8083-exec-10] DEBUG o.e.c.s.a.service.ServiceTypeService - Finding all service types (page: 0, size: 20, sort: null)
2025-10-23 00:05:49 [http-nio-8083-exec-10] DEBUG org.hibernate.SQL - 
    select
        st1_0.id_service_type,
        st1_0.name 
    from
        public.service_types st1_0 
    order by
        st1_0.name 
    offset
        ? rows 
    fetch
        first ? rows only
2025-10-23 00:05:49 [http-nio-8083-exec-10] DEBUG o.e.c.s.a.c.ServiceTypeController - Returning 6 service types
2025-10-23 00:05:49 [http-nio-8083-exec-2] INFO  o.e.c.s.a.c.ServiceController - GET /services - Getting all services (page: 0, size: 100)
2025-10-23 00:05:49 [http-nio-8083-exec-2] DEBUG o.e.c.s.apis.service.ServiceService - Finding all services (page: 0, size: 100)
2025-10-23 00:05:49 [http-nio-8083-exec-2] DEBUG org.hibernate.SQL - 
    select
        s1_0.id_service,
        s1_0.active,
        s1_0.fk_carer,
        s1_0.created_at,
        s1_0.description,
        s1_0.price,
        s1_0.fk_service_type,
        s1_0.updated_at 
    from
        public.services s1_0 
    where
        s1_0.active=true 
    order by
        s1_0.id_service desc 
    fetch
        first ? rows only
2025-10-23 00:05:49 [http-nio-8083-exec-2] DEBUG o.e.c.s.a.c.ServiceController - Returning 7 services
2025-10-23 00:05:55 [http-nio-8083-exec-1] INFO  o.e.c.s.a.c.ServiceTypeController - GET /service-types - Getting service types (page: 0, size: 20)
2025-10-23 00:05:55 [http-nio-8083-exec-1] DEBUG o.e.c.s.a.service.ServiceTypeService - Finding all service types (page: 0, size: 20, sort: null)
2025-10-23 00:05:55 [http-nio-8083-exec-1] DEBUG org.hibernate.SQL - 
    select
        st1_0.id_service_type,
        st1_0.name 
    from
        public.service_types st1_0 
    order by
        st1_0.name 
    offset
        ? rows 
    fetch
        first ? rows only
2025-10-23 00:05:55 [http-nio-8083-exec-1] DEBUG o.e.c.s.a.c.ServiceTypeController - Returning 6 service types
2025-10-23 00:05:55 [http-nio-8083-exec-3] INFO  o.e.c.s.a.c.ServiceController - GET /services - Getting all services (page: 0, size: 100)
2025-10-23 00:05:55 [http-nio-8083-exec-3] DEBUG o.e.c.s.apis.service.ServiceService - Finding all services (page: 0, size: 100)
2025-10-23 00:05:55 [http-nio-8083-exec-3] DEBUG org.hibernate.SQL - 
    select
        s1_0.id_service,
        s1_0.active,
        s1_0.fk_carer,
        s1_0.created_at,
        s1_0.description,
        s1_0.price,
        s1_0.fk_service_type,
        s1_0.updated_at 
    from
        public.services s1_0 
    where
        s1_0.active=true 
    order by
        s1_0.id_service desc 
    fetch
        first ? rows only
2025-10-23 00:05:55 [http-nio-8083-exec-3] DEBUG o.e.c.s.a.c.ServiceController - Returning 7 services
2025-10-23 00:06:04 [http-nio-8083-exec-5] INFO  o.e.c.s.a.c.ServiceTypeController - GET /service-types - Getting service types (page: 0, size: 20)
2025-10-23 00:06:04 [http-nio-8083-exec-5] DEBUG o.e.c.s.a.service.ServiceTypeService - Finding all service types (page: 0, size: 20, sort: null)
2025-10-23 00:06:04 [http-nio-8083-exec-5] DEBUG org.hibernate.SQL - 
    select
        st1_0.id_service_type,
        st1_0.name 
    from
        public.service_types st1_0 
    order by
        st1_0.name 
    offset
        ? rows 
    fetch
        first ? rows only
2025-10-23 00:06:04 [http-nio-8083-exec-5] DEBUG o.e.c.s.a.c.ServiceTypeController - Returning 6 service types
2025-10-23 00:06:04 [http-nio-8083-exec-7] INFO  o.e.c.s.a.c.ServiceController - GET /services - Getting all services (page: 0, size: 100)
2025-10-23 00:06:04 [http-nio-8083-exec-7] DEBUG o.e.c.s.apis.service.ServiceService - Finding all services (page: 0, size: 100)
2025-10-23 00:06:04 [http-nio-8083-exec-7] DEBUG org.hibernate.SQL - 
    select
        s1_0.id_service,
        s1_0.active,
        s1_0.fk_carer,
        s1_0.created_at,
        s1_0.description,
        s1_0.price,
        s1_0.fk_service_type,
        s1_0.updated_at 
    from
        public.services s1_0 
    where
        s1_0.active=true 
    order by
        s1_0.id_service desc 
    fetch
        first ? rows only
2025-10-23 00:06:04 [http-nio-8083-exec-7] DEBUG o.e.c.s.a.c.ServiceController - Returning 7 services
2025-10-23 00:08:20 [http-nio-8083-exec-8] INFO  o.e.c.s.a.c.ServiceTypeController - GET /service-types - Getting service types (page: 0, size: 20)
2025-10-23 00:08:20 [http-nio-8083-exec-8] DEBUG o.e.c.s.a.service.ServiceTypeService - Finding all service types (page: 0, size: 20, sort: null)
2025-10-23 00:08:20 [http-nio-8083-exec-8] DEBUG org.hibernate.SQL - 
    select
        st1_0.id_service_type,
        st1_0.name 
    from
        public.service_types st1_0 
    order by
        st1_0.name 
    offset
        ? rows 
    fetch
        first ? rows only
2025-10-23 00:08:20 [http-nio-8083-exec-8] DEBUG o.e.c.s.a.c.ServiceTypeController - Returning 6 service types
2025-10-23 00:08:20 [http-nio-8083-exec-10] INFO  o.e.c.s.a.c.ServiceController - GET /services - Getting all services (page: 0, size: 100)
2025-10-23 00:08:20 [http-nio-8083-exec-10] DEBUG o.e.c.s.apis.service.ServiceService - Finding all services (page: 0, size: 100)
2025-10-23 00:08:20 [http-nio-8083-exec-10] DEBUG org.hibernate.SQL - 
    select
        s1_0.id_service,
        s1_0.active,
        s1_0.fk_carer,
        s1_0.created_at,
        s1_0.description,
        s1_0.price,
        s1_0.fk_service_type,
        s1_0.updated_at 
    from
        public.services s1_0 
    where
        s1_0.active=true 
    order by
        s1_0.id_service desc 
    fetch
        first ? rows only
2025-10-23 00:08:20 [http-nio-8083-exec-10] DEBUG o.e.c.s.a.c.ServiceController - Returning 7 services
2025-10-23 00:08:27 [http-nio-8083-exec-9] INFO  o.e.c.s.a.c.ServiceTypeController - GET /service-types - Getting service types (page: 0, size: 20)
2025-10-23 00:08:27 [http-nio-8083-exec-9] DEBUG o.e.c.s.a.service.ServiceTypeService - Finding all service types (page: 0, size: 20, sort: null)
2025-10-23 00:08:27 [http-nio-8083-exec-9] DEBUG org.hibernate.SQL - 
    select
        st1_0.id_service_type,
        st1_0.name 
    from
        public.service_types st1_0 
    order by
        st1_0.name 
    offset
        ? rows 
    fetch
        first ? rows only
2025-10-23 00:08:27 [http-nio-8083-exec-9] DEBUG o.e.c.s.a.c.ServiceTypeController - Returning 6 service types
2025-10-23 00:08:27 [http-nio-8083-exec-1] INFO  o.e.c.s.a.c.ServiceController - GET /services - Getting all services (page: 0, size: 100)
2025-10-23 00:08:27 [http-nio-8083-exec-1] DEBUG o.e.c.s.apis.service.ServiceService - Finding all services (page: 0, size: 100)
2025-10-23 00:08:27 [http-nio-8083-exec-1] DEBUG org.hibernate.SQL - 
    select
        s1_0.id_service,
        s1_0.active,
        s1_0.fk_carer,
        s1_0.created_at,
        s1_0.description,
        s1_0.price,
        s1_0.fk_service_type,
        s1_0.updated_at 
    from
        public.services s1_0 
    where
        s1_0.active=true 
    order by
        s1_0.id_service desc 
    fetch
        first ? rows only
2025-10-23 00:08:27 [http-nio-8083-exec-1] DEBUG o.e.c.s.a.c.ServiceController - Returning 7 services
2025-10-23 00:08:38 [http-nio-8083-exec-4] INFO  o.e.c.s.a.c.ServiceTypeController - GET /service-types - Getting service types (page: 0, size: 20)
2025-10-23 00:08:38 [http-nio-8083-exec-4] DEBUG o.e.c.s.a.service.ServiceTypeService - Finding all service types (page: 0, size: 20, sort: null)
2025-10-23 00:08:38 [http-nio-8083-exec-4] DEBUG org.hibernate.SQL - 
    select
        st1_0.id_service_type,
        st1_0.name 
    from
        public.service_types st1_0 
    order by
        st1_0.name 
    offset
        ? rows 
    fetch
        first ? rows only
2025-10-23 00:08:39 [http-nio-8083-exec-4] DEBUG o.e.c.s.a.c.ServiceTypeController - Returning 6 service types
2025-10-23 00:08:39 [http-nio-8083-exec-5] INFO  o.e.c.s.a.c.ServiceController - GET /services - Getting all services (page: 0, size: 100)
2025-10-23 00:08:39 [http-nio-8083-exec-5] DEBUG o.e.c.s.apis.service.ServiceService - Finding all services (page: 0, size: 100)
2025-10-23 00:08:39 [http-nio-8083-exec-5] DEBUG org.hibernate.SQL - 
    select
        s1_0.id_service,
        s1_0.active,
        s1_0.fk_carer,
        s1_0.created_at,
        s1_0.description,
        s1_0.price,
        s1_0.fk_service_type,
        s1_0.updated_at 
    from
        public.services s1_0 
    where
        s1_0.active=true 
    order by
        s1_0.id_service desc 
    fetch
        first ? rows only
2025-10-23 00:08:39 [http-nio-8083-exec-5] DEBUG o.e.c.s.a.c.ServiceController - Returning 7 services
2025-10-23 00:10:19 [http-nio-8083-exec-6] INFO  o.e.c.s.a.c.ServiceTypeController - GET /service-types - Getting service types (page: 0, size: 20)
2025-10-23 00:10:19 [http-nio-8083-exec-6] DEBUG o.e.c.s.a.service.ServiceTypeService - Finding all service types (page: 0, size: 20, sort: null)
2025-10-23 00:10:19 [http-nio-8083-exec-6] DEBUG org.hibernate.SQL - 
    select
        st1_0.id_service_type,
        st1_0.name 
    from
        public.service_types st1_0 
    order by
        st1_0.name 
    offset
        ? rows 
    fetch
        first ? rows only
2025-10-23 00:10:19 [http-nio-8083-exec-6] DEBUG o.e.c.s.a.c.ServiceTypeController - Returning 6 service types
2025-10-23 00:10:19 [http-nio-8083-exec-8] INFO  o.e.c.s.a.c.ServiceController - GET /services - Getting all services (page: 0, size: 100)
2025-10-23 00:10:19 [http-nio-8083-exec-8] DEBUG o.e.c.s.apis.service.ServiceService - Finding all services (page: 0, size: 100)
2025-10-23 00:10:19 [http-nio-8083-exec-8] DEBUG org.hibernate.SQL - 
    select
        s1_0.id_service,
        s1_0.active,
        s1_0.fk_carer,
        s1_0.created_at,
        s1_0.description,
        s1_0.price,
        s1_0.fk_service_type,
        s1_0.updated_at 
    from
        public.services s1_0 
    where
        s1_0.active=true 
    order by
        s1_0.id_service desc 
    fetch
        first ? rows only
2025-10-23 00:10:20 [http-nio-8083-exec-8] DEBUG o.e.c.s.a.c.ServiceController - Returning 7 services
2025-10-23 00:13:42 [http-nio-8083-exec-2] INFO  o.e.c.s.a.c.ServiceTypeController - GET /service-types - Getting service types (page: 0, size: 20)
2025-10-23 00:13:42 [http-nio-8083-exec-2] DEBUG o.e.c.s.a.service.ServiceTypeService - Finding all service types (page: 0, size: 20, sort: null)
2025-10-23 00:13:42 [http-nio-8083-exec-2] DEBUG org.hibernate.SQL - 
    select
        st1_0.id_service_type,
        st1_0.name 
    from
        public.service_types st1_0 
    order by
        st1_0.name 
    offset
        ? rows 
    fetch
        first ? rows only
2025-10-23 00:13:42 [http-nio-8083-exec-2] DEBUG o.e.c.s.a.c.ServiceTypeController - Returning 6 service types
2025-10-23 00:13:48 [http-nio-8083-exec-1] INFO  o.e.c.s.a.c.ServiceTypeController - GET /service-types - Getting service types (page: 0, size: 20)
2025-10-23 00:13:48 [http-nio-8083-exec-1] DEBUG o.e.c.s.a.service.ServiceTypeService - Finding all service types (page: 0, size: 20, sort: null)
2025-10-23 00:13:48 [http-nio-8083-exec-1] DEBUG org.hibernate.SQL - 
    select
        st1_0.id_service_type,
        st1_0.name 
    from
        public.service_types st1_0 
    order by
        st1_0.name 
    offset
        ? rows 
    fetch
        first ? rows only
2025-10-23 00:13:48 [http-nio-8083-exec-1] DEBUG o.e.c.s.a.c.ServiceTypeController - Returning 6 service types
2025-10-23 00:14:58 [http-nio-8083-exec-4] INFO  o.e.c.s.a.c.ServiceTypeController - GET /service-types - Getting service types (page: 0, size: 20)
2025-10-23 00:14:58 [http-nio-8083-exec-4] DEBUG o.e.c.s.a.service.ServiceTypeService - Finding all service types (page: 0, size: 20, sort: null)
2025-10-23 00:14:58 [http-nio-8083-exec-4] DEBUG org.hibernate.SQL - 
    select
        st1_0.id_service_type,
        st1_0.name 
    from
        public.service_types st1_0 
    order by
        st1_0.name 
    offset
        ? rows 
    fetch
        first ? rows only
2025-10-23 00:14:58 [http-nio-8083-exec-4] DEBUG o.e.c.s.a.c.ServiceTypeController - Returning 6 service types
2025-10-23 00:15:02 [http-nio-8083-exec-5] INFO  o.e.c.s.a.c.ServiceTypeController - GET /service-types - Getting service types (page: 0, size: 20)
2025-10-23 00:15:04 [http-nio-8083-exec-5] DEBUG o.e.c.s.a.service.ServiceTypeService - Finding all service types (page: 0, size: 20, sort: null)
2025-10-23 00:15:04 [http-nio-8083-exec-5] DEBUG org.hibernate.SQL - 
    select
        st1_0.id_service_type,
        st1_0.name 
    from
        public.service_types st1_0 
    order by
        st1_0.name 
    offset
        ? rows 
    fetch
        first ? rows only
2025-10-23 00:15:04 [http-nio-8083-exec-5] DEBUG o.e.c.s.a.c.ServiceTypeController - Returning 6 service types
2025-10-23 00:18:36 [http-nio-8083-exec-6] INFO  o.e.c.s.a.c.ServiceTypeController - GET /service-types - Getting service types (page: 0, size: 20)
2025-10-23 00:18:36 [http-nio-8083-exec-6] DEBUG o.e.c.s.a.service.ServiceTypeService - Finding all service types (page: 0, size: 20, sort: null)
2025-10-23 00:18:36 [http-nio-8083-exec-6] DEBUG org.hibernate.SQL - 
    select
        st1_0.id_service_type,
        st1_0.name 
    from
        public.service_types st1_0 
    order by
        st1_0.name 
    offset
        ? rows 
    fetch
        first ? rows only
2025-10-23 00:18:36 [http-nio-8083-exec-6] DEBUG o.e.c.s.a.c.ServiceTypeController - Returning 6 service types
2025-10-23 00:18:39 [http-nio-8083-exec-8] INFO  o.e.c.s.a.c.ServiceTypeController - GET /service-types - Getting service types (page: 0, size: 20)
2025-10-23 00:18:41 [http-nio-8083-exec-8] DEBUG o.e.c.s.a.service.ServiceTypeService - Finding all service types (page: 0, size: 20, sort: null)
2025-10-23 00:18:41 [http-nio-8083-exec-8] DEBUG org.hibernate.SQL - 
    select
        st1_0.id_service_type,
        st1_0.name 
    from
        public.service_types st1_0 
    order by
        st1_0.name 
    offset
        ? rows 
    fetch
        first ? rows only
2025-10-23 00:18:41 [http-nio-8083-exec-8] DEBUG o.e.c.s.a.c.ServiceTypeController - Returning 6 service types
2025-10-23 00:18:44 [http-nio-8083-exec-10] INFO  o.e.c.s.a.c.ServiceTypeController - GET /service-types - Getting service types (page: 0, size: 20)
2025-10-23 00:18:44 [http-nio-8083-exec-10] DEBUG o.e.c.s.a.service.ServiceTypeService - Finding all service types (page: 0, size: 20, sort: null)
2025-10-23 00:18:44 [http-nio-8083-exec-10] DEBUG org.hibernate.SQL - 
    select
        st1_0.id_service_type,
        st1_0.name 
    from
        public.service_types st1_0 
    order by
        st1_0.name 
    offset
        ? rows 
    fetch
        first ? rows only
2025-10-23 00:18:44 [http-nio-8083-exec-10] DEBUG o.e.c.s.a.c.ServiceTypeController - Returning 6 service types
2025-10-23 00:18:44 [http-nio-8083-exec-2] ERROR o.e.c.s.e.GlobalExceptionHandler - Internal Server Error: 
org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' is not supported
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.handleNoMatch(RequestMappingInfoHandlerMapping.java:267)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.lookupHandlerMethod(AbstractHandlerMethodMapping.java:441)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.getHandlerInternal(AbstractHandlerMethodMapping.java:382)
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:127)
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:68)
	at org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:507)
	at org.springframework.web.servlet.DispatcherServlet.getHandler(DispatcherServlet.java:1284)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1065)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:384)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-10-23 00:18:44 [http-nio-8083-exec-2] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' is not supported]
2025-10-23 00:20:05 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-10-23 00:20:05 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-10-23 00:20:05 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-10-23 00:20:47 [restartedMain] INFO  o.e.c.s.ServiceMicroserviceApplication - Starting ServiceMicroserviceApplication using Java 21.0.8 with PID 3460 (C:\Users\HP\IdeaProjects\service-microservice\target\classes started by HP in C:\Users\HP\IdeaProjects\service-microservice)
2025-10-23 00:20:47 [restartedMain] DEBUG o.e.c.s.ServiceMicroserviceApplication - Running with Spring Boot v3.3.4, Spring v6.1.13
2025-10-23 00:20:47 [restartedMain] INFO  o.e.c.s.ServiceMicroserviceApplication - No active profile set, falling back to 1 default profile: "default"
2025-10-23 00:20:47 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-10-23 00:20:47 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-10-23 00:20:48 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-10-23 00:20:48 [restartedMain] DEBUG o.s.d.r.c.RepositoryConfigurationDelegate - Scanning for JPA repositories in packages org.example.cuidadodemascotas.servicemicroservice.apis.repository.
2025-10-23 00:20:48 [restartedMain] DEBUG o.s.d.r.c.RepositoryComponentProvider - Identified candidate component class: file [C:\Users\HP\IdeaProjects\service-microservice\target\classes\org\example\cuidadodemascotas\servicemicroservice\apis\repository\ICarerRepository.class]
2025-10-23 00:20:48 [restartedMain] DEBUG o.s.d.r.c.RepositoryComponentProvider - Identified candidate component class: file [C:\Users\HP\IdeaProjects\service-microservice\target\classes\org\example\cuidadodemascotas\servicemicroservice\apis\repository\ServiceRepository.class]
2025-10-23 00:20:48 [restartedMain] DEBUG o.s.d.r.c.RepositoryComponentProvider - Identified candidate component class: file [C:\Users\HP\IdeaProjects\service-microservice\target\classes\org\example\cuidadodemascotas\servicemicroservice\apis\repository\ServiceTypeRepository.class]
2025-10-23 00:20:48 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 77 ms. Found 3 JPA repository interfaces.
2025-10-23 00:20:49 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8083 (http)
2025-10-23 00:20:49 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-10-23 00:20:49 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.30]
2025-10-23 00:20:49 [restartedMain] INFO  o.a.c.c.C.[.[localhost].[/api/v1] - Initializing Spring embedded WebApplicationContext
2025-10-23 00:20:49 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2520 ms
2025-10-23 00:20:50 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-10-23 00:20:50 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.3.Final
2025-10-23 00:20:50 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-10-23 00:20:50 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-10-23 00:20:50 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-10-23 00:20:51 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@4a75da76
2025-10-23 00:20:51 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-10-23 00:20:52 [restartedMain] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-10-23 00:20:53 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-10-23 00:20:53 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-10-23 00:20:53 [restartedMain] DEBUG o.s.d.j.r.c.JpaMetamodelMappingContextFactoryBean - Initializing JpaMetamodelMappingContext…
2025-10-23 00:20:53 [restartedMain] DEBUG o.s.d.j.r.c.JpaMetamodelMappingContextFactoryBean - Finished initializing JpaMetamodelMappingContext
2025-10-23 00:20:54 [restartedMain] DEBUG o.s.d.r.c.s.RepositoryFactorySupport - Initializing repository instance for org.example.cuidadodemascotas.servicemicroservice.apis.repository.ICarerRepository…
2025-10-23 00:20:54 [restartedMain] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-10-23 00:20:54 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Did not find named query Carer.findByIdAndActiveTrue.count
2025-10-23 00:20:54 [restartedMain] DEBUG o.s.d.r.c.s.RepositoryFactorySupport - Finished creation of repository instance for org.example.cuidadodemascotas.servicemicroservice.apis.repository.ICarerRepository.
2025-10-23 00:20:54 [restartedMain] DEBUG o.s.d.r.c.s.RepositoryFactorySupport - Initializing repository instance for org.example.cuidadodemascotas.servicemicroservice.apis.repository.ServiceRepository…
2025-10-23 00:20:54 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Looking up named query Service.countByActiveTrue
2025-10-23 00:20:54 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Did not find named query Service.countByActiveTrue
2025-10-23 00:20:54 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Did not find named query Service.countByCarerId.count
2025-10-23 00:20:54 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Did not find named query Service.countByPriceRange.count
2025-10-23 00:20:54 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Did not find named query Service.findByCarerIdPaged.count
2025-10-23 00:20:54 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Did not find named query Service.findByFilters.count
2025-10-23 00:20:54 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Did not find named query Service.findAllServices.count
2025-10-23 00:20:54 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Did not find named query Service.searchByDescription.count
2025-10-23 00:20:54 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Did not find named query Service.countByServiceTypeId.count
2025-10-23 00:20:54 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Did not find named query Service.findByIdAndActiveTrue.count
2025-10-23 00:20:54 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Looking up named query Service.findByCarerIdAndActiveTrue
2025-10-23 00:20:54 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Did not find named query Service.findByCarerIdAndActiveTrue
2025-10-23 00:20:54 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Did not find named query Service.findByServiceTypeIdPaged.count
2025-10-23 00:20:54 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Did not find named query Service.findByPriceRangePaged.count
2025-10-23 00:20:54 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Did not find named query Service.findByCarerIdAndServiceTypeIdPaged.count
2025-10-23 00:20:54 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Looking up named query Service.countByCarerIdAndActiveTrue
2025-10-23 00:20:54 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Did not find named query Service.countByCarerIdAndActiveTrue
2025-10-23 00:20:54 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Looking up named query Service.findByServiceTypeIdAndActiveTrue
2025-10-23 00:20:54 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Did not find named query Service.findByServiceTypeIdAndActiveTrue
2025-10-23 00:20:54 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Did not find named query Service.existsByCarerAndServiceType.count
2025-10-23 00:20:54 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Did not find named query Service.findByCarerIdAndPriceRangePaged.count
2025-10-23 00:20:54 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Did not find named query Service.findByServiceTypeIdAndPriceRangePaged.count
2025-10-23 00:20:54 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Looking up named query Service.findByActiveTrue
2025-10-23 00:20:54 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Did not find named query Service.findByActiveTrue
2025-10-23 00:20:54 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Looking up named query Service.findByActiveTrue
2025-10-23 00:20:54 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Did not find named query Service.findByActiveTrue
2025-10-23 00:20:54 [restartedMain] DEBUG o.s.d.r.c.s.RepositoryFactorySupport - Finished creation of repository instance for org.example.cuidadodemascotas.servicemicroservice.apis.repository.ServiceRepository.
2025-10-23 00:20:54 [restartedMain] DEBUG o.s.d.r.c.s.RepositoryFactorySupport - Initializing repository instance for org.example.cuidadodemascotas.servicemicroservice.apis.repository.ServiceTypeRepository…
2025-10-23 00:20:54 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Did not find named query ServiceType.searchByName.count
2025-10-23 00:20:54 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Looking up named query ServiceType.existsByName
2025-10-23 00:20:54 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Did not find named query ServiceType.existsByName
2025-10-23 00:20:54 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Looking up named query ServiceType.existsByNameAndIdNot
2025-10-23 00:20:54 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Did not find named query ServiceType.existsByNameAndIdNot
2025-10-23 00:20:54 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Looking up named query ServiceType.findAllByOrderByNameAsc
2025-10-23 00:20:54 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Did not find named query ServiceType.findAllByOrderByNameAsc
2025-10-23 00:20:54 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Looking up named query ServiceType.findAllByOrderByNameAsc
2025-10-23 00:20:54 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Did not find named query ServiceType.findAllByOrderByNameAsc
2025-10-23 00:20:54 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Looking up named query ServiceType.findByNameIgnoreCase
2025-10-23 00:20:54 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Did not find named query ServiceType.findByNameIgnoreCase
2025-10-23 00:20:54 [restartedMain] DEBUG o.s.d.r.c.s.RepositoryFactorySupport - Finished creation of repository instance for org.example.cuidadodemascotas.servicemicroservice.apis.repository.ServiceTypeRepository.
2025-10-23 00:20:55 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-10-23 00:20:55 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8083 (http) with context path '/api/v1'
2025-10-23 00:20:55 [restartedMain] INFO  o.e.c.s.ServiceMicroserviceApplication - Started ServiceMicroserviceApplication in 9.335 seconds (process running for 11.05)
2025-10-23 00:20:55 [restartedMain] INFO  o.e.c.s.ServiceMicroserviceApplication - ========================================
2025-10-23 00:20:55 [restartedMain] INFO  o.e.c.s.ServiceMicroserviceApplication - Service Microservice Started Successfully!
2025-10-23 00:20:55 [restartedMain] INFO  o.e.c.s.ServiceMicroserviceApplication - Swagger UI: http://localhost:8083/api/v1/swagger-ui.html
2025-10-23 00:20:55 [restartedMain] INFO  o.e.c.s.ServiceMicroserviceApplication - API Docs: http://localhost:8083/api/v1/api-docs
2025-10-23 00:20:55 [restartedMain] INFO  o.e.c.s.ServiceMicroserviceApplication - ========================================
2025-10-23 00:21:03 [http-nio-8083-exec-1] INFO  o.a.c.c.C.[.[localhost].[/api/v1] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-10-23 00:21:03 [http-nio-8083-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-10-23 00:21:03 [http-nio-8083-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2025-10-23 00:21:05 [http-nio-8083-exec-4] INFO  o.s.api.AbstractOpenApiResource - Init duration for springdoc-openapi is: 1531 ms
2025-10-23 00:21:08 [http-nio-8083-exec-6] INFO  o.e.c.s.a.c.ServiceTypeController - GET /service-types - Getting service types (page: 0, size: 20)
2025-10-23 00:21:08 [http-nio-8083-exec-6] DEBUG o.e.c.s.a.service.ServiceTypeService - Finding all service types (page: 0, size: 20, sort: null)
2025-10-23 00:21:08 [http-nio-8083-exec-6] DEBUG org.hibernate.SQL - 
    select
        st1_0.id_service_type,
        st1_0.name 
    from
        public.service_types st1_0 
    order by
        st1_0.name 
    offset
        ? rows 
    fetch
        first ? rows only
2025-10-23 00:21:08 [http-nio-8083-exec-6] DEBUG o.e.c.s.a.c.ServiceTypeController - Returning 6 service types
2025-10-23 00:21:08 [http-nio-8083-exec-7] ERROR o.e.c.s.e.GlobalExceptionHandler - Internal Server Error: 
org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' is not supported
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.handleNoMatch(RequestMappingInfoHandlerMapping.java:267)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.lookupHandlerMethod(AbstractHandlerMethodMapping.java:441)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.getHandlerInternal(AbstractHandlerMethodMapping.java:382)
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:127)
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:68)
	at org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:507)
	at org.springframework.web.servlet.DispatcherServlet.getHandler(DispatcherServlet.java:1284)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1065)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:384)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-10-23 00:21:08 [http-nio-8083-exec-7] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' is not supported]
2025-10-23 00:21:15 [http-nio-8083-exec-3] INFO  o.e.c.s.a.c.ServiceTypeController - GET /service-types - Getting service types (page: 0, size: 20)
2025-10-23 00:21:15 [http-nio-8083-exec-3] DEBUG o.e.c.s.a.service.ServiceTypeService - Finding all service types (page: 0, size: 20, sort: null)
2025-10-23 00:21:15 [http-nio-8083-exec-3] DEBUG org.hibernate.SQL - 
    select
        st1_0.id_service_type,
        st1_0.name 
    from
        public.service_types st1_0 
    order by
        st1_0.name 
    offset
        ? rows 
    fetch
        first ? rows only
2025-10-23 00:21:15 [http-nio-8083-exec-3] DEBUG o.e.c.s.a.c.ServiceTypeController - Returning 6 service types
2025-10-23 00:21:15 [http-nio-8083-exec-5] ERROR o.e.c.s.e.GlobalExceptionHandler - Internal Server Error: 
org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' is not supported
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.handleNoMatch(RequestMappingInfoHandlerMapping.java:267)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.lookupHandlerMethod(AbstractHandlerMethodMapping.java:441)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.getHandlerInternal(AbstractHandlerMethodMapping.java:382)
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:127)
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:68)
	at org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:507)
	at org.springframework.web.servlet.DispatcherServlet.getHandler(DispatcherServlet.java:1284)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1065)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:384)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-10-23 00:21:15 [http-nio-8083-exec-5] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' is not supported]
2025-10-23 00:22:00 [http-nio-8083-exec-6] INFO  o.e.c.s.a.c.ServiceTypeController - GET /service-types - Getting service types (page: 0, size: 20)
2025-10-23 00:22:02 [http-nio-8083-exec-6] DEBUG o.e.c.s.a.service.ServiceTypeService - Finding all service types (page: 0, size: 20, sort: null)
2025-10-23 00:22:02 [http-nio-8083-exec-6] DEBUG org.hibernate.SQL - 
    select
        st1_0.id_service_type,
        st1_0.name 
    from
        public.service_types st1_0 
    order by
        st1_0.name 
    offset
        ? rows 
    fetch
        first ? rows only
2025-10-23 00:22:02 [http-nio-8083-exec-6] DEBUG o.e.c.s.a.c.ServiceTypeController - Returning 6 service types
2025-10-23 00:22:02 [http-nio-8083-exec-7] ERROR o.e.c.s.e.GlobalExceptionHandler - Internal Server Error: 
org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' is not supported
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.handleNoMatch(RequestMappingInfoHandlerMapping.java:267)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.lookupHandlerMethod(AbstractHandlerMethodMapping.java:441)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.getHandlerInternal(AbstractHandlerMethodMapping.java:382)
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:127)
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:68)
	at org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:507)
	at org.springframework.web.servlet.DispatcherServlet.getHandler(DispatcherServlet.java:1284)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1065)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:384)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-10-23 00:22:02 [http-nio-8083-exec-7] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' is not supported]
2025-10-23 00:22:19 [http-nio-8083-exec-8] INFO  o.e.c.s.a.c.ServiceTypeController - GET /service-types - Getting service types (page: 0, size: 20)
2025-10-23 00:22:19 [http-nio-8083-exec-8] DEBUG o.e.c.s.a.service.ServiceTypeService - Finding all service types (page: 0, size: 20, sort: null)
2025-10-23 00:22:19 [http-nio-8083-exec-8] DEBUG org.hibernate.SQL - 
    select
        st1_0.id_service_type,
        st1_0.name 
    from
        public.service_types st1_0 
    order by
        st1_0.name 
    offset
        ? rows 
    fetch
        first ? rows only
2025-10-23 00:22:19 [http-nio-8083-exec-8] DEBUG o.e.c.s.a.c.ServiceTypeController - Returning 6 service types
2025-10-23 00:22:23 [http-nio-8083-exec-10] INFO  o.e.c.s.a.c.ServiceTypeController - GET /service-types - Getting service types (page: 0, size: 20)
2025-10-23 00:22:23 [http-nio-8083-exec-10] DEBUG o.e.c.s.a.service.ServiceTypeService - Finding all service types (page: 0, size: 20, sort: null)
2025-10-23 00:22:23 [http-nio-8083-exec-10] DEBUG org.hibernate.SQL - 
    select
        st1_0.id_service_type,
        st1_0.name 
    from
        public.service_types st1_0 
    order by
        st1_0.name 
    offset
        ? rows 
    fetch
        first ? rows only
2025-10-23 00:22:24 [http-nio-8083-exec-10] DEBUG o.e.c.s.a.c.ServiceTypeController - Returning 6 service types
2025-10-23 00:22:24 [http-nio-8083-exec-1] ERROR o.e.c.s.e.GlobalExceptionHandler - Internal Server Error: 
org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' is not supported
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.handleNoMatch(RequestMappingInfoHandlerMapping.java:267)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.lookupHandlerMethod(AbstractHandlerMethodMapping.java:441)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.getHandlerInternal(AbstractHandlerMethodMapping.java:382)
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:127)
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:68)
	at org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:507)
	at org.springframework.web.servlet.DispatcherServlet.getHandler(DispatcherServlet.java:1284)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1065)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:384)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-10-23 00:22:24 [http-nio-8083-exec-1] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' is not supported]
2025-10-23 00:22:25 [http-nio-8083-exec-2] INFO  o.e.c.s.a.controller.CarerController - GET /carers-with-services/9 - Getting carer with services
2025-10-23 00:22:25 [http-nio-8083-exec-2] DEBUG o.e.c.s.apis.service.CarerService - Getting carer with services, carerId: 9
2025-10-23 00:22:25 [http-nio-8083-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_carer,
        c1_0.active,
        c1_0.amount_pet,
        c1_0.created_at,
        c1_0.enum_availability_state,
        c1_0.updated_at,
        c1_0.fk_user 
    from
        public.carers c1_0 
    where
        c1_0.id_carer=? 
        and c1_0.active=true
2025-10-23 00:22:25 [http-nio-8083-exec-2] DEBUG org.hibernate.SQL - 
    select
        s1_0.id_service,
        s1_0.active,
        s1_0.fk_carer,
        s1_0.created_at,
        s1_0.description,
        s1_0.price,
        s1_0.fk_service_type,
        s1_0.updated_at 
    from
        public.services s1_0 
    where
        s1_0.fk_carer=? 
        and s1_0.active
2025-10-23 00:22:26 [http-nio-8083-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id_user,
        u1_0.active,
        c1_0.id_carer,
        c1_0.active,
        c1_0.amount_pet,
        c1_0.created_at,
        c1_0.enum_availability_state,
        c1_0.updated_at,
        c1_0.fk_user,
        u1_0.created_at,
        u1_0.email,
        u1_0.hash_password,
        u1_0.last_name,
        u1_0.name,
        o1_0.id_owner,
        o1_0.active,
        o1_0.created_at,
        o1_0.updated_at,
        o1_0.fk_user,
        u1_0.phone_number,
        u1_0.profile_photo,
        u1_0.updated_at 
    from
        public.users u1_0 
    left join
        public.carers c1_0 
            on u1_0.id_user=c1_0.fk_user 
    left join
        public.owners o1_0 
            on u1_0.id_user=o1_0.fk_user 
    where
        u1_0.id_user=?
2025-10-23 00:22:26 [http-nio-8083-exec-3] INFO  o.e.c.s.a.c.ServiceTypeController - GET /service-types - Getting service types (page: 0, size: 20)
2025-10-23 00:22:26 [http-nio-8083-exec-3] DEBUG o.e.c.s.a.service.ServiceTypeService - Finding all service types (page: 0, size: 20, sort: null)
2025-10-23 00:22:26 [http-nio-8083-exec-3] DEBUG org.hibernate.SQL - 
    select
        st1_0.id_service_type,
        st1_0.name 
    from
        public.service_types st1_0 
    order by
        st1_0.name 
    offset
        ? rows 
    fetch
        first ? rows only
2025-10-23 00:22:26 [http-nio-8083-exec-3] DEBUG o.e.c.s.a.c.ServiceTypeController - Returning 6 service types
2025-10-23 00:22:26 [http-nio-8083-exec-5] INFO  o.e.c.s.a.c.ServiceController - GET /services/carer/9 - Getting services by carer (page: 0, size: 10)
2025-10-23 00:22:26 [http-nio-8083-exec-5] DEBUG o.e.c.s.apis.service.ServiceService - Finding services by carer id: 9 (page: 0, size: 10)
2025-10-23 00:22:26 [http-nio-8083-exec-5] DEBUG org.hibernate.SQL - 
    select
        s1_0.id_service,
        s1_0.active,
        s1_0.fk_carer,
        s1_0.created_at,
        s1_0.description,
        s1_0.price,
        s1_0.fk_service_type,
        s1_0.updated_at 
    from
        public.services s1_0 
    where
        s1_0.fk_carer=? 
        and s1_0.active=true 
    order by
        s1_0.id_service desc 
    fetch
        first ? rows only
2025-10-23 00:22:26 [http-nio-8083-exec-5] DEBUG o.e.c.s.a.c.ServiceController - Returning 1 services for carer 9
2025-10-23 00:22:27 [http-nio-8083-exec-4] INFO  o.e.c.s.a.c.ServiceTypeController - GET /service-types - Getting service types (page: 0, size: 20)
2025-10-23 00:22:27 [http-nio-8083-exec-4] DEBUG o.e.c.s.a.service.ServiceTypeService - Finding all service types (page: 0, size: 20, sort: null)
2025-10-23 00:22:27 [http-nio-8083-exec-4] DEBUG org.hibernate.SQL - 
    select
        st1_0.id_service_type,
        st1_0.name 
    from
        public.service_types st1_0 
    order by
        st1_0.name 
    offset
        ? rows 
    fetch
        first ? rows only
2025-10-23 00:22:28 [http-nio-8083-exec-4] DEBUG o.e.c.s.a.c.ServiceTypeController - Returning 6 service types
2025-10-23 00:22:28 [http-nio-8083-exec-6] ERROR o.e.c.s.e.GlobalExceptionHandler - Internal Server Error: 
org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' is not supported
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.handleNoMatch(RequestMappingInfoHandlerMapping.java:267)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.lookupHandlerMethod(AbstractHandlerMethodMapping.java:441)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.getHandlerInternal(AbstractHandlerMethodMapping.java:382)
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:127)
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:68)
	at org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:507)
	at org.springframework.web.servlet.DispatcherServlet.getHandler(DispatcherServlet.java:1284)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1065)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:384)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-10-23 00:22:28 [http-nio-8083-exec-6] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' is not supported]
2025-10-23 00:23:35 [http-nio-8083-exec-7] INFO  o.e.c.s.a.c.ServiceTypeController - GET /service-types - Getting service types (page: 0, size: 20)
2025-10-23 00:23:35 [http-nio-8083-exec-7] DEBUG o.e.c.s.a.service.ServiceTypeService - Finding all service types (page: 0, size: 20, sort: null)
2025-10-23 00:23:35 [http-nio-8083-exec-7] DEBUG org.hibernate.SQL - 
    select
        st1_0.id_service_type,
        st1_0.name 
    from
        public.service_types st1_0 
    order by
        st1_0.name 
    offset
        ? rows 
    fetch
        first ? rows only
2025-10-23 00:23:35 [http-nio-8083-exec-7] DEBUG o.e.c.s.a.c.ServiceTypeController - Returning 6 service types
2025-10-23 00:23:35 [http-nio-8083-exec-8] ERROR o.e.c.s.e.GlobalExceptionHandler - Internal Server Error: 
org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' is not supported
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.handleNoMatch(RequestMappingInfoHandlerMapping.java:267)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.lookupHandlerMethod(AbstractHandlerMethodMapping.java:441)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.getHandlerInternal(AbstractHandlerMethodMapping.java:382)
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:127)
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:68)
	at org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:507)
	at org.springframework.web.servlet.DispatcherServlet.getHandler(DispatcherServlet.java:1284)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1065)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:384)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-10-23 00:23:35 [http-nio-8083-exec-8] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' is not supported]
2025-10-23 00:23:39 [http-nio-8083-exec-9] INFO  o.e.c.s.a.c.ServiceTypeController - GET /service-types - Getting service types (page: 0, size: 20)
2025-10-23 00:23:39 [http-nio-8083-exec-9] DEBUG o.e.c.s.a.service.ServiceTypeService - Finding all service types (page: 0, size: 20, sort: null)
2025-10-23 00:23:39 [http-nio-8083-exec-9] DEBUG org.hibernate.SQL - 
    select
        st1_0.id_service_type,
        st1_0.name 
    from
        public.service_types st1_0 
    order by
        st1_0.name 
    offset
        ? rows 
    fetch
        first ? rows only
2025-10-23 00:23:39 [http-nio-8083-exec-9] DEBUG o.e.c.s.a.c.ServiceTypeController - Returning 6 service types
2025-10-23 00:23:39 [http-nio-8083-exec-10] INFO  o.e.c.s.a.c.ServiceController - GET /services - Getting all services (page: 0, size: 100)
2025-10-23 00:23:39 [http-nio-8083-exec-10] DEBUG o.e.c.s.apis.service.ServiceService - Finding all services (page: 0, size: 100)
2025-10-23 00:23:39 [http-nio-8083-exec-10] DEBUG org.hibernate.SQL - 
    select
        s1_0.id_service,
        s1_0.active,
        s1_0.fk_carer,
        s1_0.created_at,
        s1_0.description,
        s1_0.price,
        s1_0.fk_service_type,
        s1_0.updated_at 
    from
        public.services s1_0 
    where
        s1_0.active=true 
    order by
        s1_0.id_service desc 
    fetch
        first ? rows only
2025-10-23 00:23:39 [http-nio-8083-exec-10] DEBUG o.e.c.s.a.c.ServiceController - Returning 7 services
2025-10-23 00:26:01 [http-nio-8083-exec-2] INFO  o.e.c.s.a.c.ServiceTypeController - GET /service-types - Getting service types (page: 0, size: 20)
2025-10-23 00:26:02 [http-nio-8083-exec-2] DEBUG o.e.c.s.a.service.ServiceTypeService - Finding all service types (page: 0, size: 20, sort: null)
2025-10-23 00:26:02 [http-nio-8083-exec-2] DEBUG org.hibernate.SQL - 
    select
        st1_0.id_service_type,
        st1_0.name 
    from
        public.service_types st1_0 
    order by
        st1_0.name 
    offset
        ? rows 
    fetch
        first ? rows only
2025-10-23 00:26:02 [http-nio-8083-exec-2] DEBUG o.e.c.s.a.c.ServiceTypeController - Returning 6 service types
2025-10-23 00:26:02 [http-nio-8083-exec-3] INFO  o.e.c.s.a.c.ServiceController - GET /services - Getting all services (page: 0, size: 100)
2025-10-23 00:26:02 [http-nio-8083-exec-3] DEBUG o.e.c.s.apis.service.ServiceService - Finding all services (page: 0, size: 100)
2025-10-23 00:26:02 [http-nio-8083-exec-3] DEBUG org.hibernate.SQL - 
    select
        s1_0.id_service,
        s1_0.active,
        s1_0.fk_carer,
        s1_0.created_at,
        s1_0.description,
        s1_0.price,
        s1_0.fk_service_type,
        s1_0.updated_at 
    from
        public.services s1_0 
    where
        s1_0.active=true 
    order by
        s1_0.id_service desc 
    fetch
        first ? rows only
2025-10-23 00:26:02 [http-nio-8083-exec-3] DEBUG o.e.c.s.a.c.ServiceController - Returning 7 services
2025-10-23 00:38:53 [http-nio-8083-exec-4] INFO  o.e.c.s.a.c.ServiceTypeController - GET /service-types - Getting service types (page: 0, size: 20)
2025-10-23 00:39:03 [http-nio-8083-exec-4] WARN  com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Failed to validate connection org.postgresql.jdbc.PgConnection@4a75da76 (This connection has been closed.). Possibly consider using a shorter maxLifetime value.
2025-10-23 00:39:04 [http-nio-8083-exec-4] DEBUG o.e.c.s.a.service.ServiceTypeService - Finding all service types (page: 0, size: 20, sort: null)
2025-10-23 00:39:04 [http-nio-8083-exec-4] DEBUG org.hibernate.SQL - 
    select
        st1_0.id_service_type,
        st1_0.name 
    from
        public.service_types st1_0 
    order by
        st1_0.name 
    offset
        ? rows 
    fetch
        first ? rows only
2025-10-23 00:39:04 [http-nio-8083-exec-4] DEBUG o.e.c.s.a.c.ServiceTypeController - Returning 6 service types
2025-10-23 00:39:04 [http-nio-8083-exec-6] INFO  o.e.c.s.a.c.ServiceTypeController - GET /service-types - Getting service types (page: 0, size: 20)
2025-10-23 00:39:04 [http-nio-8083-exec-6] DEBUG o.e.c.s.a.service.ServiceTypeService - Finding all service types (page: 0, size: 20, sort: null)
2025-10-23 00:39:04 [http-nio-8083-exec-6] DEBUG org.hibernate.SQL - 
    select
        st1_0.id_service_type,
        st1_0.name 
    from
        public.service_types st1_0 
    order by
        st1_0.name 
    offset
        ? rows 
    fetch
        first ? rows only
2025-10-23 00:39:04 [http-nio-8083-exec-7] INFO  o.e.c.s.a.c.ServiceController - GET /services - Getting all services (page: 0, size: 100)
2025-10-23 00:39:04 [http-nio-8083-exec-7] DEBUG o.e.c.s.apis.service.ServiceService - Finding all services (page: 0, size: 100)
2025-10-23 00:39:04 [http-nio-8083-exec-7] DEBUG org.hibernate.SQL - 
    select
        s1_0.id_service,
        s1_0.active,
        s1_0.fk_carer,
        s1_0.created_at,
        s1_0.description,
        s1_0.price,
        s1_0.fk_service_type,
        s1_0.updated_at 
    from
        public.services s1_0 
    where
        s1_0.active=true 
    order by
        s1_0.id_service desc 
    fetch
        first ? rows only
2025-10-23 00:39:04 [http-nio-8083-exec-6] DEBUG o.e.c.s.a.c.ServiceTypeController - Returning 6 service types
2025-10-23 00:39:04 [http-nio-8083-exec-7] DEBUG o.e.c.s.a.c.ServiceController - Returning 7 services
2025-10-23 00:39:04 [http-nio-8083-exec-8] INFO  o.e.c.s.a.c.ServiceController - GET /services - Getting all services (page: 0, size: 100)
2025-10-23 00:39:04 [http-nio-8083-exec-8] DEBUG o.e.c.s.apis.service.ServiceService - Finding all services (page: 0, size: 100)
2025-10-23 00:39:04 [http-nio-8083-exec-8] DEBUG org.hibernate.SQL - 
    select
        s1_0.id_service,
        s1_0.active,
        s1_0.fk_carer,
        s1_0.created_at,
        s1_0.description,
        s1_0.price,
        s1_0.fk_service_type,
        s1_0.updated_at 
    from
        public.services s1_0 
    where
        s1_0.active=true 
    order by
        s1_0.id_service desc 
    fetch
        first ? rows only
2025-10-23 00:39:05 [http-nio-8083-exec-8] DEBUG o.e.c.s.a.c.ServiceController - Returning 7 services
2025-10-23 00:41:17 [http-nio-8083-exec-1] INFO  o.e.c.s.a.c.ServiceTypeController - GET /service-types - Getting service types (page: 0, size: 20)
2025-10-23 00:41:17 [http-nio-8083-exec-1] DEBUG o.e.c.s.a.service.ServiceTypeService - Finding all service types (page: 0, size: 20, sort: null)
2025-10-23 00:41:17 [http-nio-8083-exec-1] DEBUG org.hibernate.SQL - 
    select
        st1_0.id_service_type,
        st1_0.name 
    from
        public.service_types st1_0 
    order by
        st1_0.name 
    offset
        ? rows 
    fetch
        first ? rows only
2025-10-23 00:41:18 [http-nio-8083-exec-1] DEBUG o.e.c.s.a.c.ServiceTypeController - Returning 6 service types
2025-10-23 00:41:18 [http-nio-8083-exec-2] INFO  o.e.c.s.a.c.ServiceController - GET /services - Getting all services (page: 0, size: 100)
2025-10-23 00:41:18 [http-nio-8083-exec-2] DEBUG o.e.c.s.apis.service.ServiceService - Finding all services (page: 0, size: 100)
2025-10-23 00:41:18 [http-nio-8083-exec-2] DEBUG org.hibernate.SQL - 
    select
        s1_0.id_service,
        s1_0.active,
        s1_0.fk_carer,
        s1_0.created_at,
        s1_0.description,
        s1_0.price,
        s1_0.fk_service_type,
        s1_0.updated_at 
    from
        public.services s1_0 
    where
        s1_0.active=true 
    order by
        s1_0.id_service desc 
    fetch
        first ? rows only
2025-10-23 00:41:18 [http-nio-8083-exec-2] DEBUG o.e.c.s.a.c.ServiceController - Returning 7 services
2025-10-23 00:41:23 [http-nio-8083-exec-3] INFO  o.e.c.s.a.c.ServiceTypeController - GET /service-types - Getting service types (page: 0, size: 20)
2025-10-23 00:41:23 [http-nio-8083-exec-3] DEBUG o.e.c.s.a.service.ServiceTypeService - Finding all service types (page: 0, size: 20, sort: null)
2025-10-23 00:41:23 [http-nio-8083-exec-3] DEBUG org.hibernate.SQL - 
    select
        st1_0.id_service_type,
        st1_0.name 
    from
        public.service_types st1_0 
    order by
        st1_0.name 
    offset
        ? rows 
    fetch
        first ? rows only
2025-10-23 00:41:24 [http-nio-8083-exec-3] DEBUG o.e.c.s.a.c.ServiceTypeController - Returning 6 service types
2025-10-23 00:41:24 [http-nio-8083-exec-5] INFO  o.e.c.s.a.c.ServiceController - GET /services - Getting all services (page: 0, size: 100)
2025-10-23 00:41:24 [http-nio-8083-exec-5] DEBUG o.e.c.s.apis.service.ServiceService - Finding all services (page: 0, size: 100)
2025-10-23 00:41:24 [http-nio-8083-exec-5] DEBUG org.hibernate.SQL - 
    select
        s1_0.id_service,
        s1_0.active,
        s1_0.fk_carer,
        s1_0.created_at,
        s1_0.description,
        s1_0.price,
        s1_0.fk_service_type,
        s1_0.updated_at 
    from
        public.services s1_0 
    where
        s1_0.active=true 
    order by
        s1_0.id_service desc 
    fetch
        first ? rows only
2025-10-23 00:41:24 [http-nio-8083-exec-5] DEBUG o.e.c.s.a.c.ServiceController - Returning 7 services
2025-10-23 00:41:26 [http-nio-8083-exec-4] INFO  o.e.c.s.a.c.ServiceTypeController - GET /service-types - Getting service types (page: 0, size: 20)
2025-10-23 00:41:28 [http-nio-8083-exec-4] DEBUG o.e.c.s.a.service.ServiceTypeService - Finding all service types (page: 0, size: 20, sort: null)
2025-10-23 00:41:28 [http-nio-8083-exec-4] DEBUG org.hibernate.SQL - 
    select
        st1_0.id_service_type,
        st1_0.name 
    from
        public.service_types st1_0 
    order by
        st1_0.name 
    offset
        ? rows 
    fetch
        first ? rows only
2025-10-23 00:41:28 [http-nio-8083-exec-4] DEBUG o.e.c.s.a.c.ServiceTypeController - Returning 6 service types
2025-10-23 00:41:28 [http-nio-8083-exec-6] INFO  o.e.c.s.a.c.ServiceController - GET /services/carer/9 - Getting services by carer (page: 0, size: 10)
2025-10-23 00:41:28 [http-nio-8083-exec-6] DEBUG o.e.c.s.apis.service.ServiceService - Finding services by carer id: 9 (page: 0, size: 10)
2025-10-23 00:41:28 [http-nio-8083-exec-6] DEBUG org.hibernate.SQL - 
    select
        s1_0.id_service,
        s1_0.active,
        s1_0.fk_carer,
        s1_0.created_at,
        s1_0.description,
        s1_0.price,
        s1_0.fk_service_type,
        s1_0.updated_at 
    from
        public.services s1_0 
    where
        s1_0.fk_carer=? 
        and s1_0.active=true 
    order by
        s1_0.id_service desc 
    fetch
        first ? rows only
2025-10-23 00:41:29 [http-nio-8083-exec-6] DEBUG o.e.c.s.a.c.ServiceController - Returning 1 services for carer 9
2025-10-23 00:41:50 [http-nio-8083-exec-7] INFO  o.e.c.s.a.c.ServiceTypeController - GET /service-types - Getting service types (page: 0, size: 20)
2025-10-23 00:41:50 [http-nio-8083-exec-7] DEBUG o.e.c.s.a.service.ServiceTypeService - Finding all service types (page: 0, size: 20, sort: null)
2025-10-23 00:41:50 [http-nio-8083-exec-7] DEBUG org.hibernate.SQL - 
    select
        st1_0.id_service_type,
        st1_0.name 
    from
        public.service_types st1_0 
    order by
        st1_0.name 
    offset
        ? rows 
    fetch
        first ? rows only
2025-10-23 00:41:50 [http-nio-8083-exec-7] DEBUG o.e.c.s.a.c.ServiceTypeController - Returning 6 service types
2025-10-23 00:41:51 [http-nio-8083-exec-8] INFO  o.e.c.s.a.c.ServiceController - GET /services/carer/9 - Getting services by carer (page: 0, size: 10)
2025-10-23 00:41:51 [http-nio-8083-exec-8] DEBUG o.e.c.s.apis.service.ServiceService - Finding services by carer id: 9 (page: 0, size: 10)
2025-10-23 00:41:51 [http-nio-8083-exec-8] DEBUG org.hibernate.SQL - 
    select
        s1_0.id_service,
        s1_0.active,
        s1_0.fk_carer,
        s1_0.created_at,
        s1_0.description,
        s1_0.price,
        s1_0.fk_service_type,
        s1_0.updated_at 
    from
        public.services s1_0 
    where
        s1_0.fk_carer=? 
        and s1_0.active=true 
    order by
        s1_0.id_service desc 
    fetch
        first ? rows only
2025-10-23 00:41:51 [http-nio-8083-exec-8] DEBUG o.e.c.s.a.c.ServiceController - Returning 1 services for carer 9
2025-10-23 00:41:54 [http-nio-8083-exec-9] INFO  o.e.c.s.a.controller.CarerController - GET /carers-with-services/9 - Getting carer with services
2025-10-23 00:41:54 [http-nio-8083-exec-9] DEBUG o.e.c.s.apis.service.CarerService - Getting carer with services, carerId: 9
2025-10-23 00:41:54 [http-nio-8083-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_carer,
        c1_0.active,
        c1_0.amount_pet,
        c1_0.created_at,
        c1_0.enum_availability_state,
        c1_0.updated_at,
        c1_0.fk_user 
    from
        public.carers c1_0 
    where
        c1_0.id_carer=? 
        and c1_0.active=true
2025-10-23 00:41:54 [http-nio-8083-exec-9] DEBUG org.hibernate.SQL - 
    select
        s1_0.id_service,
        s1_0.active,
        s1_0.fk_carer,
        s1_0.created_at,
        s1_0.description,
        s1_0.price,
        s1_0.fk_service_type,
        s1_0.updated_at 
    from
        public.services s1_0 
    where
        s1_0.fk_carer=? 
        and s1_0.active
2025-10-23 00:41:55 [http-nio-8083-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id_user,
        u1_0.active,
        c1_0.id_carer,
        c1_0.active,
        c1_0.amount_pet,
        c1_0.created_at,
        c1_0.enum_availability_state,
        c1_0.updated_at,
        c1_0.fk_user,
        u1_0.created_at,
        u1_0.email,
        u1_0.hash_password,
        u1_0.last_name,
        u1_0.name,
        o1_0.id_owner,
        o1_0.active,
        o1_0.created_at,
        o1_0.updated_at,
        o1_0.fk_user,
        u1_0.phone_number,
        u1_0.profile_photo,
        u1_0.updated_at 
    from
        public.users u1_0 
    left join
        public.carers c1_0 
            on u1_0.id_user=c1_0.fk_user 
    left join
        public.owners o1_0 
            on u1_0.id_user=o1_0.fk_user 
    where
        u1_0.id_user=?
2025-10-23 00:41:55 [http-nio-8083-exec-10] INFO  o.e.c.s.a.c.ServiceTypeController - GET /service-types - Getting service types (page: 0, size: 20)
2025-10-23 00:41:55 [http-nio-8083-exec-10] DEBUG o.e.c.s.a.service.ServiceTypeService - Finding all service types (page: 0, size: 20, sort: null)
2025-10-23 00:41:55 [http-nio-8083-exec-10] DEBUG org.hibernate.SQL - 
    select
        st1_0.id_service_type,
        st1_0.name 
    from
        public.service_types st1_0 
    order by
        st1_0.name 
    offset
        ? rows 
    fetch
        first ? rows only
2025-10-23 00:41:55 [http-nio-8083-exec-10] DEBUG o.e.c.s.a.c.ServiceTypeController - Returning 6 service types
2025-10-23 00:41:55 [http-nio-8083-exec-1] INFO  o.e.c.s.a.c.ServiceController - GET /services/carer/9 - Getting services by carer (page: 0, size: 10)
2025-10-23 00:41:55 [http-nio-8083-exec-1] DEBUG o.e.c.s.apis.service.ServiceService - Finding services by carer id: 9 (page: 0, size: 10)
2025-10-23 00:41:55 [http-nio-8083-exec-1] DEBUG org.hibernate.SQL - 
    select
        s1_0.id_service,
        s1_0.active,
        s1_0.fk_carer,
        s1_0.created_at,
        s1_0.description,
        s1_0.price,
        s1_0.fk_service_type,
        s1_0.updated_at 
    from
        public.services s1_0 
    where
        s1_0.fk_carer=? 
        and s1_0.active=true 
    order by
        s1_0.id_service desc 
    fetch
        first ? rows only
2025-10-23 00:41:55 [http-nio-8083-exec-1] DEBUG o.e.c.s.a.c.ServiceController - Returning 1 services for carer 9
2025-10-23 00:42:23 [http-nio-8083-exec-3] INFO  o.e.c.s.a.controller.CarerController - GET /carers-with-services/9 - Getting carer with services
2025-10-23 00:42:23 [http-nio-8083-exec-3] DEBUG o.e.c.s.apis.service.CarerService - Getting carer with services, carerId: 9
2025-10-23 00:42:23 [http-nio-8083-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_carer,
        c1_0.active,
        c1_0.amount_pet,
        c1_0.created_at,
        c1_0.enum_availability_state,
        c1_0.updated_at,
        c1_0.fk_user 
    from
        public.carers c1_0 
    where
        c1_0.id_carer=? 
        and c1_0.active=true
2025-10-23 00:42:23 [http-nio-8083-exec-3] DEBUG org.hibernate.SQL - 
    select
        s1_0.id_service,
        s1_0.active,
        s1_0.fk_carer,
        s1_0.created_at,
        s1_0.description,
        s1_0.price,
        s1_0.fk_service_type,
        s1_0.updated_at 
    from
        public.services s1_0 
    where
        s1_0.fk_carer=? 
        and s1_0.active
2025-10-23 00:42:23 [http-nio-8083-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id_user,
        u1_0.active,
        c1_0.id_carer,
        c1_0.active,
        c1_0.amount_pet,
        c1_0.created_at,
        c1_0.enum_availability_state,
        c1_0.updated_at,
        c1_0.fk_user,
        u1_0.created_at,
        u1_0.email,
        u1_0.hash_password,
        u1_0.last_name,
        u1_0.name,
        o1_0.id_owner,
        o1_0.active,
        o1_0.created_at,
        o1_0.updated_at,
        o1_0.fk_user,
        u1_0.phone_number,
        u1_0.profile_photo,
        u1_0.updated_at 
    from
        public.users u1_0 
    left join
        public.carers c1_0 
            on u1_0.id_user=c1_0.fk_user 
    left join
        public.owners o1_0 
            on u1_0.id_user=o1_0.fk_user 
    where
        u1_0.id_user=?
2025-10-23 00:42:23 [http-nio-8083-exec-5] INFO  o.e.c.s.a.c.ServiceTypeController - GET /service-types - Getting service types (page: 0, size: 20)
2025-10-23 00:42:23 [http-nio-8083-exec-5] DEBUG o.e.c.s.a.service.ServiceTypeService - Finding all service types (page: 0, size: 20, sort: null)
2025-10-23 00:42:23 [http-nio-8083-exec-5] DEBUG org.hibernate.SQL - 
    select
        st1_0.id_service_type,
        st1_0.name 
    from
        public.service_types st1_0 
    order by
        st1_0.name 
    offset
        ? rows 
    fetch
        first ? rows only
2025-10-23 00:42:23 [http-nio-8083-exec-5] DEBUG o.e.c.s.a.c.ServiceTypeController - Returning 6 service types
2025-10-23 00:42:23 [http-nio-8083-exec-4] INFO  o.e.c.s.a.c.ServiceController - GET /services/carer/9 - Getting services by carer (page: 0, size: 10)
2025-10-23 00:42:23 [http-nio-8083-exec-4] DEBUG o.e.c.s.apis.service.ServiceService - Finding services by carer id: 9 (page: 0, size: 10)
2025-10-23 00:42:23 [http-nio-8083-exec-4] DEBUG org.hibernate.SQL - 
    select
        s1_0.id_service,
        s1_0.active,
        s1_0.fk_carer,
        s1_0.created_at,
        s1_0.description,
        s1_0.price,
        s1_0.fk_service_type,
        s1_0.updated_at 
    from
        public.services s1_0 
    where
        s1_0.fk_carer=? 
        and s1_0.active=true 
    order by
        s1_0.id_service desc 
    fetch
        first ? rows only
2025-10-23 00:42:24 [http-nio-8083-exec-4] DEBUG o.e.c.s.a.c.ServiceController - Returning 1 services for carer 9
2025-10-23 00:42:28 [http-nio-8083-exec-6] INFO  o.e.c.s.a.c.ServiceTypeController - GET /service-types - Getting service types (page: 0, size: 20)
2025-10-23 00:42:28 [http-nio-8083-exec-6] DEBUG o.e.c.s.a.service.ServiceTypeService - Finding all service types (page: 0, size: 20, sort: null)
2025-10-23 00:42:28 [http-nio-8083-exec-6] DEBUG org.hibernate.SQL - 
    select
        st1_0.id_service_type,
        st1_0.name 
    from
        public.service_types st1_0 
    order by
        st1_0.name 
    offset
        ? rows 
    fetch
        first ? rows only
2025-10-23 00:42:28 [http-nio-8083-exec-6] DEBUG o.e.c.s.a.c.ServiceTypeController - Returning 6 service types
2025-10-23 00:42:28 [http-nio-8083-exec-7] INFO  o.e.c.s.a.c.ServiceController - GET /services - Getting all services (page: 0, size: 100)
2025-10-23 00:42:28 [http-nio-8083-exec-7] DEBUG o.e.c.s.apis.service.ServiceService - Finding all services (page: 0, size: 100)
2025-10-23 00:42:28 [http-nio-8083-exec-7] DEBUG org.hibernate.SQL - 
    select
        s1_0.id_service,
        s1_0.active,
        s1_0.fk_carer,
        s1_0.created_at,
        s1_0.description,
        s1_0.price,
        s1_0.fk_service_type,
        s1_0.updated_at 
    from
        public.services s1_0 
    where
        s1_0.active=true 
    order by
        s1_0.id_service desc 
    fetch
        first ? rows only
2025-10-23 00:42:28 [http-nio-8083-exec-7] DEBUG o.e.c.s.a.c.ServiceController - Returning 7 services
2025-10-23 00:42:36 [http-nio-8083-exec-9] INFO  o.e.c.s.a.c.ServiceTypeController - GET /service-types - Getting service types (page: 0, size: 20)
2025-10-23 00:42:36 [http-nio-8083-exec-9] DEBUG o.e.c.s.a.service.ServiceTypeService - Finding all service types (page: 0, size: 20, sort: null)
2025-10-23 00:42:36 [http-nio-8083-exec-9] DEBUG org.hibernate.SQL - 
    select
        st1_0.id_service_type,
        st1_0.name 
    from
        public.service_types st1_0 
    order by
        st1_0.name 
    offset
        ? rows 
    fetch
        first ? rows only
2025-10-23 00:42:36 [http-nio-8083-exec-9] DEBUG o.e.c.s.a.c.ServiceTypeController - Returning 6 service types
2025-10-23 00:42:36 [http-nio-8083-exec-10] INFO  o.e.c.s.a.c.ServiceController - GET /services - Getting all services (page: 0, size: 100)
2025-10-23 00:42:36 [http-nio-8083-exec-10] DEBUG o.e.c.s.apis.service.ServiceService - Finding all services (page: 0, size: 100)
2025-10-23 00:42:36 [http-nio-8083-exec-10] DEBUG org.hibernate.SQL - 
    select
        s1_0.id_service,
        s1_0.active,
        s1_0.fk_carer,
        s1_0.created_at,
        s1_0.description,
        s1_0.price,
        s1_0.fk_service_type,
        s1_0.updated_at 
    from
        public.services s1_0 
    where
        s1_0.active=true 
    order by
        s1_0.id_service desc 
    fetch
        first ? rows only
2025-10-23 00:42:36 [http-nio-8083-exec-10] DEBUG o.e.c.s.a.c.ServiceController - Returning 7 services
2025-10-23 00:50:24 [http-nio-8083-exec-2] INFO  o.e.c.s.a.c.ServiceTypeController - GET /service-types - Getting service types (page: 0, size: 20)
2025-10-23 00:50:34 [http-nio-8083-exec-2] WARN  com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Failed to validate connection org.postgresql.jdbc.PgConnection@804cd46 (This connection has been closed.). Possibly consider using a shorter maxLifetime value.
2025-10-23 00:50:34 [http-nio-8083-exec-2] DEBUG o.e.c.s.a.service.ServiceTypeService - Finding all service types (page: 0, size: 20, sort: null)
2025-10-23 00:50:34 [http-nio-8083-exec-2] DEBUG org.hibernate.SQL - 
    select
        st1_0.id_service_type,
        st1_0.name 
    from
        public.service_types st1_0 
    order by
        st1_0.name 
    offset
        ? rows 
    fetch
        first ? rows only
2025-10-23 00:50:34 [http-nio-8083-exec-2] DEBUG o.e.c.s.a.c.ServiceTypeController - Returning 6 service types
2025-10-23 00:50:34 [http-nio-8083-exec-3] INFO  o.e.c.s.a.c.ServiceController - GET /services - Getting all services (page: 0, size: 100)
2025-10-23 00:50:34 [http-nio-8083-exec-3] DEBUG o.e.c.s.apis.service.ServiceService - Finding all services (page: 0, size: 100)
2025-10-23 00:50:34 [http-nio-8083-exec-3] DEBUG org.hibernate.SQL - 
    select
        s1_0.id_service,
        s1_0.active,
        s1_0.fk_carer,
        s1_0.created_at,
        s1_0.description,
        s1_0.price,
        s1_0.fk_service_type,
        s1_0.updated_at 
    from
        public.services s1_0 
    where
        s1_0.active=true 
    order by
        s1_0.id_service desc 
    fetch
        first ? rows only
2025-10-23 00:50:35 [http-nio-8083-exec-3] DEBUG o.e.c.s.a.c.ServiceController - Returning 7 services
2025-10-23 00:50:35 [http-nio-8083-exec-5] INFO  o.e.c.s.a.controller.CarerController - GET /carers-with-services/9 - Getting carer with services
2025-10-23 00:50:35 [http-nio-8083-exec-5] DEBUG o.e.c.s.apis.service.CarerService - Getting carer with services, carerId: 9
2025-10-23 00:50:35 [http-nio-8083-exec-4] INFO  o.e.c.s.a.controller.CarerController - GET /carers-with-services/1 - Getting carer with services
2025-10-23 00:50:35 [http-nio-8083-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_carer,
        c1_0.active,
        c1_0.amount_pet,
        c1_0.created_at,
        c1_0.enum_availability_state,
        c1_0.updated_at,
        c1_0.fk_user 
    from
        public.carers c1_0 
    where
        c1_0.id_carer=? 
        and c1_0.active=true
2025-10-23 00:50:35 [http-nio-8083-exec-6] INFO  o.e.c.s.a.controller.CarerController - GET /carers-with-services/2 - Getting carer with services
2025-10-23 00:50:35 [http-nio-8083-exec-5] DEBUG org.hibernate.SQL - 
    select
        s1_0.id_service,
        s1_0.active,
        s1_0.fk_carer,
        s1_0.created_at,
        s1_0.description,
        s1_0.price,
        s1_0.fk_service_type,
        s1_0.updated_at 
    from
        public.services s1_0 
    where
        s1_0.fk_carer=? 
        and s1_0.active
2025-10-23 00:50:35 [http-nio-8083-exec-4] DEBUG o.e.c.s.apis.service.CarerService - Getting carer with services, carerId: 1
2025-10-23 00:50:35 [http-nio-8083-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_carer,
        c1_0.active,
        c1_0.amount_pet,
        c1_0.created_at,
        c1_0.enum_availability_state,
        c1_0.updated_at,
        c1_0.fk_user 
    from
        public.carers c1_0 
    where
        c1_0.id_carer=? 
        and c1_0.active=true
2025-10-23 00:50:35 [http-nio-8083-exec-6] DEBUG o.e.c.s.apis.service.CarerService - Getting carer with services, carerId: 2
2025-10-23 00:50:35 [http-nio-8083-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_carer,
        c1_0.active,
        c1_0.amount_pet,
        c1_0.created_at,
        c1_0.enum_availability_state,
        c1_0.updated_at,
        c1_0.fk_user 
    from
        public.carers c1_0 
    where
        c1_0.id_carer=? 
        and c1_0.active=true
2025-10-23 00:50:35 [http-nio-8083-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id_user,
        u1_0.active,
        c1_0.id_carer,
        c1_0.active,
        c1_0.amount_pet,
        c1_0.created_at,
        c1_0.enum_availability_state,
        c1_0.updated_at,
        c1_0.fk_user,
        u1_0.created_at,
        u1_0.email,
        u1_0.hash_password,
        u1_0.last_name,
        u1_0.name,
        o1_0.id_owner,
        o1_0.active,
        o1_0.created_at,
        o1_0.updated_at,
        o1_0.fk_user,
        u1_0.phone_number,
        u1_0.profile_photo,
        u1_0.updated_at 
    from
        public.users u1_0 
    left join
        public.carers c1_0 
            on u1_0.id_user=c1_0.fk_user 
    left join
        public.owners o1_0 
            on u1_0.id_user=o1_0.fk_user 
    where
        u1_0.id_user=?
2025-10-23 00:50:35 [http-nio-8083-exec-4] DEBUG org.hibernate.SQL - 
    select
        s1_0.id_service,
        s1_0.active,
        s1_0.fk_carer,
        s1_0.created_at,
        s1_0.description,
        s1_0.price,
        s1_0.fk_service_type,
        s1_0.updated_at 
    from
        public.services s1_0 
    where
        s1_0.fk_carer=? 
        and s1_0.active
2025-10-23 00:50:35 [http-nio-8083-exec-6] DEBUG org.hibernate.SQL - 
    select
        s1_0.id_service,
        s1_0.active,
        s1_0.fk_carer,
        s1_0.created_at,
        s1_0.description,
        s1_0.price,
        s1_0.fk_service_type,
        s1_0.updated_at 
    from
        public.services s1_0 
    where
        s1_0.fk_carer=? 
        and s1_0.active
2025-10-23 00:50:35 [http-nio-8083-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id_user,
        u1_0.active,
        c1_0.id_carer,
        c1_0.active,
        c1_0.amount_pet,
        c1_0.created_at,
        c1_0.enum_availability_state,
        c1_0.updated_at,
        c1_0.fk_user,
        u1_0.created_at,
        u1_0.email,
        u1_0.hash_password,
        u1_0.last_name,
        u1_0.name,
        o1_0.id_owner,
        o1_0.active,
        o1_0.created_at,
        o1_0.updated_at,
        o1_0.fk_user,
        u1_0.phone_number,
        u1_0.profile_photo,
        u1_0.updated_at 
    from
        public.users u1_0 
    left join
        public.carers c1_0 
            on u1_0.id_user=c1_0.fk_user 
    left join
        public.owners o1_0 
            on u1_0.id_user=o1_0.fk_user 
    where
        u1_0.id_user=?
2025-10-23 00:50:35 [http-nio-8083-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id_user,
        u1_0.active,
        c1_0.id_carer,
        c1_0.active,
        c1_0.amount_pet,
        c1_0.created_at,
        c1_0.enum_availability_state,
        c1_0.updated_at,
        c1_0.fk_user,
        u1_0.created_at,
        u1_0.email,
        u1_0.hash_password,
        u1_0.last_name,
        u1_0.name,
        o1_0.id_owner,
        o1_0.active,
        o1_0.created_at,
        o1_0.updated_at,
        o1_0.fk_user,
        u1_0.phone_number,
        u1_0.profile_photo,
        u1_0.updated_at 
    from
        public.users u1_0 
    left join
        public.carers c1_0 
            on u1_0.id_user=c1_0.fk_user 
    left join
        public.owners o1_0 
            on u1_0.id_user=o1_0.fk_user 
    where
        u1_0.id_user=?
2025-10-23 00:53:27 [http-nio-8083-exec-10] INFO  o.e.c.s.a.c.ServiceTypeController - GET /service-types - Getting service types (page: 0, size: 20)
2025-10-23 00:53:27 [http-nio-8083-exec-10] DEBUG o.e.c.s.a.service.ServiceTypeService - Finding all service types (page: 0, size: 20, sort: null)
2025-10-23 00:53:27 [http-nio-8083-exec-10] DEBUG org.hibernate.SQL - 
    select
        st1_0.id_service_type,
        st1_0.name 
    from
        public.service_types st1_0 
    order by
        st1_0.name 
    offset
        ? rows 
    fetch
        first ? rows only
2025-10-23 00:53:27 [http-nio-8083-exec-10] DEBUG o.e.c.s.a.c.ServiceTypeController - Returning 6 service types
2025-10-23 00:53:27 [http-nio-8083-exec-1] INFO  o.e.c.s.a.c.ServiceController - GET /services - Getting all services (page: 0, size: 100)
2025-10-23 00:53:27 [http-nio-8083-exec-1] DEBUG o.e.c.s.apis.service.ServiceService - Finding all services (page: 0, size: 100)
2025-10-23 00:53:27 [http-nio-8083-exec-1] DEBUG org.hibernate.SQL - 
    select
        s1_0.id_service,
        s1_0.active,
        s1_0.fk_carer,
        s1_0.created_at,
        s1_0.description,
        s1_0.price,
        s1_0.fk_service_type,
        s1_0.updated_at 
    from
        public.services s1_0 
    where
        s1_0.active=true 
    order by
        s1_0.id_service desc 
    fetch
        first ? rows only
2025-10-23 00:53:27 [http-nio-8083-exec-1] DEBUG o.e.c.s.a.c.ServiceController - Returning 7 services
2025-10-23 00:53:27 [http-nio-8083-exec-2] INFO  o.e.c.s.a.controller.CarerController - GET /carers-with-services/9 - Getting carer with services
2025-10-23 00:53:27 [http-nio-8083-exec-2] DEBUG o.e.c.s.apis.service.CarerService - Getting carer with services, carerId: 9
2025-10-23 00:53:27 [http-nio-8083-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_carer,
        c1_0.active,
        c1_0.amount_pet,
        c1_0.created_at,
        c1_0.enum_availability_state,
        c1_0.updated_at,
        c1_0.fk_user 
    from
        public.carers c1_0 
    where
        c1_0.id_carer=? 
        and c1_0.active=true
2025-10-23 00:53:27 [http-nio-8083-exec-3] INFO  o.e.c.s.a.controller.CarerController - GET /carers-with-services/1 - Getting carer with services
2025-10-23 00:53:27 [http-nio-8083-exec-5] INFO  o.e.c.s.a.controller.CarerController - GET /carers-with-services/2 - Getting carer with services
2025-10-23 00:53:27 [http-nio-8083-exec-3] DEBUG o.e.c.s.apis.service.CarerService - Getting carer with services, carerId: 1
2025-10-23 00:53:27 [http-nio-8083-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_carer,
        c1_0.active,
        c1_0.amount_pet,
        c1_0.created_at,
        c1_0.enum_availability_state,
        c1_0.updated_at,
        c1_0.fk_user 
    from
        public.carers c1_0 
    where
        c1_0.id_carer=? 
        and c1_0.active=true
2025-10-23 00:53:27 [http-nio-8083-exec-2] DEBUG org.hibernate.SQL - 
    select
        s1_0.id_service,
        s1_0.active,
        s1_0.fk_carer,
        s1_0.created_at,
        s1_0.description,
        s1_0.price,
        s1_0.fk_service_type,
        s1_0.updated_at 
    from
        public.services s1_0 
    where
        s1_0.fk_carer=? 
        and s1_0.active
2025-10-23 00:53:27 [http-nio-8083-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id_user,
        u1_0.active,
        c1_0.id_carer,
        c1_0.active,
        c1_0.amount_pet,
        c1_0.created_at,
        c1_0.enum_availability_state,
        c1_0.updated_at,
        c1_0.fk_user,
        u1_0.created_at,
        u1_0.email,
        u1_0.hash_password,
        u1_0.last_name,
        u1_0.name,
        o1_0.id_owner,
        o1_0.active,
        o1_0.created_at,
        o1_0.updated_at,
        o1_0.fk_user,
        u1_0.phone_number,
        u1_0.profile_photo,
        u1_0.updated_at 
    from
        public.users u1_0 
    left join
        public.carers c1_0 
            on u1_0.id_user=c1_0.fk_user 
    left join
        public.owners o1_0 
            on u1_0.id_user=o1_0.fk_user 
    where
        u1_0.id_user=?
2025-10-23 00:53:27 [http-nio-8083-exec-3] DEBUG org.hibernate.SQL - 
    select
        s1_0.id_service,
        s1_0.active,
        s1_0.fk_carer,
        s1_0.created_at,
        s1_0.description,
        s1_0.price,
        s1_0.fk_service_type,
        s1_0.updated_at 
    from
        public.services s1_0 
    where
        s1_0.fk_carer=? 
        and s1_0.active
2025-10-23 00:53:27 [http-nio-8083-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id_user,
        u1_0.active,
        c1_0.id_carer,
        c1_0.active,
        c1_0.amount_pet,
        c1_0.created_at,
        c1_0.enum_availability_state,
        c1_0.updated_at,
        c1_0.fk_user,
        u1_0.created_at,
        u1_0.email,
        u1_0.hash_password,
        u1_0.last_name,
        u1_0.name,
        o1_0.id_owner,
        o1_0.active,
        o1_0.created_at,
        o1_0.updated_at,
        o1_0.fk_user,
        u1_0.phone_number,
        u1_0.profile_photo,
        u1_0.updated_at 
    from
        public.users u1_0 
    left join
        public.carers c1_0 
            on u1_0.id_user=c1_0.fk_user 
    left join
        public.owners o1_0 
            on u1_0.id_user=o1_0.fk_user 
    where
        u1_0.id_user=?
2025-10-23 00:53:27 [http-nio-8083-exec-5] DEBUG o.e.c.s.apis.service.CarerService - Getting carer with services, carerId: 2
2025-10-23 00:53:27 [http-nio-8083-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_carer,
        c1_0.active,
        c1_0.amount_pet,
        c1_0.created_at,
        c1_0.enum_availability_state,
        c1_0.updated_at,
        c1_0.fk_user 
    from
        public.carers c1_0 
    where
        c1_0.id_carer=? 
        and c1_0.active=true
2025-10-23 00:53:27 [http-nio-8083-exec-5] DEBUG org.hibernate.SQL - 
    select
        s1_0.id_service,
        s1_0.active,
        s1_0.fk_carer,
        s1_0.created_at,
        s1_0.description,
        s1_0.price,
        s1_0.fk_service_type,
        s1_0.updated_at 
    from
        public.services s1_0 
    where
        s1_0.fk_carer=? 
        and s1_0.active
2025-10-23 00:53:28 [http-nio-8083-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id_user,
        u1_0.active,
        c1_0.id_carer,
        c1_0.active,
        c1_0.amount_pet,
        c1_0.created_at,
        c1_0.enum_availability_state,
        c1_0.updated_at,
        c1_0.fk_user,
        u1_0.created_at,
        u1_0.email,
        u1_0.hash_password,
        u1_0.last_name,
        u1_0.name,
        o1_0.id_owner,
        o1_0.active,
        o1_0.created_at,
        o1_0.updated_at,
        o1_0.fk_user,
        u1_0.phone_number,
        u1_0.profile_photo,
        u1_0.updated_at 
    from
        public.users u1_0 
    left join
        public.carers c1_0 
            on u1_0.id_user=c1_0.fk_user 
    left join
        public.owners o1_0 
            on u1_0.id_user=o1_0.fk_user 
    where
        u1_0.id_user=?
2025-10-23 00:53:31 [http-nio-8083-exec-8] INFO  o.e.c.s.a.c.ServiceTypeController - GET /service-types - Getting service types (page: 0, size: 20)
2025-10-23 00:53:31 [http-nio-8083-exec-8] DEBUG o.e.c.s.a.service.ServiceTypeService - Finding all service types (page: 0, size: 20, sort: null)
2025-10-23 00:53:31 [http-nio-8083-exec-8] DEBUG org.hibernate.SQL - 
    select
        st1_0.id_service_type,
        st1_0.name 
    from
        public.service_types st1_0 
    order by
        st1_0.name 
    offset
        ? rows 
    fetch
        first ? rows only
2025-10-23 00:53:31 [http-nio-8083-exec-8] DEBUG o.e.c.s.a.c.ServiceTypeController - Returning 6 service types
2025-10-23 00:53:31 [http-nio-8083-exec-9] INFO  o.e.c.s.a.c.ServiceController - GET /services - Getting all services (page: 0, size: 100)
2025-10-23 00:53:31 [http-nio-8083-exec-9] DEBUG o.e.c.s.apis.service.ServiceService - Finding all services (page: 0, size: 100)
2025-10-23 00:53:31 [http-nio-8083-exec-9] DEBUG org.hibernate.SQL - 
    select
        s1_0.id_service,
        s1_0.active,
        s1_0.fk_carer,
        s1_0.created_at,
        s1_0.description,
        s1_0.price,
        s1_0.fk_service_type,
        s1_0.updated_at 
    from
        public.services s1_0 
    where
        s1_0.active=true 
    order by
        s1_0.id_service desc 
    fetch
        first ? rows only
2025-10-23 00:53:31 [http-nio-8083-exec-9] DEBUG o.e.c.s.a.c.ServiceController - Returning 7 services
2025-10-23 00:53:31 [http-nio-8083-exec-1] INFO  o.e.c.s.a.controller.CarerController - GET /carers-with-services/1 - Getting carer with services
2025-10-23 00:53:31 [http-nio-8083-exec-10] INFO  o.e.c.s.a.controller.CarerController - GET /carers-with-services/9 - Getting carer with services
2025-10-23 00:53:31 [http-nio-8083-exec-2] INFO  o.e.c.s.a.controller.CarerController - GET /carers-with-services/2 - Getting carer with services
2025-10-23 00:53:31 [http-nio-8083-exec-1] DEBUG o.e.c.s.apis.service.CarerService - Getting carer with services, carerId: 1
2025-10-23 00:53:31 [http-nio-8083-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_carer,
        c1_0.active,
        c1_0.amount_pet,
        c1_0.created_at,
        c1_0.enum_availability_state,
        c1_0.updated_at,
        c1_0.fk_user 
    from
        public.carers c1_0 
    where
        c1_0.id_carer=? 
        and c1_0.active=true
2025-10-23 00:53:31 [http-nio-8083-exec-10] DEBUG o.e.c.s.apis.service.CarerService - Getting carer with services, carerId: 9
2025-10-23 00:53:31 [http-nio-8083-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_carer,
        c1_0.active,
        c1_0.amount_pet,
        c1_0.created_at,
        c1_0.enum_availability_state,
        c1_0.updated_at,
        c1_0.fk_user 
    from
        public.carers c1_0 
    where
        c1_0.id_carer=? 
        and c1_0.active=true
2025-10-23 00:53:31 [http-nio-8083-exec-1] DEBUG org.hibernate.SQL - 
    select
        s1_0.id_service,
        s1_0.active,
        s1_0.fk_carer,
        s1_0.created_at,
        s1_0.description,
        s1_0.price,
        s1_0.fk_service_type,
        s1_0.updated_at 
    from
        public.services s1_0 
    where
        s1_0.fk_carer=? 
        and s1_0.active
2025-10-23 00:53:31 [http-nio-8083-exec-10] DEBUG org.hibernate.SQL - 
    select
        s1_0.id_service,
        s1_0.active,
        s1_0.fk_carer,
        s1_0.created_at,
        s1_0.description,
        s1_0.price,
        s1_0.fk_service_type,
        s1_0.updated_at 
    from
        public.services s1_0 
    where
        s1_0.fk_carer=? 
        and s1_0.active
2025-10-23 00:53:31 [http-nio-8083-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id_user,
        u1_0.active,
        c1_0.id_carer,
        c1_0.active,
        c1_0.amount_pet,
        c1_0.created_at,
        c1_0.enum_availability_state,
        c1_0.updated_at,
        c1_0.fk_user,
        u1_0.created_at,
        u1_0.email,
        u1_0.hash_password,
        u1_0.last_name,
        u1_0.name,
        o1_0.id_owner,
        o1_0.active,
        o1_0.created_at,
        o1_0.updated_at,
        o1_0.fk_user,
        u1_0.phone_number,
        u1_0.profile_photo,
        u1_0.updated_at 
    from
        public.users u1_0 
    left join
        public.carers c1_0 
            on u1_0.id_user=c1_0.fk_user 
    left join
        public.owners o1_0 
            on u1_0.id_user=o1_0.fk_user 
    where
        u1_0.id_user=?
2025-10-23 00:53:31 [http-nio-8083-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id_user,
        u1_0.active,
        c1_0.id_carer,
        c1_0.active,
        c1_0.amount_pet,
        c1_0.created_at,
        c1_0.enum_availability_state,
        c1_0.updated_at,
        c1_0.fk_user,
        u1_0.created_at,
        u1_0.email,
        u1_0.hash_password,
        u1_0.last_name,
        u1_0.name,
        o1_0.id_owner,
        o1_0.active,
        o1_0.created_at,
        o1_0.updated_at,
        o1_0.fk_user,
        u1_0.phone_number,
        u1_0.profile_photo,
        u1_0.updated_at 
    from
        public.users u1_0 
    left join
        public.carers c1_0 
            on u1_0.id_user=c1_0.fk_user 
    left join
        public.owners o1_0 
            on u1_0.id_user=o1_0.fk_user 
    where
        u1_0.id_user=?
2025-10-23 00:53:31 [http-nio-8083-exec-2] DEBUG o.e.c.s.apis.service.CarerService - Getting carer with services, carerId: 2
2025-10-23 00:53:31 [http-nio-8083-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_carer,
        c1_0.active,
        c1_0.amount_pet,
        c1_0.created_at,
        c1_0.enum_availability_state,
        c1_0.updated_at,
        c1_0.fk_user 
    from
        public.carers c1_0 
    where
        c1_0.id_carer=? 
        and c1_0.active=true
2025-10-23 00:53:32 [http-nio-8083-exec-2] DEBUG org.hibernate.SQL - 
    select
        s1_0.id_service,
        s1_0.active,
        s1_0.fk_carer,
        s1_0.created_at,
        s1_0.description,
        s1_0.price,
        s1_0.fk_service_type,
        s1_0.updated_at 
    from
        public.services s1_0 
    where
        s1_0.fk_carer=? 
        and s1_0.active
2025-10-23 00:53:32 [http-nio-8083-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id_user,
        u1_0.active,
        c1_0.id_carer,
        c1_0.active,
        c1_0.amount_pet,
        c1_0.created_at,
        c1_0.enum_availability_state,
        c1_0.updated_at,
        c1_0.fk_user,
        u1_0.created_at,
        u1_0.email,
        u1_0.hash_password,
        u1_0.last_name,
        u1_0.name,
        o1_0.id_owner,
        o1_0.active,
        o1_0.created_at,
        o1_0.updated_at,
        o1_0.fk_user,
        u1_0.phone_number,
        u1_0.profile_photo,
        u1_0.updated_at 
    from
        public.users u1_0 
    left join
        public.carers c1_0 
            on u1_0.id_user=c1_0.fk_user 
    left join
        public.owners o1_0 
            on u1_0.id_user=o1_0.fk_user 
    where
        u1_0.id_user=?
2025-10-23 00:54:13 [http-nio-8083-exec-3] INFO  o.e.c.s.a.c.ServiceTypeController - GET /service-types - Getting service types (page: 0, size: 20)
2025-10-23 00:54:13 [http-nio-8083-exec-3] DEBUG o.e.c.s.a.service.ServiceTypeService - Finding all service types (page: 0, size: 20, sort: null)
2025-10-23 00:54:13 [http-nio-8083-exec-3] DEBUG org.hibernate.SQL - 
    select
        st1_0.id_service_type,
        st1_0.name 
    from
        public.service_types st1_0 
    order by
        st1_0.name 
    offset
        ? rows 
    fetch
        first ? rows only
2025-10-23 00:54:13 [http-nio-8083-exec-3] DEBUG o.e.c.s.a.c.ServiceTypeController - Returning 6 service types
2025-10-23 00:54:13 [http-nio-8083-exec-5] INFO  o.e.c.s.a.c.ServiceController - GET /services - Getting all services (page: 0, size: 100)
2025-10-23 00:54:14 [http-nio-8083-exec-5] DEBUG o.e.c.s.apis.service.ServiceService - Finding all services (page: 0, size: 100)
2025-10-23 00:54:14 [http-nio-8083-exec-5] DEBUG org.hibernate.SQL - 
    select
        s1_0.id_service,
        s1_0.active,
        s1_0.fk_carer,
        s1_0.created_at,
        s1_0.description,
        s1_0.price,
        s1_0.fk_service_type,
        s1_0.updated_at 
    from
        public.services s1_0 
    where
        s1_0.active=true 
    order by
        s1_0.id_service desc 
    fetch
        first ? rows only
2025-10-23 00:54:14 [http-nio-8083-exec-5] DEBUG o.e.c.s.a.c.ServiceController - Returning 7 services
2025-10-23 00:54:14 [http-nio-8083-exec-4] INFO  o.e.c.s.a.controller.CarerController - GET /carers-with-services/9 - Getting carer with services
2025-10-23 00:54:14 [http-nio-8083-exec-4] DEBUG o.e.c.s.apis.service.CarerService - Getting carer with services, carerId: 9
2025-10-23 00:54:14 [http-nio-8083-exec-7] INFO  o.e.c.s.a.controller.CarerController - GET /carers-with-services/1 - Getting carer with services
2025-10-23 00:54:14 [http-nio-8083-exec-7] DEBUG o.e.c.s.apis.service.CarerService - Getting carer with services, carerId: 1
2025-10-23 00:54:14 [http-nio-8083-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_carer,
        c1_0.active,
        c1_0.amount_pet,
        c1_0.created_at,
        c1_0.enum_availability_state,
        c1_0.updated_at,
        c1_0.fk_user 
    from
        public.carers c1_0 
    where
        c1_0.id_carer=? 
        and c1_0.active=true
2025-10-23 00:54:14 [http-nio-8083-exec-6] INFO  o.e.c.s.a.controller.CarerController - GET /carers-with-services/2 - Getting carer with services
2025-10-23 00:54:14 [http-nio-8083-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_carer,
        c1_0.active,
        c1_0.amount_pet,
        c1_0.created_at,
        c1_0.enum_availability_state,
        c1_0.updated_at,
        c1_0.fk_user 
    from
        public.carers c1_0 
    where
        c1_0.id_carer=? 
        and c1_0.active=true
2025-10-23 00:54:14 [http-nio-8083-exec-7] DEBUG org.hibernate.SQL - 
    select
        s1_0.id_service,
        s1_0.active,
        s1_0.fk_carer,
        s1_0.created_at,
        s1_0.description,
        s1_0.price,
        s1_0.fk_service_type,
        s1_0.updated_at 
    from
        public.services s1_0 
    where
        s1_0.fk_carer=? 
        and s1_0.active
2025-10-23 00:54:14 [http-nio-8083-exec-4] DEBUG org.hibernate.SQL - 
    select
        s1_0.id_service,
        s1_0.active,
        s1_0.fk_carer,
        s1_0.created_at,
        s1_0.description,
        s1_0.price,
        s1_0.fk_service_type,
        s1_0.updated_at 
    from
        public.services s1_0 
    where
        s1_0.fk_carer=? 
        and s1_0.active
2025-10-23 00:54:14 [http-nio-8083-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id_user,
        u1_0.active,
        c1_0.id_carer,
        c1_0.active,
        c1_0.amount_pet,
        c1_0.created_at,
        c1_0.enum_availability_state,
        c1_0.updated_at,
        c1_0.fk_user,
        u1_0.created_at,
        u1_0.email,
        u1_0.hash_password,
        u1_0.last_name,
        u1_0.name,
        o1_0.id_owner,
        o1_0.active,
        o1_0.created_at,
        o1_0.updated_at,
        o1_0.fk_user,
        u1_0.phone_number,
        u1_0.profile_photo,
        u1_0.updated_at 
    from
        public.users u1_0 
    left join
        public.carers c1_0 
            on u1_0.id_user=c1_0.fk_user 
    left join
        public.owners o1_0 
            on u1_0.id_user=o1_0.fk_user 
    where
        u1_0.id_user=?
2025-10-23 00:54:14 [http-nio-8083-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id_user,
        u1_0.active,
        c1_0.id_carer,
        c1_0.active,
        c1_0.amount_pet,
        c1_0.created_at,
        c1_0.enum_availability_state,
        c1_0.updated_at,
        c1_0.fk_user,
        u1_0.created_at,
        u1_0.email,
        u1_0.hash_password,
        u1_0.last_name,
        u1_0.name,
        o1_0.id_owner,
        o1_0.active,
        o1_0.created_at,
        o1_0.updated_at,
        o1_0.fk_user,
        u1_0.phone_number,
        u1_0.profile_photo,
        u1_0.updated_at 
    from
        public.users u1_0 
    left join
        public.carers c1_0 
            on u1_0.id_user=c1_0.fk_user 
    left join
        public.owners o1_0 
            on u1_0.id_user=o1_0.fk_user 
    where
        u1_0.id_user=?
2025-10-23 00:54:14 [http-nio-8083-exec-6] DEBUG o.e.c.s.apis.service.CarerService - Getting carer with services, carerId: 2
2025-10-23 00:54:14 [http-nio-8083-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_carer,
        c1_0.active,
        c1_0.amount_pet,
        c1_0.created_at,
        c1_0.enum_availability_state,
        c1_0.updated_at,
        c1_0.fk_user 
    from
        public.carers c1_0 
    where
        c1_0.id_carer=? 
        and c1_0.active=true
2025-10-23 00:54:14 [http-nio-8083-exec-6] DEBUG org.hibernate.SQL - 
    select
        s1_0.id_service,
        s1_0.active,
        s1_0.fk_carer,
        s1_0.created_at,
        s1_0.description,
        s1_0.price,
        s1_0.fk_service_type,
        s1_0.updated_at 
    from
        public.services s1_0 
    where
        s1_0.fk_carer=? 
        and s1_0.active
2025-10-23 00:54:14 [http-nio-8083-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id_user,
        u1_0.active,
        c1_0.id_carer,
        c1_0.active,
        c1_0.amount_pet,
        c1_0.created_at,
        c1_0.enum_availability_state,
        c1_0.updated_at,
        c1_0.fk_user,
        u1_0.created_at,
        u1_0.email,
        u1_0.hash_password,
        u1_0.last_name,
        u1_0.name,
        o1_0.id_owner,
        o1_0.active,
        o1_0.created_at,
        o1_0.updated_at,
        o1_0.fk_user,
        u1_0.phone_number,
        u1_0.profile_photo,
        u1_0.updated_at 
    from
        public.users u1_0 
    left join
        public.carers c1_0 
            on u1_0.id_user=c1_0.fk_user 
    left join
        public.owners o1_0 
            on u1_0.id_user=o1_0.fk_user 
    where
        u1_0.id_user=?
2025-10-23 00:55:14 [http-nio-8083-exec-10] INFO  o.e.c.s.a.c.ServiceTypeController - GET /service-types - Getting service types (page: 0, size: 20)
2025-10-23 00:55:14 [http-nio-8083-exec-10] DEBUG o.e.c.s.a.service.ServiceTypeService - Finding all service types (page: 0, size: 20, sort: null)
2025-10-23 00:55:14 [http-nio-8083-exec-10] DEBUG org.hibernate.SQL - 
    select
        st1_0.id_service_type,
        st1_0.name 
    from
        public.service_types st1_0 
    order by
        st1_0.name 
    offset
        ? rows 
    fetch
        first ? rows only
2025-10-23 00:55:14 [http-nio-8083-exec-10] DEBUG o.e.c.s.a.c.ServiceTypeController - Returning 6 service types
2025-10-23 00:55:14 [http-nio-8083-exec-2] INFO  o.e.c.s.a.c.ServiceController - GET /services - Getting all services (page: 0, size: 100)
2025-10-23 00:55:14 [http-nio-8083-exec-2] DEBUG o.e.c.s.apis.service.ServiceService - Finding all services (page: 0, size: 100)
2025-10-23 00:55:14 [http-nio-8083-exec-2] DEBUG org.hibernate.SQL - 
    select
        s1_0.id_service,
        s1_0.active,
        s1_0.fk_carer,
        s1_0.created_at,
        s1_0.description,
        s1_0.price,
        s1_0.fk_service_type,
        s1_0.updated_at 
    from
        public.services s1_0 
    where
        s1_0.active=true 
    order by
        s1_0.id_service desc 
    fetch
        first ? rows only
2025-10-23 00:55:15 [http-nio-8083-exec-2] DEBUG o.e.c.s.a.c.ServiceController - Returning 7 services
2025-10-23 00:55:15 [http-nio-8083-exec-3] INFO  o.e.c.s.a.controller.CarerController - GET /carers-with-services/9 - Getting carer with services
2025-10-23 00:55:15 [http-nio-8083-exec-3] DEBUG o.e.c.s.apis.service.CarerService - Getting carer with services, carerId: 9
2025-10-23 00:55:15 [http-nio-8083-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_carer,
        c1_0.active,
        c1_0.amount_pet,
        c1_0.created_at,
        c1_0.enum_availability_state,
        c1_0.updated_at,
        c1_0.fk_user 
    from
        public.carers c1_0 
    where
        c1_0.id_carer=? 
        and c1_0.active=true
2025-10-23 00:55:15 [http-nio-8083-exec-5] INFO  o.e.c.s.a.controller.CarerController - GET /carers-with-services/1 - Getting carer with services
2025-10-23 00:55:15 [http-nio-8083-exec-5] DEBUG o.e.c.s.apis.service.CarerService - Getting carer with services, carerId: 1
2025-10-23 00:55:15 [http-nio-8083-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_carer,
        c1_0.active,
        c1_0.amount_pet,
        c1_0.created_at,
        c1_0.enum_availability_state,
        c1_0.updated_at,
        c1_0.fk_user 
    from
        public.carers c1_0 
    where
        c1_0.id_carer=? 
        and c1_0.active=true
2025-10-23 00:55:15 [http-nio-8083-exec-4] INFO  o.e.c.s.a.controller.CarerController - GET /carers-with-services/2 - Getting carer with services
2025-10-23 00:55:15 [http-nio-8083-exec-3] DEBUG org.hibernate.SQL - 
    select
        s1_0.id_service,
        s1_0.active,
        s1_0.fk_carer,
        s1_0.created_at,
        s1_0.description,
        s1_0.price,
        s1_0.fk_service_type,
        s1_0.updated_at 
    from
        public.services s1_0 
    where
        s1_0.fk_carer=? 
        and s1_0.active
2025-10-23 00:55:15 [http-nio-8083-exec-5] DEBUG org.hibernate.SQL - 
    select
        s1_0.id_service,
        s1_0.active,
        s1_0.fk_carer,
        s1_0.created_at,
        s1_0.description,
        s1_0.price,
        s1_0.fk_service_type,
        s1_0.updated_at 
    from
        public.services s1_0 
    where
        s1_0.fk_carer=? 
        and s1_0.active
2025-10-23 00:55:15 [http-nio-8083-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id_user,
        u1_0.active,
        c1_0.id_carer,
        c1_0.active,
        c1_0.amount_pet,
        c1_0.created_at,
        c1_0.enum_availability_state,
        c1_0.updated_at,
        c1_0.fk_user,
        u1_0.created_at,
        u1_0.email,
        u1_0.hash_password,
        u1_0.last_name,
        u1_0.name,
        o1_0.id_owner,
        o1_0.active,
        o1_0.created_at,
        o1_0.updated_at,
        o1_0.fk_user,
        u1_0.phone_number,
        u1_0.profile_photo,
        u1_0.updated_at 
    from
        public.users u1_0 
    left join
        public.carers c1_0 
            on u1_0.id_user=c1_0.fk_user 
    left join
        public.owners o1_0 
            on u1_0.id_user=o1_0.fk_user 
    where
        u1_0.id_user=?
2025-10-23 00:55:15 [http-nio-8083-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id_user,
        u1_0.active,
        c1_0.id_carer,
        c1_0.active,
        c1_0.amount_pet,
        c1_0.created_at,
        c1_0.enum_availability_state,
        c1_0.updated_at,
        c1_0.fk_user,
        u1_0.created_at,
        u1_0.email,
        u1_0.hash_password,
        u1_0.last_name,
        u1_0.name,
        o1_0.id_owner,
        o1_0.active,
        o1_0.created_at,
        o1_0.updated_at,
        o1_0.fk_user,
        u1_0.phone_number,
        u1_0.profile_photo,
        u1_0.updated_at 
    from
        public.users u1_0 
    left join
        public.carers c1_0 
            on u1_0.id_user=c1_0.fk_user 
    left join
        public.owners o1_0 
            on u1_0.id_user=o1_0.fk_user 
    where
        u1_0.id_user=?
2025-10-23 00:55:15 [http-nio-8083-exec-4] DEBUG o.e.c.s.apis.service.CarerService - Getting carer with services, carerId: 2
2025-10-23 00:55:15 [http-nio-8083-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_carer,
        c1_0.active,
        c1_0.amount_pet,
        c1_0.created_at,
        c1_0.enum_availability_state,
        c1_0.updated_at,
        c1_0.fk_user 
    from
        public.carers c1_0 
    where
        c1_0.id_carer=? 
        and c1_0.active=true
2025-10-23 00:55:15 [http-nio-8083-exec-4] DEBUG org.hibernate.SQL - 
    select
        s1_0.id_service,
        s1_0.active,
        s1_0.fk_carer,
        s1_0.created_at,
        s1_0.description,
        s1_0.price,
        s1_0.fk_service_type,
        s1_0.updated_at 
    from
        public.services s1_0 
    where
        s1_0.fk_carer=? 
        and s1_0.active
2025-10-23 00:55:15 [http-nio-8083-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id_user,
        u1_0.active,
        c1_0.id_carer,
        c1_0.active,
        c1_0.amount_pet,
        c1_0.created_at,
        c1_0.enum_availability_state,
        c1_0.updated_at,
        c1_0.fk_user,
        u1_0.created_at,
        u1_0.email,
        u1_0.hash_password,
        u1_0.last_name,
        u1_0.name,
        o1_0.id_owner,
        o1_0.active,
        o1_0.created_at,
        o1_0.updated_at,
        o1_0.fk_user,
        u1_0.phone_number,
        u1_0.profile_photo,
        u1_0.updated_at 
    from
        public.users u1_0 
    left join
        public.carers c1_0 
            on u1_0.id_user=c1_0.fk_user 
    left join
        public.owners o1_0 
            on u1_0.id_user=o1_0.fk_user 
    where
        u1_0.id_user=?
2025-10-23 00:55:18 [http-nio-8083-exec-7] INFO  o.e.c.s.a.c.ServiceTypeController - GET /service-types - Getting service types (page: 0, size: 20)
2025-10-23 00:55:18 [http-nio-8083-exec-7] DEBUG o.e.c.s.a.service.ServiceTypeService - Finding all service types (page: 0, size: 20, sort: null)
2025-10-23 00:55:18 [http-nio-8083-exec-7] DEBUG org.hibernate.SQL - 
    select
        st1_0.id_service_type,
        st1_0.name 
    from
        public.service_types st1_0 
    order by
        st1_0.name 
    offset
        ? rows 
    fetch
        first ? rows only
2025-10-23 00:55:18 [http-nio-8083-exec-7] DEBUG o.e.c.s.a.c.ServiceTypeController - Returning 6 service types
2025-10-23 00:55:18 [http-nio-8083-exec-6] INFO  o.e.c.s.a.c.ServiceController - GET /services - Getting all services (page: 0, size: 100)
2025-10-23 00:55:18 [http-nio-8083-exec-6] DEBUG o.e.c.s.apis.service.ServiceService - Finding all services (page: 0, size: 100)
2025-10-23 00:55:18 [http-nio-8083-exec-6] DEBUG org.hibernate.SQL - 
    select
        s1_0.id_service,
        s1_0.active,
        s1_0.fk_carer,
        s1_0.created_at,
        s1_0.description,
        s1_0.price,
        s1_0.fk_service_type,
        s1_0.updated_at 
    from
        public.services s1_0 
    where
        s1_0.active=true 
    order by
        s1_0.id_service desc 
    fetch
        first ? rows only
2025-10-23 00:55:19 [http-nio-8083-exec-6] DEBUG o.e.c.s.a.c.ServiceController - Returning 7 services
2025-10-23 00:56:24 [http-nio-8083-exec-10] INFO  o.e.c.s.a.c.ServiceTypeController - GET /service-types - Getting service types (page: 0, size: 20)
2025-10-23 00:56:24 [http-nio-8083-exec-10] DEBUG o.e.c.s.a.service.ServiceTypeService - Finding all service types (page: 0, size: 20, sort: null)
2025-10-23 00:56:24 [http-nio-8083-exec-10] DEBUG org.hibernate.SQL - 
    select
        st1_0.id_service_type,
        st1_0.name 
    from
        public.service_types st1_0 
    order by
        st1_0.name 
    offset
        ? rows 
    fetch
        first ? rows only
2025-10-23 00:56:24 [http-nio-8083-exec-10] DEBUG o.e.c.s.a.c.ServiceTypeController - Returning 6 service types
2025-10-23 00:56:24 [http-nio-8083-exec-2] INFO  o.e.c.s.a.c.ServiceController - GET /services - Getting all services (page: 0, size: 100)
2025-10-23 00:56:24 [http-nio-8083-exec-2] DEBUG o.e.c.s.apis.service.ServiceService - Finding all services (page: 0, size: 100)
2025-10-23 00:56:24 [http-nio-8083-exec-2] DEBUG org.hibernate.SQL - 
    select
        s1_0.id_service,
        s1_0.active,
        s1_0.fk_carer,
        s1_0.created_at,
        s1_0.description,
        s1_0.price,
        s1_0.fk_service_type,
        s1_0.updated_at 
    from
        public.services s1_0 
    where
        s1_0.active=true 
    order by
        s1_0.id_service desc 
    fetch
        first ? rows only
2025-10-23 00:56:24 [http-nio-8083-exec-2] DEBUG o.e.c.s.a.c.ServiceController - Returning 7 services
2025-10-23 00:56:28 [http-nio-8083-exec-3] INFO  o.e.c.s.a.c.ServiceTypeController - GET /service-types - Getting service types (page: 0, size: 20)
2025-10-23 00:56:29 [http-nio-8083-exec-3] DEBUG o.e.c.s.a.service.ServiceTypeService - Finding all service types (page: 0, size: 20, sort: null)
2025-10-23 00:56:29 [http-nio-8083-exec-3] DEBUG org.hibernate.SQL - 
    select
        st1_0.id_service_type,
        st1_0.name 
    from
        public.service_types st1_0 
    order by
        st1_0.name 
    offset
        ? rows 
    fetch
        first ? rows only
2025-10-23 00:56:29 [http-nio-8083-exec-3] DEBUG o.e.c.s.a.c.ServiceTypeController - Returning 6 service types
2025-10-23 00:56:29 [http-nio-8083-exec-5] INFO  o.e.c.s.a.c.ServiceController - GET /services - Getting all services (page: 0, size: 100)
2025-10-23 00:56:29 [http-nio-8083-exec-5] DEBUG o.e.c.s.apis.service.ServiceService - Finding all services (page: 0, size: 100)
2025-10-23 00:56:29 [http-nio-8083-exec-5] DEBUG org.hibernate.SQL - 
    select
        s1_0.id_service,
        s1_0.active,
        s1_0.fk_carer,
        s1_0.created_at,
        s1_0.description,
        s1_0.price,
        s1_0.fk_service_type,
        s1_0.updated_at 
    from
        public.services s1_0 
    where
        s1_0.active=true 
    order by
        s1_0.id_service desc 
    fetch
        first ? rows only
2025-10-23 00:56:29 [http-nio-8083-exec-5] DEBUG o.e.c.s.a.c.ServiceController - Returning 7 services
2025-10-23 00:56:29 [http-nio-8083-exec-4] ERROR o.e.c.s.e.GlobalExceptionHandler - Internal Server Error: 
org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Long'; For input string: "undefined"
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.convertIfNecessary(AbstractNamedValueMethodArgumentResolver.java:302)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:137)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:224)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:178)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:384)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: java.lang.NumberFormatException: For input string: "undefined"
	at java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:67)
	at java.base/java.lang.Long.parseLong(Long.java:709)
	at java.base/java.lang.Long.valueOf(Long.java:1157)
	at org.springframework.util.NumberUtils.parseNumber(NumberUtils.java:206)
	at org.springframework.beans.propertyeditors.CustomNumberEditor.setAsText(CustomNumberEditor.java:115)
	at org.springframework.beans.TypeConverterDelegate.doConvertTextValue(TypeConverterDelegate.java:439)
	at org.springframework.beans.TypeConverterDelegate.doConvertValue(TypeConverterDelegate.java:412)
	at org.springframework.beans.TypeConverterDelegate.convertIfNecessary(TypeConverterDelegate.java:161)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:80)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:53)
	at org.springframework.validation.DataBinder.convertIfNecessary(DataBinder.java:860)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.convertIfNecessary(AbstractNamedValueMethodArgumentResolver.java:294)
	... 48 common frames omitted
2025-10-23 00:56:29 [http-nio-8083-exec-4] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Long'; For input string: "undefined"]
2025-10-23 00:57:10 [http-nio-8083-exec-7] INFO  o.e.c.s.a.c.ServiceTypeController - GET /service-types - Getting service types (page: 0, size: 20)
2025-10-23 00:57:10 [http-nio-8083-exec-7] DEBUG o.e.c.s.a.service.ServiceTypeService - Finding all service types (page: 0, size: 20, sort: null)
2025-10-23 00:57:10 [http-nio-8083-exec-7] DEBUG org.hibernate.SQL - 
    select
        st1_0.id_service_type,
        st1_0.name 
    from
        public.service_types st1_0 
    order by
        st1_0.name 
    offset
        ? rows 
    fetch
        first ? rows only
2025-10-23 00:57:10 [http-nio-8083-exec-7] DEBUG o.e.c.s.a.c.ServiceTypeController - Returning 6 service types
2025-10-23 00:57:10 [http-nio-8083-exec-6] INFO  o.e.c.s.a.c.ServiceController - GET /services - Getting all services (page: 0, size: 100)
2025-10-23 00:57:10 [http-nio-8083-exec-6] DEBUG o.e.c.s.apis.service.ServiceService - Finding all services (page: 0, size: 100)
2025-10-23 00:57:10 [http-nio-8083-exec-6] DEBUG org.hibernate.SQL - 
    select
        s1_0.id_service,
        s1_0.active,
        s1_0.fk_carer,
        s1_0.created_at,
        s1_0.description,
        s1_0.price,
        s1_0.fk_service_type,
        s1_0.updated_at 
    from
        public.services s1_0 
    where
        s1_0.active=true 
    order by
        s1_0.id_service desc 
    fetch
        first ? rows only
2025-10-23 00:57:10 [http-nio-8083-exec-6] DEBUG o.e.c.s.a.c.ServiceController - Returning 7 services
2025-10-23 00:57:10 [http-nio-8083-exec-1] ERROR o.e.c.s.e.GlobalExceptionHandler - Internal Server Error: 
org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Long'; For input string: "undefined"
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.convertIfNecessary(AbstractNamedValueMethodArgumentResolver.java:302)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:137)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:224)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:178)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:384)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: java.lang.NumberFormatException: For input string: "undefined"
	at java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:67)
	at java.base/java.lang.Long.parseLong(Long.java:709)
	at java.base/java.lang.Long.valueOf(Long.java:1157)
	at org.springframework.util.NumberUtils.parseNumber(NumberUtils.java:206)
	at org.springframework.beans.propertyeditors.CustomNumberEditor.setAsText(CustomNumberEditor.java:115)
	at org.springframework.beans.TypeConverterDelegate.doConvertTextValue(TypeConverterDelegate.java:439)
	at org.springframework.beans.TypeConverterDelegate.doConvertValue(TypeConverterDelegate.java:412)
	at org.springframework.beans.TypeConverterDelegate.convertIfNecessary(TypeConverterDelegate.java:161)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:80)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:53)
	at org.springframework.validation.DataBinder.convertIfNecessary(DataBinder.java:860)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.convertIfNecessary(AbstractNamedValueMethodArgumentResolver.java:294)
	... 48 common frames omitted
2025-10-23 00:57:10 [http-nio-8083-exec-1] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Long'; For input string: "undefined"]
2025-10-23 00:57:15 [http-nio-8083-exec-9] INFO  o.e.c.s.a.c.ServiceTypeController - GET /service-types - Getting service types (page: 0, size: 20)
2025-10-23 00:57:15 [http-nio-8083-exec-9] DEBUG o.e.c.s.a.service.ServiceTypeService - Finding all service types (page: 0, size: 20, sort: null)
2025-10-23 00:57:15 [http-nio-8083-exec-9] DEBUG org.hibernate.SQL - 
    select
        st1_0.id_service_type,
        st1_0.name 
    from
        public.service_types st1_0 
    order by
        st1_0.name 
    offset
        ? rows 
    fetch
        first ? rows only
2025-10-23 00:57:15 [http-nio-8083-exec-9] DEBUG o.e.c.s.a.c.ServiceTypeController - Returning 6 service types
2025-10-23 00:57:15 [http-nio-8083-exec-9] INFO  o.e.c.s.a.c.ServiceController - GET /services - Getting all services (page: 0, size: 100)
2025-10-23 00:57:15 [http-nio-8083-exec-9] DEBUG o.e.c.s.apis.service.ServiceService - Finding all services (page: 0, size: 100)
2025-10-23 00:57:15 [http-nio-8083-exec-9] DEBUG org.hibernate.SQL - 
    select
        s1_0.id_service,
        s1_0.active,
        s1_0.fk_carer,
        s1_0.created_at,
        s1_0.description,
        s1_0.price,
        s1_0.fk_service_type,
        s1_0.updated_at 
    from
        public.services s1_0 
    where
        s1_0.active=true 
    order by
        s1_0.id_service desc 
    fetch
        first ? rows only
2025-10-23 00:57:15 [http-nio-8083-exec-9] DEBUG o.e.c.s.a.c.ServiceController - Returning 7 services
2025-10-23 00:57:15 [http-nio-8083-exec-8] ERROR o.e.c.s.e.GlobalExceptionHandler - Internal Server Error: 
org.springframework.web.servlet.resource.NoResourceFoundException: No static resource carers-with-services.
	at org.springframework.web.servlet.resource.ResourceHttpRequestHandler.handleRequest(ResourceHttpRequestHandler.java:585)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:384)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-10-23 00:57:15 [http-nio-8083-exec-8] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource carers-with-services.]
2025-10-23 00:57:23 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-10-23 00:57:23 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-10-23 00:57:37 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-10-23 01:23:20 [main] INFO  o.e.c.s.ServiceMicroserviceApplicationTests - Starting ServiceMicroserviceApplicationTests using Java 21.0.8 with PID 11028 (started by HP in C:\Users\HP\IdeaProjects\service-microservice)
2025-10-23 01:23:20 [main] DEBUG o.e.c.s.ServiceMicroserviceApplicationTests - Running with Spring Boot v3.3.4, Spring v6.1.13
2025-10-23 01:23:20 [main] INFO  o.e.c.s.ServiceMicroserviceApplicationTests - No active profile set, falling back to 1 default profile: "default"
2025-10-23 01:23:22 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-10-23 01:23:22 [main] DEBUG o.s.d.r.c.RepositoryConfigurationDelegate - Scanning for JPA repositories in packages org.example.cuidadodemascotas.servicemicroservice.apis.repository.
2025-10-23 01:23:23 [main] DEBUG o.s.d.r.c.RepositoryComponentProvider - Identified candidate component class: file [C:\Users\HP\IdeaProjects\service-microservice\target\classes\org\example\cuidadodemascotas\servicemicroservice\apis\repository\ICarerRepository.class]
2025-10-23 01:23:23 [main] DEBUG o.s.d.r.c.RepositoryComponentProvider - Identified candidate component class: file [C:\Users\HP\IdeaProjects\service-microservice\target\classes\org\example\cuidadodemascotas\servicemicroservice\apis\repository\ServiceRepository.class]
2025-10-23 01:23:23 [main] DEBUG o.s.d.r.c.RepositoryComponentProvider - Identified candidate component class: file [C:\Users\HP\IdeaProjects\service-microservice\target\classes\org\example\cuidadodemascotas\servicemicroservice\apis\repository\ServiceTypeRepository.class]
2025-10-23 01:23:23 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 71 ms. Found 3 JPA repository interfaces.
2025-10-23 01:23:24 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-10-23 01:23:25 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.3.Final
2025-10-23 01:23:25 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-10-23 01:23:26 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-10-23 01:23:26 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-10-23 01:24:28 [main] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - SQL Error: 0, SQLState: XX000
2025-10-23 01:24:28 [main] ERROR o.h.e.jdbc.spi.SqlExceptionHelper - FATAL: MaxClientsInSessionMode: max clients reached - in Session mode max clients are limited to pool_size
2025-10-23 01:24:28 [main] WARN  o.h.e.j.e.i.JdbcEnvironmentInitiator - HHH000342: Could not obtain connection to query metadata
org.hibernate.exception.GenericJDBCException: unable to obtain isolated JDBC connection [FATAL: MaxClientsInSessionMode: max clients reached - in Session mode max clients are limited to pool_size] [n/a]
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:63)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:108)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:94)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcIsolationDelegate.delegateWork(JdbcIsolationDelegate.java:116)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironmentUsingJdbcMetadata(JdbcEnvironmentInitiator.java:292)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:124)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:78)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:130)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:238)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:215)
	at org.hibernate.boot.model.relational.Database.<init>(Database.java:45)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getDatabase(InFlightMetadataCollectorImpl.java:221)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:189)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:171)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1431)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1502)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:205)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:954)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1463)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:553)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:191)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:130)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:163)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:106)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:105)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.apache.maven.surefire.junitplatform.LazyLauncher.execute(LazyLauncher.java:56)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.execute(JUnitPlatformProvider.java:184)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:148)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:122)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
Caused by: org.postgresql.util.PSQLException: FATAL: MaxClientsInSessionMode: max clients reached - in Session mode max clients are limited to pool_size
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2733)
	at org.postgresql.core.v3.QueryExecutorImpl.readStartupMessages(QueryExecutorImpl.java:2845)
	at org.postgresql.core.v3.QueryExecutorImpl.<init>(QueryExecutorImpl.java:176)
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:323)
	at org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:54)
	at org.postgresql.jdbc.PgConnection.<init>(PgConnection.java:273)
	at org.postgresql.Driver.makeConnection(Driver.java:446)
	at org.postgresql.Driver.connect(Driver.java:298)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:137)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:360)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:202)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:461)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:550)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:98)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:111)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:439)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcIsolationDelegate.delegateWork(JdbcIsolationDelegate.java:61)
	... 113 common frames omitted
2025-10-23 01:24:28 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-10-23 01:24:32 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-10-23 01:24:32 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-10-23 01:24:32 [main] DEBUG o.s.d.j.r.c.JpaMetamodelMappingContextFactoryBean - Initializing JpaMetamodelMappingContext…
2025-10-23 01:24:32 [main] DEBUG o.s.d.j.r.c.JpaMetamodelMappingContextFactoryBean - Finished initializing JpaMetamodelMappingContext
2025-10-23 01:24:32 [main] DEBUG o.s.d.r.c.s.RepositoryFactorySupport - Initializing repository instance for org.example.cuidadodemascotas.servicemicroservice.apis.repository.ICarerRepository…
2025-10-23 01:24:33 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-10-23 01:24:33 [main] DEBUG o.s.d.j.repository.query.NamedQuery - Did not find named query Carer.findByIdAndActiveTrue.count
2025-10-23 01:24:33 [main] DEBUG o.s.d.j.repository.query.NamedQuery - Did not find named query Carer.findByActiveTrue.count
2025-10-23 01:24:33 [main] DEBUG o.s.d.r.c.s.RepositoryFactorySupport - Finished creation of repository instance for org.example.cuidadodemascotas.servicemicroservice.apis.repository.ICarerRepository.
2025-10-23 01:24:33 [main] DEBUG o.s.d.r.c.s.RepositoryFactorySupport - Initializing repository instance for org.example.cuidadodemascotas.servicemicroservice.apis.repository.ServiceRepository…
2025-10-23 01:24:33 [main] DEBUG o.s.d.j.repository.query.NamedQuery - Did not find named query Service.findByCarerIdAndServiceTypeIdPaged.count
2025-10-23 01:24:34 [main] DEBUG o.s.d.j.repository.query.NamedQuery - Looking up named query Service.countByCarerIdAndActiveTrue
2025-10-23 01:24:34 [main] DEBUG o.s.d.j.repository.query.NamedQuery - Did not find named query Service.countByCarerIdAndActiveTrue
2025-10-23 01:24:34 [main] DEBUG o.s.d.j.repository.query.NamedQuery - Looking up named query Service.findByServiceTypeIdAndActiveTrue
2025-10-23 01:24:34 [main] DEBUG o.s.d.j.repository.query.NamedQuery - Did not find named query Service.findByServiceTypeIdAndActiveTrue
2025-10-23 01:24:34 [main] DEBUG o.s.d.j.repository.query.NamedQuery - Did not find named query Service.findByServiceTypeIdAndPriceRangePaged.count
2025-10-23 01:24:34 [main] DEBUG o.s.d.j.repository.query.NamedQuery - Did not find named query Service.findByCarerIdAndPriceRangePaged.count
2025-10-23 01:24:34 [main] DEBUG o.s.d.j.repository.query.NamedQuery - Did not find named query Service.existsByCarerAndServiceType.count
2025-10-23 01:24:34 [main] DEBUG o.s.d.j.repository.query.NamedQuery - Did not find named query Service.findByPriceRangePaged.count
2025-10-23 01:24:34 [main] DEBUG o.s.d.j.repository.query.NamedQuery - Did not find named query Service.findByIdAndActiveTrue.count
2025-10-23 01:24:34 [main] DEBUG o.s.d.j.repository.query.NamedQuery - Did not find named query Service.countByServiceTypeId.count
2025-10-23 01:24:34 [main] DEBUG o.s.d.j.repository.query.NamedQuery - Did not find named query Service.searchByDescription.count
2025-10-23 01:24:34 [main] DEBUG o.s.d.j.repository.query.NamedQuery - Looking up named query Service.findByCarerIdAndActiveTrue
2025-10-23 01:24:34 [main] DEBUG o.s.d.j.repository.query.NamedQuery - Did not find named query Service.findByCarerIdAndActiveTrue
2025-10-23 01:24:34 [main] DEBUG o.s.d.j.repository.query.NamedQuery - Did not find named query Service.findByServiceTypeIdPaged.count
2025-10-23 01:24:34 [main] DEBUG o.s.d.j.repository.query.NamedQuery - Did not find named query Service.findByCarerIdPaged.count
2025-10-23 01:24:34 [main] DEBUG o.s.d.j.repository.query.NamedQuery - Looking up named query Service.countByActiveTrue
2025-10-23 01:24:34 [main] DEBUG o.s.d.j.repository.query.NamedQuery - Did not find named query Service.countByActiveTrue
2025-10-23 01:24:34 [main] DEBUG o.s.d.j.repository.query.NamedQuery - Did not find named query Service.findAllServices.count
2025-10-23 01:24:34 [main] DEBUG o.s.d.j.repository.query.NamedQuery - Did not find named query Service.countByCarerId.count
2025-10-23 01:24:34 [main] DEBUG o.s.d.j.repository.query.NamedQuery - Did not find named query Service.countByPriceRange.count
2025-10-23 01:24:34 [main] DEBUG o.s.d.j.repository.query.NamedQuery - Did not find named query Service.findByFilters.count
2025-10-23 01:24:34 [main] DEBUG o.s.d.j.repository.query.NamedQuery - Looking up named query Service.findByActiveTrue
2025-10-23 01:24:34 [main] DEBUG o.s.d.j.repository.query.NamedQuery - Did not find named query Service.findByActiveTrue
2025-10-23 01:24:34 [main] DEBUG o.s.d.j.repository.query.NamedQuery - Looking up named query Service.findByActiveTrue
2025-10-23 01:24:34 [main] DEBUG o.s.d.j.repository.query.NamedQuery - Did not find named query Service.findByActiveTrue
2025-10-23 01:24:34 [main] DEBUG o.s.d.r.c.s.RepositoryFactorySupport - Finished creation of repository instance for org.example.cuidadodemascotas.servicemicroservice.apis.repository.ServiceRepository.
2025-10-23 01:24:34 [main] DEBUG o.s.d.r.c.s.RepositoryFactorySupport - Initializing repository instance for org.example.cuidadodemascotas.servicemicroservice.apis.repository.ServiceTypeRepository…
2025-10-23 01:24:34 [main] DEBUG o.s.d.j.repository.query.NamedQuery - Looking up named query ServiceType.existsByNameAndIdNot
2025-10-23 01:24:34 [main] DEBUG o.s.d.j.repository.query.NamedQuery - Did not find named query ServiceType.existsByNameAndIdNot
2025-10-23 01:24:34 [main] DEBUG o.s.d.j.repository.query.NamedQuery - Looking up named query ServiceType.findAllByOrderByNameAsc
2025-10-23 01:24:34 [main] DEBUG o.s.d.j.repository.query.NamedQuery - Did not find named query ServiceType.findAllByOrderByNameAsc
2025-10-23 01:24:34 [main] DEBUG o.s.d.j.repository.query.NamedQuery - Looking up named query ServiceType.findAllByOrderByNameAsc
2025-10-23 01:24:34 [main] DEBUG o.s.d.j.repository.query.NamedQuery - Did not find named query ServiceType.findAllByOrderByNameAsc
2025-10-23 01:24:34 [main] DEBUG o.s.d.j.repository.query.NamedQuery - Looking up named query ServiceType.findByNameIgnoreCase
2025-10-23 01:24:34 [main] DEBUG o.s.d.j.repository.query.NamedQuery - Did not find named query ServiceType.findByNameIgnoreCase
2025-10-23 01:24:34 [main] DEBUG o.s.d.j.repository.query.NamedQuery - Looking up named query ServiceType.existsByName
2025-10-23 01:24:34 [main] DEBUG o.s.d.j.repository.query.NamedQuery - Did not find named query ServiceType.existsByName
2025-10-23 01:24:35 [main] DEBUG o.s.d.j.repository.query.NamedQuery - Did not find named query ServiceType.searchByName.count
2025-10-23 01:24:35 [main] DEBUG o.s.d.r.c.s.RepositoryFactorySupport - Finished creation of repository instance for org.example.cuidadodemascotas.servicemicroservice.apis.repository.ServiceTypeRepository.
2025-10-23 01:24:37 [main] INFO  o.e.c.s.ServiceMicroserviceApplicationTests - Started ServiceMicroserviceApplicationTests in 77.793 seconds (process running for 81.479)
2025-10-23 01:24:39 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-10-23 01:25:06 [restartedMain] INFO  o.e.c.s.ServiceMicroserviceApplication - Starting ServiceMicroserviceApplication using Java 21.0.8 with PID 19660 (C:\Users\HP\IdeaProjects\service-microservice\target\classes started by HP in C:\Users\HP\IdeaProjects\service-microservice)
2025-10-23 01:25:06 [restartedMain] DEBUG o.e.c.s.ServiceMicroserviceApplication - Running with Spring Boot v3.3.4, Spring v6.1.13
2025-10-23 01:25:06 [restartedMain] INFO  o.e.c.s.ServiceMicroserviceApplication - No active profile set, falling back to 1 default profile: "default"
2025-10-23 01:25:07 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-10-23 01:25:07 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-10-23 01:25:08 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-10-23 01:25:08 [restartedMain] DEBUG o.s.d.r.c.RepositoryConfigurationDelegate - Scanning for JPA repositories in packages org.example.cuidadodemascotas.servicemicroservice.apis.repository.
2025-10-23 01:25:08 [restartedMain] DEBUG o.s.d.r.c.RepositoryComponentProvider - Identified candidate component class: file [C:\Users\HP\IdeaProjects\service-microservice\target\classes\org\example\cuidadodemascotas\servicemicroservice\apis\repository\ICarerRepository.class]
2025-10-23 01:25:08 [restartedMain] DEBUG o.s.d.r.c.RepositoryComponentProvider - Identified candidate component class: file [C:\Users\HP\IdeaProjects\service-microservice\target\classes\org\example\cuidadodemascotas\servicemicroservice\apis\repository\ServiceRepository.class]
2025-10-23 01:25:08 [restartedMain] DEBUG o.s.d.r.c.RepositoryComponentProvider - Identified candidate component class: file [C:\Users\HP\IdeaProjects\service-microservice\target\classes\org\example\cuidadodemascotas\servicemicroservice\apis\repository\ServiceTypeRepository.class]
2025-10-23 01:25:08 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 93 ms. Found 3 JPA repository interfaces.
2025-10-23 01:25:09 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8083 (http)
2025-10-23 01:25:09 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-10-23 01:25:09 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.30]
2025-10-23 01:25:10 [restartedMain] INFO  o.a.c.c.C.[.[localhost].[/api/v1] - Initializing Spring embedded WebApplicationContext
2025-10-23 01:25:10 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2952 ms
2025-10-23 01:25:10 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-10-23 01:25:10 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.3.Final
2025-10-23 01:25:10 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-10-23 01:25:10 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-10-23 01:25:10 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-10-23 01:26:12 [restartedMain] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - SQL Error: 0, SQLState: XX000
2025-10-23 01:26:12 [restartedMain] ERROR o.h.e.jdbc.spi.SqlExceptionHelper - FATAL: MaxClientsInSessionMode: max clients reached - in Session mode max clients are limited to pool_size
2025-10-23 01:26:12 [restartedMain] WARN  o.h.e.j.e.i.JdbcEnvironmentInitiator - HHH000342: Could not obtain connection to query metadata
org.hibernate.exception.GenericJDBCException: unable to obtain isolated JDBC connection [FATAL: MaxClientsInSessionMode: max clients reached - in Session mode max clients are limited to pool_size] [n/a]
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:63)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:108)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:94)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcIsolationDelegate.delegateWork(JdbcIsolationDelegate.java:116)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironmentUsingJdbcMetadata(JdbcEnvironmentInitiator.java:292)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:124)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:78)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:130)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:238)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:215)
	at org.hibernate.boot.model.relational.Database.<init>(Database.java:45)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getDatabase(InFlightMetadataCollectorImpl.java:221)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:189)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:171)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1431)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1502)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:205)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:954)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at org.example.cuidadodemascotas.servicemicroservice.ServiceMicroserviceApplication.main(ServiceMicroserviceApplication.java:22)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: org.postgresql.util.PSQLException: FATAL: MaxClientsInSessionMode: max clients reached - in Session mode max clients are limited to pool_size
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2733)
	at org.postgresql.core.v3.QueryExecutorImpl.readStartupMessages(QueryExecutorImpl.java:2845)
	at org.postgresql.core.v3.QueryExecutorImpl.<init>(QueryExecutorImpl.java:176)
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:323)
	at org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:54)
	at org.postgresql.jdbc.PgConnection.<init>(PgConnection.java:273)
	at org.postgresql.Driver.makeConnection(Driver.java:446)
	at org.postgresql.Driver.connect(Driver.java:298)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:137)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:360)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:202)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:461)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:550)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:98)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:111)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:439)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcIsolationDelegate.delegateWork(JdbcIsolationDelegate.java:61)
	... 38 common frames omitted
2025-10-23 01:26:12 [restartedMain] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-10-23 01:26:14 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-10-23 01:26:14 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-10-23 01:26:14 [restartedMain] DEBUG o.s.d.j.r.c.JpaMetamodelMappingContextFactoryBean - Initializing JpaMetamodelMappingContext…
2025-10-23 01:26:14 [restartedMain] DEBUG o.s.d.j.r.c.JpaMetamodelMappingContextFactoryBean - Finished initializing JpaMetamodelMappingContext
2025-10-23 01:26:14 [restartedMain] DEBUG o.s.d.r.c.s.RepositoryFactorySupport - Initializing repository instance for org.example.cuidadodemascotas.servicemicroservice.apis.repository.ICarerRepository…
2025-10-23 01:26:14 [restartedMain] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-10-23 01:26:14 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Did not find named query Carer.findByActiveTrue.count
2025-10-23 01:26:15 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Did not find named query Carer.findByIdAndActiveTrue.count
2025-10-23 01:26:15 [restartedMain] DEBUG o.s.d.r.c.s.RepositoryFactorySupport - Finished creation of repository instance for org.example.cuidadodemascotas.servicemicroservice.apis.repository.ICarerRepository.
2025-10-23 01:26:15 [restartedMain] DEBUG o.s.d.r.c.s.RepositoryFactorySupport - Initializing repository instance for org.example.cuidadodemascotas.servicemicroservice.apis.repository.ServiceRepository…
2025-10-23 01:26:15 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Looking up named query Service.countByActiveTrue
2025-10-23 01:26:15 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Did not find named query Service.countByActiveTrue
2025-10-23 01:26:15 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Did not find named query Service.findByCarerIdPaged.count
2025-10-23 01:26:15 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Did not find named query Service.findAllServices.count
2025-10-23 01:26:15 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Did not find named query Service.findByFilters.count
2025-10-23 01:26:15 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Did not find named query Service.countByCarerId.count
2025-10-23 01:26:15 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Did not find named query Service.countByPriceRange.count
2025-10-23 01:26:15 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Did not find named query Service.findByCarerIdAndServiceTypeIdPaged.count
2025-10-23 01:26:15 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Looking up named query Service.findByServiceTypeIdAndActiveTrue
2025-10-23 01:26:15 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Did not find named query Service.findByServiceTypeIdAndActiveTrue
2025-10-23 01:26:15 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Looking up named query Service.countByCarerIdAndActiveTrue
2025-10-23 01:26:15 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Did not find named query Service.countByCarerIdAndActiveTrue
2025-10-23 01:26:15 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Looking up named query Service.findByCarerIdAndActiveTrue
2025-10-23 01:26:15 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Did not find named query Service.findByCarerIdAndActiveTrue
2025-10-23 01:26:15 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Did not find named query Service.searchByDescription.count
2025-10-23 01:26:15 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Did not find named query Service.countByServiceTypeId.count
2025-10-23 01:26:15 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Did not find named query Service.findByServiceTypeIdPaged.count
2025-10-23 01:26:15 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Did not find named query Service.findByPriceRangePaged.count
2025-10-23 01:26:15 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Did not find named query Service.findByIdAndActiveTrue.count
2025-10-23 01:26:15 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Did not find named query Service.findByServiceTypeIdAndPriceRangePaged.count
2025-10-23 01:26:15 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Did not find named query Service.findByCarerIdAndPriceRangePaged.count
2025-10-23 01:26:15 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Did not find named query Service.existsByCarerAndServiceType.count
2025-10-23 01:26:15 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Looking up named query Service.findByActiveTrue
2025-10-23 01:26:15 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Did not find named query Service.findByActiveTrue
2025-10-23 01:26:15 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Looking up named query Service.findByActiveTrue
2025-10-23 01:26:15 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Did not find named query Service.findByActiveTrue
2025-10-23 01:26:15 [restartedMain] DEBUG o.s.d.r.c.s.RepositoryFactorySupport - Finished creation of repository instance for org.example.cuidadodemascotas.servicemicroservice.apis.repository.ServiceRepository.
2025-10-23 01:26:15 [restartedMain] DEBUG o.s.d.r.c.s.RepositoryFactorySupport - Initializing repository instance for org.example.cuidadodemascotas.servicemicroservice.apis.repository.ServiceTypeRepository…
2025-10-23 01:26:15 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Looking up named query ServiceType.existsByName
2025-10-23 01:26:15 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Did not find named query ServiceType.existsByName
2025-10-23 01:26:15 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Did not find named query ServiceType.searchByName.count
2025-10-23 01:26:15 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Looking up named query ServiceType.findAllByOrderByNameAsc
2025-10-23 01:26:15 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Did not find named query ServiceType.findAllByOrderByNameAsc
2025-10-23 01:26:15 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Looking up named query ServiceType.findAllByOrderByNameAsc
2025-10-23 01:26:15 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Did not find named query ServiceType.findAllByOrderByNameAsc
2025-10-23 01:26:15 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Looking up named query ServiceType.existsByNameAndIdNot
2025-10-23 01:26:15 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Did not find named query ServiceType.existsByNameAndIdNot
2025-10-23 01:26:15 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Looking up named query ServiceType.findByNameIgnoreCase
2025-10-23 01:26:15 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Did not find named query ServiceType.findByNameIgnoreCase
2025-10-23 01:26:15 [restartedMain] DEBUG o.s.d.r.c.s.RepositoryFactorySupport - Finished creation of repository instance for org.example.cuidadodemascotas.servicemicroservice.apis.repository.ServiceTypeRepository.
2025-10-23 01:26:16 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-10-23 01:26:16 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8083 (http) with context path '/api/v1'
2025-10-23 01:26:16 [restartedMain] INFO  o.e.c.s.ServiceMicroserviceApplication - Started ServiceMicroserviceApplication in 70.157 seconds (process running for 71.661)
2025-10-23 01:26:16 [restartedMain] INFO  o.e.c.s.ServiceMicroserviceApplication - ========================================
2025-10-23 01:26:16 [restartedMain] INFO  o.e.c.s.ServiceMicroserviceApplication - Service Microservice Started Successfully!
2025-10-23 01:26:16 [restartedMain] INFO  o.e.c.s.ServiceMicroserviceApplication - Swagger UI: http://localhost:8083/api/v1/swagger-ui.html
2025-10-23 01:26:16 [restartedMain] INFO  o.e.c.s.ServiceMicroserviceApplication - API Docs: http://localhost:8083/api/v1/api-docs
2025-10-23 01:26:16 [restartedMain] INFO  o.e.c.s.ServiceMicroserviceApplication - ========================================
2025-10-23 01:26:19 [http-nio-8083-exec-1] INFO  o.a.c.c.C.[.[localhost].[/api/v1] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-10-23 01:26:19 [http-nio-8083-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-10-23 01:26:19 [http-nio-8083-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2025-10-23 01:26:22 [http-nio-8083-exec-3] INFO  o.s.api.AbstractOpenApiResource - Init duration for springdoc-openapi is: 1517 ms
2025-10-23 01:26:22 [http-nio-8083-exec-3] ERROR o.e.c.s.e.GlobalExceptionHandler - Internal Server Error: 
org.springframework.web.context.request.async.AsyncRequestNotUsableException: ServletOutputStream failed to write: java.io.IOException: Se ha anulado una conexión establecida por el software en su equipo host.
	at org.springframework.web.context.request.async.StandardServletAsyncWebRequest$LifecycleHttpServletResponse.handleIOException(StandardServletAsyncWebRequest.java:343)
	at org.springframework.web.context.request.async.StandardServletAsyncWebRequest$LifecycleServletOutputStream.write(StandardServletAsyncWebRequest.java:401)
	at java.base/java.io.OutputStream.write(OutputStream.java:124)
	at org.springframework.util.StreamUtils.copy(StreamUtils.java:117)
	at org.springframework.http.converter.ByteArrayHttpMessageConverter.writeInternal(ByteArrayHttpMessageConverter.java:67)
	at org.springframework.http.converter.ByteArrayHttpMessageConverter.writeInternal(ByteArrayHttpMessageConverter.java:38)
	at org.springframework.http.converter.AbstractHttpMessageConverter.write(AbstractHttpMessageConverter.java:235)
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:300)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.handleReturnValue(RequestResponseBodyMethodProcessor.java:192)
	at org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:384)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: org.apache.catalina.connector.ClientAbortException: java.io.IOException: Se ha anulado una conexión establecida por el software en su equipo host.
	at org.apache.catalina.connector.OutputBuffer.realWriteBytes(OutputBuffer.java:341)
	at org.apache.catalina.connector.OutputBuffer.appendByteArray(OutputBuffer.java:746)
	at org.apache.catalina.connector.OutputBuffer.append(OutputBuffer.java:667)
	at org.apache.catalina.connector.OutputBuffer.writeBytes(OutputBuffer.java:376)
	at org.apache.catalina.connector.OutputBuffer.write(OutputBuffer.java:354)
	at org.apache.catalina.connector.CoyoteOutputStream.write(CoyoteOutputStream.java:103)
	at org.springframework.web.context.request.async.StandardServletAsyncWebRequest$LifecycleServletOutputStream.write(StandardServletAsyncWebRequest.java:398)
	... 52 common frames omitted
Caused by: java.io.IOException: Se ha anulado una conexión establecida por el software en su equipo host.
	at java.base/sun.nio.ch.SocketDispatcher.write0(Native Method)
	at java.base/sun.nio.ch.SocketDispatcher.write(SocketDispatcher.java:54)
	at java.base/sun.nio.ch.IOUtil.writeFromNativeBuffer(IOUtil.java:137)
	at java.base/sun.nio.ch.IOUtil.write(IOUtil.java:102)
	at java.base/sun.nio.ch.IOUtil.write(IOUtil.java:58)
	at java.base/sun.nio.ch.SocketChannelImpl.write(SocketChannelImpl.java:542)
	at org.apache.tomcat.util.net.NioChannel.write(NioChannel.java:122)
	at org.apache.tomcat.util.net.NioEndpoint$NioSocketWrapper.doWrite(NioEndpoint.java:1378)
	at org.apache.tomcat.util.net.SocketWrapperBase.doWrite(SocketWrapperBase.java:764)
	at org.apache.tomcat.util.net.SocketWrapperBase.writeBlocking(SocketWrapperBase.java:589)
	at org.apache.tomcat.util.net.SocketWrapperBase.write(SocketWrapperBase.java:533)
	at org.apache.coyote.http11.Http11OutputBuffer$SocketOutputBuffer.doWrite(Http11OutputBuffer.java:548)
	at org.apache.coyote.http11.filters.IdentityOutputFilter.doWrite(IdentityOutputFilter.java:73)
	at org.apache.coyote.http11.Http11OutputBuffer.doWrite(Http11OutputBuffer.java:193)
	at org.apache.coyote.Response.doWrite(Response.java:633)
	at org.apache.catalina.connector.OutputBuffer.realWriteBytes(OutputBuffer.java:329)
	... 58 common frames omitted
2025-10-23 01:26:22 [http-nio-8083-exec-3] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.context.request.async.AsyncRequestNotUsableException: ServletOutputStream failed to write: java.io.IOException: Se ha anulado una conexión establecida por el software en su equipo host.]
2025-10-23 01:26:25 [http-nio-8083-exec-6] INFO  o.e.c.s.a.c.ServiceTypeController - GET /service-types - Getting service types (page: 0, size: 20)
2025-10-23 01:26:25 [http-nio-8083-exec-6] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-10-23 01:26:45 [http-nio-8083-exec-7] INFO  o.e.c.s.a.controller.CarerController - GET /carers-with-services - Getting all carers with services
2025-10-23 01:27:27 [http-nio-8083-exec-7] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-10-23 01:27:27 [http-nio-8083-exec-6] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - SQL Error: 0, SQLState: XX000
2025-10-23 01:27:27 [http-nio-8083-exec-6] ERROR o.h.e.jdbc.spi.SqlExceptionHelper - FATAL: MaxClientsInSessionMode: max clients reached - in Session mode max clients are limited to pool_size
2025-10-23 01:27:27 [http-nio-8083-exec-6] ERROR o.e.c.s.e.GlobalExceptionHandler - Internal Server Error: 
org.springframework.transaction.CannotCreateTransactionException: Could not open JPA EntityManager for transaction
	at org.springframework.orm.jpa.JpaTransactionManager.doBegin(JpaTransactionManager.java:466)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.startTransaction(AbstractPlatformTransactionManager.java:532)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:405)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.createTransactionIfNecessary(TransactionAspectSupport.java:604)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:373)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at org.example.cuidadodemascotas.servicemicroservice.apis.service.ServiceTypeService$$SpringCGLIB$$0.findAll(<generated>)
	at org.example.cuidadodemascotas.servicemicroservice.apis.controller.ServiceTypeController.getServiceTypes(ServiceTypeController.java:51)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.validation.beanvalidation.MethodValidationInterceptor.invoke(MethodValidationInterceptor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at org.example.cuidadodemascotas.servicemicroservice.apis.controller.ServiceTypeController$$SpringCGLIB$$0.getServiceTypes(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:384)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: org.hibernate.exception.GenericJDBCException: Unable to acquire JDBC Connection [FATAL: MaxClientsInSessionMode: max clients reached - in Session mode max clients are limited to pool_size] [n/a]
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:63)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:108)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:94)
	at org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.acquireConnectionIfNeeded(LogicalConnectionManagedImpl.java:129)
	at org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.getPhysicalConnection(LogicalConnectionManagedImpl.java:156)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.beginTransaction(HibernateJpaDialect.java:164)
	at org.springframework.orm.jpa.JpaTransactionManager.doBegin(JpaTransactionManager.java:420)
	... 69 common frames omitted
Caused by: org.postgresql.util.PSQLException: FATAL: MaxClientsInSessionMode: max clients reached - in Session mode max clients are limited to pool_size
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2733)
	at org.postgresql.core.v3.QueryExecutorImpl.readStartupMessages(QueryExecutorImpl.java:2845)
	at org.postgresql.core.v3.QueryExecutorImpl.<init>(QueryExecutorImpl.java:176)
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:323)
	at org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:54)
	at org.postgresql.jdbc.PgConnection.<init>(PgConnection.java:273)
	at org.postgresql.Driver.makeConnection(Driver.java:446)
	at org.postgresql.Driver.connect(Driver.java:298)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:137)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:360)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:202)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:461)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:550)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:98)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:111)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.internal.NonContextualJdbcConnectionAccess.obtainConnection(NonContextualJdbcConnectionAccess.java:46)
	at org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.acquireConnectionIfNeeded(LogicalConnectionManagedImpl.java:126)
	... 72 common frames omitted
2025-10-23 01:27:27 [http-nio-8083-exec-6] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.transaction.CannotCreateTransactionException: Could not open JPA EntityManager for transaction]
2025-10-23 01:27:37 [http-nio-8083-exec-8] INFO  o.e.c.s.a.c.ServiceTypeController - GET /service-types - Getting service types (page: 0, size: 20)
2025-10-23 01:28:27 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-10-23 01:28:27 [http-nio-8083-exec-7] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - SQL Error: 0, SQLState: XX000
2025-10-23 01:28:27 [http-nio-8083-exec-8] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-10-23 01:28:27 [http-nio-8083-exec-7] ERROR o.h.e.jdbc.spi.SqlExceptionHelper - FATAL: MaxClientsInSessionMode: max clients reached - in Session mode max clients are limited to pool_size
2025-10-23 01:28:27 [http-nio-8083-exec-7] ERROR o.e.c.s.e.GlobalExceptionHandler - Internal Server Error: 
org.springframework.transaction.CannotCreateTransactionException: Could not open JPA EntityManager for transaction
	at org.springframework.orm.jpa.JpaTransactionManager.doBegin(JpaTransactionManager.java:466)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.startTransaction(AbstractPlatformTransactionManager.java:532)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:405)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.createTransactionIfNecessary(TransactionAspectSupport.java:604)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:373)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at org.example.cuidadodemascotas.servicemicroservice.apis.service.CarerService$$SpringCGLIB$$0.getAllCarersWithServices(<generated>)
	at org.example.cuidadodemascotas.servicemicroservice.apis.controller.CarerController.getAllCarersWithServices(CarerController.java:88)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.validation.beanvalidation.MethodValidationInterceptor.invoke(MethodValidationInterceptor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at org.example.cuidadodemascotas.servicemicroservice.apis.controller.CarerController$$SpringCGLIB$$0.getAllCarersWithServices(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:384)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: org.hibernate.exception.GenericJDBCException: Unable to acquire JDBC Connection [FATAL: MaxClientsInSessionMode: max clients reached - in Session mode max clients are limited to pool_size] [n/a]
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:63)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:108)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:94)
	at org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.acquireConnectionIfNeeded(LogicalConnectionManagedImpl.java:129)
	at org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.getPhysicalConnection(LogicalConnectionManagedImpl.java:156)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.beginTransaction(HibernateJpaDialect.java:164)
	at org.springframework.orm.jpa.JpaTransactionManager.doBegin(JpaTransactionManager.java:420)
	... 69 common frames omitted
Caused by: org.postgresql.util.PSQLException: FATAL: MaxClientsInSessionMode: max clients reached - in Session mode max clients are limited to pool_size
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2733)
	at org.postgresql.core.v3.QueryExecutorImpl.readStartupMessages(QueryExecutorImpl.java:2845)
	at org.postgresql.core.v3.QueryExecutorImpl.<init>(QueryExecutorImpl.java:176)
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:323)
	at org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:54)
	at org.postgresql.jdbc.PgConnection.<init>(PgConnection.java:273)
	at org.postgresql.Driver.makeConnection(Driver.java:446)
	at org.postgresql.Driver.connect(Driver.java:298)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:137)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:360)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:202)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:461)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:550)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:98)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:111)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.internal.NonContextualJdbcConnectionAccess.obtainConnection(NonContextualJdbcConnectionAccess.java:46)
	at org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.acquireConnectionIfNeeded(LogicalConnectionManagedImpl.java:126)
	... 72 common frames omitted
2025-10-23 01:28:27 [http-nio-8083-exec-7] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.transaction.CannotCreateTransactionException: Could not open JPA EntityManager for transaction]
2025-10-23 01:41:31 [restartedMain] INFO  o.e.c.s.ServiceMicroserviceApplication - Starting ServiceMicroserviceApplication using Java 21.0.8 with PID 20468 (C:\Users\HP\IdeaProjects\service-microservice\target\classes started by HP in C:\Users\HP\IdeaProjects\service-microservice)
2025-10-23 01:41:31 [restartedMain] DEBUG o.e.c.s.ServiceMicroserviceApplication - Running with Spring Boot v3.3.4, Spring v6.1.13
2025-10-23 01:41:31 [restartedMain] INFO  o.e.c.s.ServiceMicroserviceApplication - No active profile set, falling back to 1 default profile: "default"
2025-10-23 01:41:31 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-10-23 01:41:31 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-10-23 01:41:33 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-10-23 01:41:33 [restartedMain] DEBUG o.s.d.r.c.RepositoryConfigurationDelegate - Scanning for JPA repositories in packages org.example.cuidadodemascotas.servicemicroservice.apis.repository.
2025-10-23 01:41:33 [restartedMain] DEBUG o.s.d.r.c.RepositoryComponentProvider - Identified candidate component class: file [C:\Users\HP\IdeaProjects\service-microservice\target\classes\org\example\cuidadodemascotas\servicemicroservice\apis\repository\ICarerRepository.class]
2025-10-23 01:41:33 [restartedMain] DEBUG o.s.d.r.c.RepositoryComponentProvider - Identified candidate component class: file [C:\Users\HP\IdeaProjects\service-microservice\target\classes\org\example\cuidadodemascotas\servicemicroservice\apis\repository\ServiceRepository.class]
2025-10-23 01:41:33 [restartedMain] DEBUG o.s.d.r.c.RepositoryComponentProvider - Identified candidate component class: file [C:\Users\HP\IdeaProjects\service-microservice\target\classes\org\example\cuidadodemascotas\servicemicroservice\apis\repository\ServiceTypeRepository.class]
2025-10-23 01:41:33 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 87 ms. Found 3 JPA repository interfaces.
2025-10-23 01:41:34 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8083 (http)
2025-10-23 01:41:34 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-10-23 01:41:34 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.30]
2025-10-23 01:41:34 [restartedMain] INFO  o.a.c.c.C.[.[localhost].[/api/v1] - Initializing Spring embedded WebApplicationContext
2025-10-23 01:41:34 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2640 ms
2025-10-23 01:41:34 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-10-23 01:41:34 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.3.Final
2025-10-23 01:41:34 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-10-23 01:41:35 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-10-23 01:41:35 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-10-23 01:42:37 [restartedMain] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - SQL Error: 0, SQLState: XX000
2025-10-23 01:42:37 [restartedMain] ERROR o.h.e.jdbc.spi.SqlExceptionHelper - FATAL: MaxClientsInSessionMode: max clients reached - in Session mode max clients are limited to pool_size
2025-10-23 01:42:37 [restartedMain] WARN  o.h.e.j.e.i.JdbcEnvironmentInitiator - HHH000342: Could not obtain connection to query metadata
org.hibernate.exception.GenericJDBCException: unable to obtain isolated JDBC connection [FATAL: MaxClientsInSessionMode: max clients reached - in Session mode max clients are limited to pool_size] [n/a]
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:63)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:108)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:94)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcIsolationDelegate.delegateWork(JdbcIsolationDelegate.java:116)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironmentUsingJdbcMetadata(JdbcEnvironmentInitiator.java:292)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:124)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:78)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:130)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:238)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:215)
	at org.hibernate.boot.model.relational.Database.<init>(Database.java:45)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getDatabase(InFlightMetadataCollectorImpl.java:221)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:189)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:171)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1431)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1502)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:205)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:954)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at org.example.cuidadodemascotas.servicemicroservice.ServiceMicroserviceApplication.main(ServiceMicroserviceApplication.java:22)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: org.postgresql.util.PSQLException: FATAL: MaxClientsInSessionMode: max clients reached - in Session mode max clients are limited to pool_size
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2733)
	at org.postgresql.core.v3.QueryExecutorImpl.readStartupMessages(QueryExecutorImpl.java:2845)
	at org.postgresql.core.v3.QueryExecutorImpl.<init>(QueryExecutorImpl.java:176)
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:323)
	at org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:54)
	at org.postgresql.jdbc.PgConnection.<init>(PgConnection.java:273)
	at org.postgresql.Driver.makeConnection(Driver.java:446)
	at org.postgresql.Driver.connect(Driver.java:298)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:137)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:360)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:202)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:461)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:550)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:98)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:111)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:439)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcIsolationDelegate.delegateWork(JdbcIsolationDelegate.java:61)
	... 38 common frames omitted
2025-10-23 01:42:37 [restartedMain] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-10-23 01:42:39 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-10-23 01:42:39 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-10-23 01:42:39 [restartedMain] DEBUG o.s.d.j.r.c.JpaMetamodelMappingContextFactoryBean - Initializing JpaMetamodelMappingContext…
2025-10-23 01:42:39 [restartedMain] DEBUG o.s.d.j.r.c.JpaMetamodelMappingContextFactoryBean - Finished initializing JpaMetamodelMappingContext
2025-10-23 01:42:39 [restartedMain] DEBUG o.s.d.r.c.s.RepositoryFactorySupport - Initializing repository instance for org.example.cuidadodemascotas.servicemicroservice.apis.repository.ICarerRepository…
2025-10-23 01:42:40 [restartedMain] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-10-23 01:42:40 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Did not find named query Carer.findByActiveTrue.count
2025-10-23 01:42:40 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Did not find named query Carer.findByIdAndActiveTrue.count
2025-10-23 01:42:40 [restartedMain] DEBUG o.s.d.r.c.s.RepositoryFactorySupport - Finished creation of repository instance for org.example.cuidadodemascotas.servicemicroservice.apis.repository.ICarerRepository.
2025-10-23 01:42:40 [restartedMain] DEBUG o.s.d.r.c.s.RepositoryFactorySupport - Initializing repository instance for org.example.cuidadodemascotas.servicemicroservice.apis.repository.ServiceRepository…
2025-10-23 01:42:40 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Looking up named query Service.countByActiveTrue
2025-10-23 01:42:40 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Did not find named query Service.countByActiveTrue
2025-10-23 01:42:40 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Did not find named query Service.findAllServices.count
2025-10-23 01:42:40 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Did not find named query Service.findByFilters.count
2025-10-23 01:42:41 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Did not find named query Service.countByCarerId.count
2025-10-23 01:42:41 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Did not find named query Service.findByCarerIdPaged.count
2025-10-23 01:42:41 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Did not find named query Service.countByPriceRange.count
2025-10-23 01:42:41 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Did not find named query Service.findByIdAndActiveTrue.count
2025-10-23 01:42:41 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Looking up named query Service.findByCarerIdAndActiveTrue
2025-10-23 01:42:41 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Did not find named query Service.findByCarerIdAndActiveTrue
2025-10-23 01:42:41 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Did not find named query Service.searchByDescription.count
2025-10-23 01:42:41 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Did not find named query Service.countByServiceTypeId.count
2025-10-23 01:42:41 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Did not find named query Service.findByServiceTypeIdPaged.count
2025-10-23 01:42:41 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Did not find named query Service.findByPriceRangePaged.count
2025-10-23 01:42:41 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Did not find named query Service.findByCarerIdAndServiceTypeIdPaged.count
2025-10-23 01:42:41 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Looking up named query Service.countByCarerIdAndActiveTrue
2025-10-23 01:42:41 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Did not find named query Service.countByCarerIdAndActiveTrue
2025-10-23 01:42:41 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Looking up named query Service.findByServiceTypeIdAndActiveTrue
2025-10-23 01:42:41 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Did not find named query Service.findByServiceTypeIdAndActiveTrue
2025-10-23 01:42:41 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Did not find named query Service.findByServiceTypeIdAndPriceRangePaged.count
2025-10-23 01:42:41 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Did not find named query Service.findByCarerIdAndPriceRangePaged.count
2025-10-23 01:42:41 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Did not find named query Service.existsByCarerAndServiceType.count
2025-10-23 01:42:41 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Looking up named query Service.findByActiveTrue
2025-10-23 01:42:41 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Did not find named query Service.findByActiveTrue
2025-10-23 01:42:41 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Looking up named query Service.findByActiveTrue
2025-10-23 01:42:41 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Did not find named query Service.findByActiveTrue
2025-10-23 01:42:41 [restartedMain] DEBUG o.s.d.r.c.s.RepositoryFactorySupport - Finished creation of repository instance for org.example.cuidadodemascotas.servicemicroservice.apis.repository.ServiceRepository.
2025-10-23 01:42:41 [restartedMain] DEBUG o.s.d.r.c.s.RepositoryFactorySupport - Initializing repository instance for org.example.cuidadodemascotas.servicemicroservice.apis.repository.ServiceTypeRepository…
2025-10-23 01:42:41 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Looking up named query ServiceType.findAllByOrderByNameAsc
2025-10-23 01:42:41 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Did not find named query ServiceType.findAllByOrderByNameAsc
2025-10-23 01:42:41 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Looking up named query ServiceType.findAllByOrderByNameAsc
2025-10-23 01:42:41 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Did not find named query ServiceType.findAllByOrderByNameAsc
2025-10-23 01:42:41 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Looking up named query ServiceType.findByNameIgnoreCase
2025-10-23 01:42:41 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Did not find named query ServiceType.findByNameIgnoreCase
2025-10-23 01:42:41 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Looking up named query ServiceType.existsByNameAndIdNot
2025-10-23 01:42:41 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Did not find named query ServiceType.existsByNameAndIdNot
2025-10-23 01:42:41 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Did not find named query ServiceType.searchByName.count
2025-10-23 01:42:41 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Looking up named query ServiceType.existsByName
2025-10-23 01:42:41 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Did not find named query ServiceType.existsByName
2025-10-23 01:42:41 [restartedMain] DEBUG o.s.d.r.c.s.RepositoryFactorySupport - Finished creation of repository instance for org.example.cuidadodemascotas.servicemicroservice.apis.repository.ServiceTypeRepository.
2025-10-23 01:42:42 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-10-23 01:42:42 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8083 (http) with context path '/api/v1'
2025-10-23 01:42:42 [restartedMain] INFO  o.e.c.s.ServiceMicroserviceApplication - Started ServiceMicroserviceApplication in 71.449 seconds (process running for 72.902)
2025-10-23 01:42:42 [restartedMain] INFO  o.e.c.s.ServiceMicroserviceApplication - ========================================
2025-10-23 01:42:42 [restartedMain] INFO  o.e.c.s.ServiceMicroserviceApplication - Service Microservice Started Successfully!
2025-10-23 01:42:42 [restartedMain] INFO  o.e.c.s.ServiceMicroserviceApplication - Swagger UI: http://localhost:8083/api/v1/swagger-ui.html
2025-10-23 01:42:42 [restartedMain] INFO  o.e.c.s.ServiceMicroserviceApplication - API Docs: http://localhost:8083/api/v1/api-docs
2025-10-23 01:42:42 [restartedMain] INFO  o.e.c.s.ServiceMicroserviceApplication - ========================================
2025-10-23 01:42:45 [http-nio-8083-exec-1] INFO  o.a.c.c.C.[.[localhost].[/api/v1] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-10-23 01:42:45 [http-nio-8083-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-10-23 01:42:45 [http-nio-8083-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 5 ms
2025-10-23 01:42:47 [http-nio-8083-exec-5] INFO  o.s.api.AbstractOpenApiResource - Init duration for springdoc-openapi is: 2063 ms
2025-10-23 01:42:55 [http-nio-8083-exec-7] INFO  o.e.c.s.a.c.ServiceTypeController - GET /service-types - Getting service types (page: 0, size: 20)
2025-10-23 01:42:55 [http-nio-8083-exec-7] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-10-23 01:43:12 [http-nio-8083-exec-7] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - SQL Error: 0, SQLState: XX000
2025-10-23 01:43:12 [http-nio-8083-exec-7] ERROR o.h.e.jdbc.spi.SqlExceptionHelper - FATAL: MaxClientsInSessionMode: max clients reached - in Session mode max clients are limited to pool_size
2025-10-23 01:43:12 [http-nio-8083-exec-7] ERROR o.e.c.s.e.GlobalExceptionHandler - Internal Server Error: 
org.springframework.transaction.CannotCreateTransactionException: Could not open JPA EntityManager for transaction
	at org.springframework.orm.jpa.JpaTransactionManager.doBegin(JpaTransactionManager.java:466)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.startTransaction(AbstractPlatformTransactionManager.java:532)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:405)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.createTransactionIfNecessary(TransactionAspectSupport.java:604)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:373)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at org.example.cuidadodemascotas.servicemicroservice.apis.service.ServiceTypeService$$SpringCGLIB$$0.findAll(<generated>)
	at org.example.cuidadodemascotas.servicemicroservice.apis.controller.ServiceTypeController.getServiceTypes(ServiceTypeController.java:51)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.validation.beanvalidation.MethodValidationInterceptor.invoke(MethodValidationInterceptor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at org.example.cuidadodemascotas.servicemicroservice.apis.controller.ServiceTypeController$$SpringCGLIB$$0.getServiceTypes(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:384)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: org.hibernate.exception.GenericJDBCException: Unable to acquire JDBC Connection [FATAL: MaxClientsInSessionMode: max clients reached - in Session mode max clients are limited to pool_size] [n/a]
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:63)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:108)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:94)
	at org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.acquireConnectionIfNeeded(LogicalConnectionManagedImpl.java:129)
	at org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.getPhysicalConnection(LogicalConnectionManagedImpl.java:156)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.beginTransaction(HibernateJpaDialect.java:164)
	at org.springframework.orm.jpa.JpaTransactionManager.doBegin(JpaTransactionManager.java:420)
	... 69 common frames omitted
Caused by: org.postgresql.util.PSQLException: FATAL: MaxClientsInSessionMode: max clients reached - in Session mode max clients are limited to pool_size
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2733)
	at org.postgresql.core.v3.QueryExecutorImpl.readStartupMessages(QueryExecutorImpl.java:2845)
	at org.postgresql.core.v3.QueryExecutorImpl.<init>(QueryExecutorImpl.java:176)
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:323)
	at org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:54)
	at org.postgresql.jdbc.PgConnection.<init>(PgConnection.java:273)
	at org.postgresql.Driver.makeConnection(Driver.java:446)
	at org.postgresql.Driver.connect(Driver.java:298)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:137)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:360)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:202)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:461)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:550)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:98)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:111)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.internal.NonContextualJdbcConnectionAccess.obtainConnection(NonContextualJdbcConnectionAccess.java:46)
	at org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.acquireConnectionIfNeeded(LogicalConnectionManagedImpl.java:126)
	... 72 common frames omitted
2025-10-23 01:43:12 [http-nio-8083-exec-7] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.transaction.CannotCreateTransactionException: Could not open JPA EntityManager for transaction]
2025-10-23 01:43:52 [http-nio-8083-exec-1] INFO  o.e.c.s.a.c.ServiceTypeController - GET /service-types - Getting service types (page: 0, size: 20)
2025-10-23 01:43:52 [http-nio-8083-exec-1] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-10-23 01:43:57 [http-nio-8083-exec-1] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@f6a06af
2025-10-23 01:43:57 [http-nio-8083-exec-1] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-10-23 01:43:57 [http-nio-8083-exec-1] DEBUG o.e.c.s.a.service.ServiceTypeService - Finding all service types (page: 0, size: 20, sort: null)
2025-10-23 01:43:57 [http-nio-8083-exec-1] DEBUG org.hibernate.SQL - 
    select
        st1_0.id_service_type,
        st1_0.name 
    from
        public.service_types st1_0 
    order by
        st1_0.name 
    offset
        ? rows 
    fetch
        first ? rows only
2025-10-23 01:43:57 [http-nio-8083-exec-1] DEBUG o.e.c.s.a.c.ServiceTypeController - Returning 6 service types
2025-10-23 01:44:02 [http-nio-8083-exec-3] INFO  o.e.c.s.a.c.ServiceTypeController - GET /service-types - Getting service types (page: 0, size: 20)
2025-10-23 01:44:02 [http-nio-8083-exec-3] DEBUG o.e.c.s.a.service.ServiceTypeService - Finding all service types (page: 0, size: 20, sort: null)
2025-10-23 01:44:02 [http-nio-8083-exec-3] DEBUG org.hibernate.SQL - 
    select
        st1_0.id_service_type,
        st1_0.name 
    from
        public.service_types st1_0 
    order by
        st1_0.name 
    offset
        ? rows 
    fetch
        first ? rows only
2025-10-23 01:44:02 [http-nio-8083-exec-3] DEBUG o.e.c.s.a.c.ServiceTypeController - Returning 6 service types
2025-10-23 01:44:02 [http-nio-8083-exec-4] INFO  o.e.c.s.a.c.ServiceController - GET /services - Getting all services (page: 0, size: 100)
2025-10-23 01:44:02 [http-nio-8083-exec-4] DEBUG o.e.c.s.apis.service.ServiceService - Finding all services (page: 0, size: 100)
2025-10-23 01:44:02 [http-nio-8083-exec-4] DEBUG org.hibernate.SQL - 
    select
        s1_0.id_service,
        s1_0.active,
        s1_0.fk_carer,
        s1_0.created_at,
        s1_0.description,
        s1_0.price,
        s1_0.fk_service_type,
        s1_0.updated_at 
    from
        public.services s1_0 
    where
        s1_0.active=true 
    order by
        s1_0.id_service desc 
    fetch
        first ? rows only
2025-10-23 01:44:03 [http-nio-8083-exec-4] DEBUG o.e.c.s.a.c.ServiceController - Returning 7 services
2025-10-23 01:44:04 [http-nio-8083-exec-5] INFO  o.e.c.s.a.controller.CarerController - GET /carers-with-services/9 - Getting carer with services
2025-10-23 01:44:04 [http-nio-8083-exec-5] DEBUG o.e.c.s.apis.service.CarerService - Getting carer with services, carerId: 9
2025-10-23 01:44:04 [http-nio-8083-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_carer,
        c1_0.active,
        c1_0.amount_pet,
        c1_0.created_at,
        c1_0.enum_availability_state,
        c1_0.updated_at,
        c1_0.fk_user 
    from
        public.carers c1_0 
    where
        c1_0.id_carer=? 
        and c1_0.active=true
2025-10-23 01:44:04 [http-nio-8083-exec-5] DEBUG org.hibernate.SQL - 
    select
        s1_0.id_service,
        s1_0.active,
        s1_0.fk_carer,
        s1_0.created_at,
        s1_0.description,
        s1_0.price,
        s1_0.fk_service_type,
        s1_0.updated_at 
    from
        public.services s1_0 
    where
        s1_0.fk_carer=? 
        and s1_0.active
2025-10-23 01:44:04 [http-nio-8083-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id_user,
        u1_0.active,
        c1_0.id_carer,
        c1_0.active,
        c1_0.amount_pet,
        c1_0.created_at,
        c1_0.enum_availability_state,
        c1_0.updated_at,
        c1_0.fk_user,
        u1_0.created_at,
        u1_0.email,
        u1_0.hash_password,
        u1_0.last_name,
        u1_0.name,
        o1_0.id_owner,
        o1_0.active,
        o1_0.created_at,
        o1_0.updated_at,
        o1_0.fk_user,
        u1_0.phone_number,
        u1_0.profile_photo,
        u1_0.updated_at 
    from
        public.users u1_0 
    left join
        public.carers c1_0 
            on u1_0.id_user=c1_0.fk_user 
    left join
        public.owners o1_0 
            on u1_0.id_user=o1_0.fk_user 
    where
        u1_0.id_user=?
2025-10-23 01:44:05 [http-nio-8083-exec-6] INFO  o.e.c.s.a.c.ServiceTypeController - GET /service-types - Getting service types (page: 0, size: 20)
2025-10-23 01:44:05 [http-nio-8083-exec-6] DEBUG o.e.c.s.a.service.ServiceTypeService - Finding all service types (page: 0, size: 20, sort: null)
2025-10-23 01:44:05 [http-nio-8083-exec-6] DEBUG org.hibernate.SQL - 
    select
        st1_0.id_service_type,
        st1_0.name 
    from
        public.service_types st1_0 
    order by
        st1_0.name 
    offset
        ? rows 
    fetch
        first ? rows only
2025-10-23 01:44:05 [http-nio-8083-exec-6] DEBUG o.e.c.s.a.c.ServiceTypeController - Returning 6 service types
2025-10-23 01:44:05 [http-nio-8083-exec-7] INFO  o.e.c.s.a.c.ServiceController - GET /services/carer/9 - Getting services by carer (page: 0, size: 10)
2025-10-23 01:44:05 [http-nio-8083-exec-7] DEBUG o.e.c.s.apis.service.ServiceService - Finding services by carer id: 9 (page: 0, size: 10)
2025-10-23 01:44:05 [http-nio-8083-exec-7] DEBUG org.hibernate.SQL - 
    select
        s1_0.id_service,
        s1_0.active,
        s1_0.fk_carer,
        s1_0.created_at,
        s1_0.description,
        s1_0.price,
        s1_0.fk_service_type,
        s1_0.updated_at 
    from
        public.services s1_0 
    where
        s1_0.fk_carer=? 
        and s1_0.active=true 
    order by
        s1_0.id_service desc 
    fetch
        first ? rows only
2025-10-23 01:44:05 [http-nio-8083-exec-7] DEBUG o.e.c.s.a.c.ServiceController - Returning 1 services for carer 9
2025-10-23 01:44:21 [http-nio-8083-exec-8] INFO  o.e.c.s.a.controller.CarerController - GET /carers-with-services - Getting all carers with services
2025-10-23 01:44:21 [http-nio-8083-exec-8] INFO  o.e.c.s.apis.service.CarerService - Getting all carers with their services
2025-10-23 01:44:21 [http-nio-8083-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_carer,
        c1_0.active,
        c1_0.amount_pet,
        c1_0.created_at,
        c1_0.enum_availability_state,
        c1_0.updated_at,
        c1_0.fk_user 
    from
        public.carers c1_0 
    where
        c1_0.active=true
2025-10-23 01:44:21 [http-nio-8083-exec-8] DEBUG org.hibernate.SQL - 
    select
        s1_0.id_service,
        s1_0.active,
        s1_0.fk_carer,
        s1_0.created_at,
        s1_0.description,
        s1_0.price,
        s1_0.fk_service_type,
        s1_0.updated_at 
    from
        public.services s1_0 
    where
        s1_0.fk_carer=? 
        and s1_0.active
2025-10-23 01:44:21 [http-nio-8083-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id_user,
        u1_0.active,
        c1_0.id_carer,
        c1_0.active,
        c1_0.amount_pet,
        c1_0.created_at,
        c1_0.enum_availability_state,
        c1_0.updated_at,
        c1_0.fk_user,
        u1_0.created_at,
        u1_0.email,
        u1_0.hash_password,
        u1_0.last_name,
        u1_0.name,
        o1_0.id_owner,
        o1_0.active,
        o1_0.created_at,
        o1_0.updated_at,
        o1_0.fk_user,
        u1_0.phone_number,
        u1_0.profile_photo,
        u1_0.updated_at 
    from
        public.users u1_0 
    left join
        public.carers c1_0 
            on u1_0.id_user=c1_0.fk_user 
    left join
        public.owners o1_0 
            on u1_0.id_user=o1_0.fk_user 
    where
        u1_0.id_user=?
2025-10-23 01:44:21 [http-nio-8083-exec-8] DEBUG org.hibernate.SQL - 
    select
        s1_0.id_service,
        s1_0.active,
        s1_0.fk_carer,
        s1_0.created_at,
        s1_0.description,
        s1_0.price,
        s1_0.fk_service_type,
        s1_0.updated_at 
    from
        public.services s1_0 
    where
        s1_0.fk_carer=? 
        and s1_0.active
2025-10-23 01:44:21 [http-nio-8083-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id_user,
        u1_0.active,
        c1_0.id_carer,
        c1_0.active,
        c1_0.amount_pet,
        c1_0.created_at,
        c1_0.enum_availability_state,
        c1_0.updated_at,
        c1_0.fk_user,
        u1_0.created_at,
        u1_0.email,
        u1_0.hash_password,
        u1_0.last_name,
        u1_0.name,
        o1_0.id_owner,
        o1_0.active,
        o1_0.created_at,
        o1_0.updated_at,
        o1_0.fk_user,
        u1_0.phone_number,
        u1_0.profile_photo,
        u1_0.updated_at 
    from
        public.users u1_0 
    left join
        public.carers c1_0 
            on u1_0.id_user=c1_0.fk_user 
    left join
        public.owners o1_0 
            on u1_0.id_user=o1_0.fk_user 
    where
        u1_0.id_user=?
2025-10-23 01:44:21 [http-nio-8083-exec-8] DEBUG org.hibernate.SQL - 
    select
        s1_0.id_service,
        s1_0.active,
        s1_0.fk_carer,
        s1_0.created_at,
        s1_0.description,
        s1_0.price,
        s1_0.fk_service_type,
        s1_0.updated_at 
    from
        public.services s1_0 
    where
        s1_0.fk_carer=? 
        and s1_0.active
2025-10-23 01:44:21 [http-nio-8083-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id_user,
        u1_0.active,
        c1_0.id_carer,
        c1_0.active,
        c1_0.amount_pet,
        c1_0.created_at,
        c1_0.enum_availability_state,
        c1_0.updated_at,
        c1_0.fk_user,
        u1_0.created_at,
        u1_0.email,
        u1_0.hash_password,
        u1_0.last_name,
        u1_0.name,
        o1_0.id_owner,
        o1_0.active,
        o1_0.created_at,
        o1_0.updated_at,
        o1_0.fk_user,
        u1_0.phone_number,
        u1_0.profile_photo,
        u1_0.updated_at 
    from
        public.users u1_0 
    left join
        public.carers c1_0 
            on u1_0.id_user=c1_0.fk_user 
    left join
        public.owners o1_0 
            on u1_0.id_user=o1_0.fk_user 
    where
        u1_0.id_user=?
2025-10-23 01:44:22 [http-nio-8083-exec-8] DEBUG org.hibernate.SQL - 
    select
        s1_0.id_service,
        s1_0.active,
        s1_0.fk_carer,
        s1_0.created_at,
        s1_0.description,
        s1_0.price,
        s1_0.fk_service_type,
        s1_0.updated_at 
    from
        public.services s1_0 
    where
        s1_0.fk_carer=? 
        and s1_0.active
2025-10-23 01:44:22 [http-nio-8083-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id_user,
        u1_0.active,
        c1_0.id_carer,
        c1_0.active,
        c1_0.amount_pet,
        c1_0.created_at,
        c1_0.enum_availability_state,
        c1_0.updated_at,
        c1_0.fk_user,
        u1_0.created_at,
        u1_0.email,
        u1_0.hash_password,
        u1_0.last_name,
        u1_0.name,
        o1_0.id_owner,
        o1_0.active,
        o1_0.created_at,
        o1_0.updated_at,
        o1_0.fk_user,
        u1_0.phone_number,
        u1_0.profile_photo,
        u1_0.updated_at 
    from
        public.users u1_0 
    left join
        public.carers c1_0 
            on u1_0.id_user=c1_0.fk_user 
    left join
        public.owners o1_0 
            on u1_0.id_user=o1_0.fk_user 
    where
        u1_0.id_user=?
2025-10-23 01:44:22 [http-nio-8083-exec-8] DEBUG org.hibernate.SQL - 
    select
        s1_0.id_service,
        s1_0.active,
        s1_0.fk_carer,
        s1_0.created_at,
        s1_0.description,
        s1_0.price,
        s1_0.fk_service_type,
        s1_0.updated_at 
    from
        public.services s1_0 
    where
        s1_0.fk_carer=? 
        and s1_0.active
2025-10-23 01:44:22 [http-nio-8083-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id_user,
        u1_0.active,
        c1_0.id_carer,
        c1_0.active,
        c1_0.amount_pet,
        c1_0.created_at,
        c1_0.enum_availability_state,
        c1_0.updated_at,
        c1_0.fk_user,
        u1_0.created_at,
        u1_0.email,
        u1_0.hash_password,
        u1_0.last_name,
        u1_0.name,
        o1_0.id_owner,
        o1_0.active,
        o1_0.created_at,
        o1_0.updated_at,
        o1_0.fk_user,
        u1_0.phone_number,
        u1_0.profile_photo,
        u1_0.updated_at 
    from
        public.users u1_0 
    left join
        public.carers c1_0 
            on u1_0.id_user=c1_0.fk_user 
    left join
        public.owners o1_0 
            on u1_0.id_user=o1_0.fk_user 
    where
        u1_0.id_user=?
2025-10-23 01:44:22 [http-nio-8083-exec-8] DEBUG org.hibernate.SQL - 
    select
        s1_0.id_service,
        s1_0.active,
        s1_0.fk_carer,
        s1_0.created_at,
        s1_0.description,
        s1_0.price,
        s1_0.fk_service_type,
        s1_0.updated_at 
    from
        public.services s1_0 
    where
        s1_0.fk_carer=? 
        and s1_0.active
2025-10-23 01:44:22 [http-nio-8083-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id_user,
        u1_0.active,
        c1_0.id_carer,
        c1_0.active,
        c1_0.amount_pet,
        c1_0.created_at,
        c1_0.enum_availability_state,
        c1_0.updated_at,
        c1_0.fk_user,
        u1_0.created_at,
        u1_0.email,
        u1_0.hash_password,
        u1_0.last_name,
        u1_0.name,
        o1_0.id_owner,
        o1_0.active,
        o1_0.created_at,
        o1_0.updated_at,
        o1_0.fk_user,
        u1_0.phone_number,
        u1_0.profile_photo,
        u1_0.updated_at 
    from
        public.users u1_0 
    left join
        public.carers c1_0 
            on u1_0.id_user=c1_0.fk_user 
    left join
        public.owners o1_0 
            on u1_0.id_user=o1_0.fk_user 
    where
        u1_0.id_user=?
2025-10-23 01:44:22 [http-nio-8083-exec-8] DEBUG org.hibernate.SQL - 
    select
        s1_0.id_service,
        s1_0.active,
        s1_0.fk_carer,
        s1_0.created_at,
        s1_0.description,
        s1_0.price,
        s1_0.fk_service_type,
        s1_0.updated_at 
    from
        public.services s1_0 
    where
        s1_0.fk_carer=? 
        and s1_0.active
2025-10-23 01:44:23 [http-nio-8083-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id_user,
        u1_0.active,
        c1_0.id_carer,
        c1_0.active,
        c1_0.amount_pet,
        c1_0.created_at,
        c1_0.enum_availability_state,
        c1_0.updated_at,
        c1_0.fk_user,
        u1_0.created_at,
        u1_0.email,
        u1_0.hash_password,
        u1_0.last_name,
        u1_0.name,
        o1_0.id_owner,
        o1_0.active,
        o1_0.created_at,
        o1_0.updated_at,
        o1_0.fk_user,
        u1_0.phone_number,
        u1_0.profile_photo,
        u1_0.updated_at 
    from
        public.users u1_0 
    left join
        public.carers c1_0 
            on u1_0.id_user=c1_0.fk_user 
    left join
        public.owners o1_0 
            on u1_0.id_user=o1_0.fk_user 
    where
        u1_0.id_user=?
2025-10-23 01:44:23 [http-nio-8083-exec-8] INFO  o.e.c.s.apis.service.CarerService - Found 7 carers with services
2025-10-23 01:51:37 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-10-23 01:51:37 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-10-23 01:51:38 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-10-23 01:56:10 [restartedMain] INFO  o.e.c.s.ServiceMicroserviceApplication - Starting ServiceMicroserviceApplication using Java 21.0.8 with PID 17556 (C:\Users\HP\IdeaProjects\service-microservice\target\classes started by HP in C:\Users\HP\IdeaProjects\service-microservice)
2025-10-23 01:56:10 [restartedMain] DEBUG o.e.c.s.ServiceMicroserviceApplication - Running with Spring Boot v3.3.4, Spring v6.1.13
2025-10-23 01:56:10 [restartedMain] INFO  o.e.c.s.ServiceMicroserviceApplication - No active profile set, falling back to 1 default profile: "default"
2025-10-23 01:56:10 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-10-23 01:56:10 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-10-23 01:56:12 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-10-23 01:56:12 [restartedMain] DEBUG o.s.d.r.c.RepositoryConfigurationDelegate - Scanning for JPA repositories in packages org.example.cuidadodemascotas.servicemicroservice.apis.repository.
2025-10-23 01:56:12 [restartedMain] DEBUG o.s.d.r.c.RepositoryComponentProvider - Identified candidate component class: file [C:\Users\HP\IdeaProjects\service-microservice\target\classes\org\example\cuidadodemascotas\servicemicroservice\apis\repository\ICarerRepository.class]
2025-10-23 01:56:12 [restartedMain] DEBUG o.s.d.r.c.RepositoryComponentProvider - Identified candidate component class: file [C:\Users\HP\IdeaProjects\service-microservice\target\classes\org\example\cuidadodemascotas\servicemicroservice\apis\repository\ServiceRepository.class]
2025-10-23 01:56:12 [restartedMain] DEBUG o.s.d.r.c.RepositoryComponentProvider - Identified candidate component class: file [C:\Users\HP\IdeaProjects\service-microservice\target\classes\org\example\cuidadodemascotas\servicemicroservice\apis\repository\ServiceTypeRepository.class]
2025-10-23 01:56:12 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 92 ms. Found 3 JPA repository interfaces.
2025-10-23 01:56:15 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8083 (http)
2025-10-23 01:56:15 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-10-23 01:56:15 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.30]
2025-10-23 01:56:15 [restartedMain] INFO  o.a.c.c.C.[.[localhost].[/api/v1] - Initializing Spring embedded WebApplicationContext
2025-10-23 01:56:15 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 4166 ms
2025-10-23 01:56:15 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-10-23 01:56:15 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.3.Final
2025-10-23 01:56:15 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-10-23 01:56:15 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-10-23 01:56:15 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-10-23 01:56:16 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@51e788c3
2025-10-23 01:56:16 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-10-23 01:56:17 [restartedMain] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-10-23 01:56:18 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-10-23 01:56:18 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-10-23 01:56:18 [restartedMain] DEBUG o.s.d.j.r.c.JpaMetamodelMappingContextFactoryBean - Initializing JpaMetamodelMappingContext…
2025-10-23 01:56:18 [restartedMain] DEBUG o.s.d.j.r.c.JpaMetamodelMappingContextFactoryBean - Finished initializing JpaMetamodelMappingContext
2025-10-23 01:56:19 [restartedMain] DEBUG o.s.d.r.c.s.RepositoryFactorySupport - Initializing repository instance for org.example.cuidadodemascotas.servicemicroservice.apis.repository.ICarerRepository…
2025-10-23 01:56:19 [restartedMain] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-10-23 01:56:19 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Did not find named query Carer.findByActiveTrue.count
2025-10-23 01:56:19 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Did not find named query Carer.findByIdAndActiveTrue.count
2025-10-23 01:56:19 [restartedMain] DEBUG o.s.d.r.c.s.RepositoryFactorySupport - Finished creation of repository instance for org.example.cuidadodemascotas.servicemicroservice.apis.repository.ICarerRepository.
2025-10-23 01:56:19 [restartedMain] DEBUG o.s.d.r.c.s.RepositoryFactorySupport - Initializing repository instance for org.example.cuidadodemascotas.servicemicroservice.apis.repository.ServiceRepository…
2025-10-23 01:56:19 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Did not find named query Service.findByCarerIdAndServiceTypeIdPaged.count
2025-10-23 01:56:19 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Looking up named query Service.findByServiceTypeIdAndActiveTrue
2025-10-23 01:56:19 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Did not find named query Service.findByServiceTypeIdAndActiveTrue
2025-10-23 01:56:19 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Looking up named query Service.countByCarerIdAndActiveTrue
2025-10-23 01:56:19 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Did not find named query Service.countByCarerIdAndActiveTrue
2025-10-23 01:56:19 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Did not find named query Service.countByCarerId.count
2025-10-23 01:56:19 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Did not find named query Service.countByPriceRange.count
2025-10-23 01:56:19 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Did not find named query Service.findAllServices.count
2025-10-23 01:56:19 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Did not find named query Service.findByCarerIdPaged.count
2025-10-23 01:56:19 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Did not find named query Service.findByFilters.count
2025-10-23 01:56:19 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Looking up named query Service.countByActiveTrue
2025-10-23 01:56:19 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Did not find named query Service.countByActiveTrue
2025-10-23 01:56:19 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Did not find named query Service.findByServiceTypeIdPaged.count
2025-10-23 01:56:19 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Did not find named query Service.countByServiceTypeId.count
2025-10-23 01:56:19 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Did not find named query Service.findByPriceRangePaged.count
2025-10-23 01:56:19 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Did not find named query Service.searchByDescription.count
2025-10-23 01:56:20 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Looking up named query Service.findByCarerIdAndActiveTrue
2025-10-23 01:56:20 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Did not find named query Service.findByCarerIdAndActiveTrue
2025-10-23 01:56:20 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Did not find named query Service.findByIdAndActiveTrue.count
2025-10-23 01:56:20 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Did not find named query Service.findByCarerIdAndPriceRangePaged.count
2025-10-23 01:56:20 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Did not find named query Service.existsByCarerAndServiceType.count
2025-10-23 01:56:20 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Did not find named query Service.findByServiceTypeIdAndPriceRangePaged.count
2025-10-23 01:56:20 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Looking up named query Service.findByActiveTrue
2025-10-23 01:56:20 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Did not find named query Service.findByActiveTrue
2025-10-23 01:56:20 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Looking up named query Service.findByActiveTrue
2025-10-23 01:56:20 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Did not find named query Service.findByActiveTrue
2025-10-23 01:56:20 [restartedMain] DEBUG o.s.d.r.c.s.RepositoryFactorySupport - Finished creation of repository instance for org.example.cuidadodemascotas.servicemicroservice.apis.repository.ServiceRepository.
2025-10-23 01:56:20 [restartedMain] DEBUG o.s.d.r.c.s.RepositoryFactorySupport - Initializing repository instance for org.example.cuidadodemascotas.servicemicroservice.apis.repository.ServiceTypeRepository…
2025-10-23 01:56:20 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Looking up named query ServiceType.existsByName
2025-10-23 01:56:20 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Did not find named query ServiceType.existsByName
2025-10-23 01:56:20 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Did not find named query ServiceType.searchByName.count
2025-10-23 01:56:20 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Looking up named query ServiceType.existsByNameAndIdNot
2025-10-23 01:56:20 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Did not find named query ServiceType.existsByNameAndIdNot
2025-10-23 01:56:20 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Looking up named query ServiceType.findAllByOrderByNameAsc
2025-10-23 01:56:20 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Did not find named query ServiceType.findAllByOrderByNameAsc
2025-10-23 01:56:20 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Looking up named query ServiceType.findAllByOrderByNameAsc
2025-10-23 01:56:20 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Did not find named query ServiceType.findAllByOrderByNameAsc
2025-10-23 01:56:20 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Looking up named query ServiceType.findByNameIgnoreCase
2025-10-23 01:56:20 [restartedMain] DEBUG o.s.d.j.repository.query.NamedQuery - Did not find named query ServiceType.findByNameIgnoreCase
2025-10-23 01:56:20 [restartedMain] DEBUG o.s.d.r.c.s.RepositoryFactorySupport - Finished creation of repository instance for org.example.cuidadodemascotas.servicemicroservice.apis.repository.ServiceTypeRepository.
2025-10-23 01:56:21 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-10-23 01:56:21 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8083 (http) with context path '/api/v1'
2025-10-23 01:56:21 [restartedMain] INFO  o.e.c.s.ServiceMicroserviceApplication - Started ServiceMicroserviceApplication in 11.016 seconds (process running for 12.691)
2025-10-23 01:56:21 [restartedMain] INFO  o.e.c.s.ServiceMicroserviceApplication - ========================================
2025-10-23 01:56:21 [restartedMain] INFO  o.e.c.s.ServiceMicroserviceApplication - Service Microservice Started Successfully!
2025-10-23 01:56:21 [restartedMain] INFO  o.e.c.s.ServiceMicroserviceApplication - Swagger UI: http://localhost:8083/api/v1/swagger-ui.html
2025-10-23 01:56:21 [restartedMain] INFO  o.e.c.s.ServiceMicroserviceApplication - API Docs: http://localhost:8083/api/v1/api-docs
2025-10-23 01:56:21 [restartedMain] INFO  o.e.c.s.ServiceMicroserviceApplication - ========================================
2025-10-23 01:56:24 [http-nio-8083-exec-1] INFO  o.a.c.c.C.[.[localhost].[/api/v1] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-10-23 01:56:24 [http-nio-8083-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-10-23 01:56:24 [http-nio-8083-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 3 ms
2025-10-23 01:56:26 [http-nio-8083-exec-6] INFO  o.s.api.AbstractOpenApiResource - Init duration for springdoc-openapi is: 1688 ms
2025-10-23 01:56:37 [http-nio-8083-exec-8] INFO  o.e.c.s.a.controller.CarerController - GET /carers - Getting all active carers without services
2025-10-23 01:56:37 [http-nio-8083-exec-8] INFO  o.e.c.s.apis.service.CarerService - Getting all active carers (without services)
2025-10-23 01:56:37 [http-nio-8083-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_carer,
        c1_0.active,
        c1_0.amount_pet,
        c1_0.created_at,
        c1_0.enum_availability_state,
        c1_0.updated_at,
        c1_0.fk_user 
    from
        public.carers c1_0 
    where
        c1_0.active=true
2025-10-23 01:56:37 [http-nio-8083-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id_user,
        u1_0.active,
        c1_0.id_carer,
        c1_0.active,
        c1_0.amount_pet,
        c1_0.created_at,
        c1_0.enum_availability_state,
        c1_0.updated_at,
        c1_0.fk_user,
        u1_0.created_at,
        u1_0.email,
        u1_0.hash_password,
        u1_0.last_name,
        u1_0.name,
        o1_0.id_owner,
        o1_0.active,
        o1_0.created_at,
        o1_0.updated_at,
        o1_0.fk_user,
        u1_0.phone_number,
        u1_0.profile_photo,
        u1_0.updated_at 
    from
        public.users u1_0 
    left join
        public.carers c1_0 
            on u1_0.id_user=c1_0.fk_user 
    left join
        public.owners o1_0 
            on u1_0.id_user=o1_0.fk_user 
    where
        u1_0.id_user=?
2025-10-23 01:56:37 [http-nio-8083-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id_user,
        u1_0.active,
        c1_0.id_carer,
        c1_0.active,
        c1_0.amount_pet,
        c1_0.created_at,
        c1_0.enum_availability_state,
        c1_0.updated_at,
        c1_0.fk_user,
        u1_0.created_at,
        u1_0.email,
        u1_0.hash_password,
        u1_0.last_name,
        u1_0.name,
        o1_0.id_owner,
        o1_0.active,
        o1_0.created_at,
        o1_0.updated_at,
        o1_0.fk_user,
        u1_0.phone_number,
        u1_0.profile_photo,
        u1_0.updated_at 
    from
        public.users u1_0 
    left join
        public.carers c1_0 
            on u1_0.id_user=c1_0.fk_user 
    left join
        public.owners o1_0 
            on u1_0.id_user=o1_0.fk_user 
    where
        u1_0.id_user=?
2025-10-23 01:56:37 [http-nio-8083-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id_user,
        u1_0.active,
        c1_0.id_carer,
        c1_0.active,
        c1_0.amount_pet,
        c1_0.created_at,
        c1_0.enum_availability_state,
        c1_0.updated_at,
        c1_0.fk_user,
        u1_0.created_at,
        u1_0.email,
        u1_0.hash_password,
        u1_0.last_name,
        u1_0.name,
        o1_0.id_owner,
        o1_0.active,
        o1_0.created_at,
        o1_0.updated_at,
        o1_0.fk_user,
        u1_0.phone_number,
        u1_0.profile_photo,
        u1_0.updated_at 
    from
        public.users u1_0 
    left join
        public.carers c1_0 
            on u1_0.id_user=c1_0.fk_user 
    left join
        public.owners o1_0 
            on u1_0.id_user=o1_0.fk_user 
    where
        u1_0.id_user=?
2025-10-23 01:56:37 [http-nio-8083-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id_user,
        u1_0.active,
        c1_0.id_carer,
        c1_0.active,
        c1_0.amount_pet,
        c1_0.created_at,
        c1_0.enum_availability_state,
        c1_0.updated_at,
        c1_0.fk_user,
        u1_0.created_at,
        u1_0.email,
        u1_0.hash_password,
        u1_0.last_name,
        u1_0.name,
        o1_0.id_owner,
        o1_0.active,
        o1_0.created_at,
        o1_0.updated_at,
        o1_0.fk_user,
        u1_0.phone_number,
        u1_0.profile_photo,
        u1_0.updated_at 
    from
        public.users u1_0 
    left join
        public.carers c1_0 
            on u1_0.id_user=c1_0.fk_user 
    left join
        public.owners o1_0 
            on u1_0.id_user=o1_0.fk_user 
    where
        u1_0.id_user=?
2025-10-23 01:56:37 [http-nio-8083-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id_user,
        u1_0.active,
        c1_0.id_carer,
        c1_0.active,
        c1_0.amount_pet,
        c1_0.created_at,
        c1_0.enum_availability_state,
        c1_0.updated_at,
        c1_0.fk_user,
        u1_0.created_at,
        u1_0.email,
        u1_0.hash_password,
        u1_0.last_name,
        u1_0.name,
        o1_0.id_owner,
        o1_0.active,
        o1_0.created_at,
        o1_0.updated_at,
        o1_0.fk_user,
        u1_0.phone_number,
        u1_0.profile_photo,
        u1_0.updated_at 
    from
        public.users u1_0 
    left join
        public.carers c1_0 
            on u1_0.id_user=c1_0.fk_user 
    left join
        public.owners o1_0 
            on u1_0.id_user=o1_0.fk_user 
    where
        u1_0.id_user=?
2025-10-23 01:56:37 [http-nio-8083-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id_user,
        u1_0.active,
        c1_0.id_carer,
        c1_0.active,
        c1_0.amount_pet,
        c1_0.created_at,
        c1_0.enum_availability_state,
        c1_0.updated_at,
        c1_0.fk_user,
        u1_0.created_at,
        u1_0.email,
        u1_0.hash_password,
        u1_0.last_name,
        u1_0.name,
        o1_0.id_owner,
        o1_0.active,
        o1_0.created_at,
        o1_0.updated_at,
        o1_0.fk_user,
        u1_0.phone_number,
        u1_0.profile_photo,
        u1_0.updated_at 
    from
        public.users u1_0 
    left join
        public.carers c1_0 
            on u1_0.id_user=c1_0.fk_user 
    left join
        public.owners o1_0 
            on u1_0.id_user=o1_0.fk_user 
    where
        u1_0.id_user=?
2025-10-23 01:56:38 [http-nio-8083-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id_user,
        u1_0.active,
        c1_0.id_carer,
        c1_0.active,
        c1_0.amount_pet,
        c1_0.created_at,
        c1_0.enum_availability_state,
        c1_0.updated_at,
        c1_0.fk_user,
        u1_0.created_at,
        u1_0.email,
        u1_0.hash_password,
        u1_0.last_name,
        u1_0.name,
        o1_0.id_owner,
        o1_0.active,
        o1_0.created_at,
        o1_0.updated_at,
        o1_0.fk_user,
        u1_0.phone_number,
        u1_0.profile_photo,
        u1_0.updated_at 
    from
        public.users u1_0 
    left join
        public.carers c1_0 
            on u1_0.id_user=c1_0.fk_user 
    left join
        public.owners o1_0 
            on u1_0.id_user=o1_0.fk_user 
    where
        u1_0.id_user=?
2025-10-23 01:56:38 [http-nio-8083-exec-8] INFO  o.e.c.s.apis.service.CarerService - Found 7 active carers
2025-10-23 01:58:40 [http-nio-8083-exec-6] INFO  o.e.c.s.a.c.ServiceTypeController - GET /service-types - Getting service types (page: 0, size: 20)
2025-10-23 01:58:40 [http-nio-8083-exec-6] DEBUG o.e.c.s.a.service.ServiceTypeService - Finding all service types (page: 0, size: 20, sort: null)
2025-10-23 01:58:40 [http-nio-8083-exec-6] DEBUG org.hibernate.SQL - 
    select
        st1_0.id_service_type,
        st1_0.name 
    from
        public.service_types st1_0 
    order by
        st1_0.name 
    offset
        ? rows 
    fetch
        first ? rows only
2025-10-23 01:58:40 [http-nio-8083-exec-6] DEBUG o.e.c.s.a.c.ServiceTypeController - Returning 6 service types
2025-10-23 01:58:42 [http-nio-8083-exec-8] INFO  o.e.c.s.a.c.ServiceTypeController - GET /service-types - Getting service types (page: 0, size: 20)
2025-10-23 01:58:43 [http-nio-8083-exec-8] DEBUG o.e.c.s.a.service.ServiceTypeService - Finding all service types (page: 0, size: 20, sort: null)
2025-10-23 01:58:43 [http-nio-8083-exec-8] DEBUG org.hibernate.SQL - 
    select
        st1_0.id_service_type,
        st1_0.name 
    from
        public.service_types st1_0 
    order by
        st1_0.name 
    offset
        ? rows 
    fetch
        first ? rows only
2025-10-23 01:58:43 [http-nio-8083-exec-8] DEBUG o.e.c.s.a.c.ServiceTypeController - Returning 6 service types
2025-10-23 01:58:43 [http-nio-8083-exec-9] INFO  o.e.c.s.a.c.ServiceController - GET /services - Getting all services (page: 0, size: 100)
2025-10-23 01:58:43 [http-nio-8083-exec-9] DEBUG o.e.c.s.apis.service.ServiceService - Finding all services (page: 0, size: 100)
2025-10-23 01:58:43 [http-nio-8083-exec-9] DEBUG org.hibernate.SQL - 
    select
        s1_0.id_service,
        s1_0.active,
        s1_0.fk_carer,
        s1_0.created_at,
        s1_0.description,
        s1_0.price,
        s1_0.fk_service_type,
        s1_0.updated_at 
    from
        public.services s1_0 
    where
        s1_0.active=true 
    order by
        s1_0.id_service desc 
    fetch
        first ? rows only
2025-10-23 01:58:43 [http-nio-8083-exec-9] DEBUG o.e.c.s.a.c.ServiceController - Returning 7 services
2025-10-23 01:58:44 [http-nio-8083-exec-10] INFO  o.e.c.s.a.controller.CarerController - GET /carers-with-services/9 - Getting carer with services
2025-10-23 01:58:45 [http-nio-8083-exec-10] DEBUG o.e.c.s.apis.service.CarerService - Getting carer with services, carerId: 9
2025-10-23 01:58:45 [http-nio-8083-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_carer,
        c1_0.active,
        c1_0.amount_pet,
        c1_0.created_at,
        c1_0.enum_availability_state,
        c1_0.updated_at,
        c1_0.fk_user 
    from
        public.carers c1_0 
    where
        c1_0.id_carer=? 
        and c1_0.active=true
2025-10-23 01:58:45 [http-nio-8083-exec-10] DEBUG org.hibernate.SQL - 
    select
        s1_0.id_service,
        s1_0.active,
        s1_0.fk_carer,
        s1_0.created_at,
        s1_0.description,
        s1_0.price,
        s1_0.fk_service_type,
        s1_0.updated_at 
    from
        public.services s1_0 
    where
        s1_0.fk_carer=? 
        and s1_0.active
2025-10-23 01:58:45 [http-nio-8083-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id_user,
        u1_0.active,
        c1_0.id_carer,
        c1_0.active,
        c1_0.amount_pet,
        c1_0.created_at,
        c1_0.enum_availability_state,
        c1_0.updated_at,
        c1_0.fk_user,
        u1_0.created_at,
        u1_0.email,
        u1_0.hash_password,
        u1_0.last_name,
        u1_0.name,
        o1_0.id_owner,
        o1_0.active,
        o1_0.created_at,
        o1_0.updated_at,
        o1_0.fk_user,
        u1_0.phone_number,
        u1_0.profile_photo,
        u1_0.updated_at 
    from
        public.users u1_0 
    left join
        public.carers c1_0 
            on u1_0.id_user=c1_0.fk_user 
    left join
        public.owners o1_0 
            on u1_0.id_user=o1_0.fk_user 
    where
        u1_0.id_user=?
2025-10-23 01:58:45 [http-nio-8083-exec-1] INFO  o.e.c.s.a.c.ServiceTypeController - GET /service-types - Getting service types (page: 0, size: 20)
2025-10-23 01:58:45 [http-nio-8083-exec-1] DEBUG o.e.c.s.a.service.ServiceTypeService - Finding all service types (page: 0, size: 20, sort: null)
2025-10-23 01:58:45 [http-nio-8083-exec-1] DEBUG org.hibernate.SQL - 
    select
        st1_0.id_service_type,
        st1_0.name 
    from
        public.service_types st1_0 
    order by
        st1_0.name 
    offset
        ? rows 
    fetch
        first ? rows only
2025-10-23 01:58:45 [http-nio-8083-exec-1] DEBUG o.e.c.s.a.c.ServiceTypeController - Returning 6 service types
2025-10-23 01:58:45 [http-nio-8083-exec-2] INFO  o.e.c.s.a.c.ServiceController - GET /services/carer/9 - Getting services by carer (page: 0, size: 10)
2025-10-23 01:58:45 [http-nio-8083-exec-2] DEBUG o.e.c.s.apis.service.ServiceService - Finding services by carer id: 9 (page: 0, size: 10)
2025-10-23 01:58:45 [http-nio-8083-exec-2] DEBUG org.hibernate.SQL - 
    select
        s1_0.id_service,
        s1_0.active,
        s1_0.fk_carer,
        s1_0.created_at,
        s1_0.description,
        s1_0.price,
        s1_0.fk_service_type,
        s1_0.updated_at 
    from
        public.services s1_0 
    where
        s1_0.fk_carer=? 
        and s1_0.active=true 
    order by
        s1_0.id_service desc 
    fetch
        first ? rows only
2025-10-23 01:58:45 [http-nio-8083-exec-2] DEBUG o.e.c.s.a.c.ServiceController - Returning 1 services for carer 9
2025-10-23 01:58:53 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-10-23 01:58:53 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-10-23 01:58:53 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
